id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/13631:819,deployability,continu,continuously,819,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:832,deployability,updat,update,832,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:960,deployability,updat,update,960,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:744,energy efficiency,Draw,Draw,744,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:754,energy efficiency,Draw,Draw,754,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:302,integrability,version,version,302,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:302,modifiability,version,version,302,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:914,performance,time,time,914,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:14,reliability,doe,does,14,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:149,reliability,doe,does,149,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:951,reliability,doe,does,951,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:23,safety,updat,update,23,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:158,safety,updat,update,158,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:764,safety,Updat,Update,764,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:832,safety,updat,update,832,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:960,safety,updat,update,960,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:1056,safety,compl,completes,1056,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:23,security,updat,update,23,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:158,security,updat,update,158,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:764,security,Updat,Update,764,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:832,security,updat,update,832,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:960,security,updat,update,960,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:1056,security,compl,completes,1056,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13631:416,testability,context,context,416,"LiveVisualize does not update canvas on Jupyter notebook; ### Explain what you would like to see improved and how. The LiveVisualize feature in ROOT does not update the canvas when used in Jupyter Notebooks, resulting in the canvas not being continuously refreshed with new plots as expected. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. **Repro:**. ```. if __name__ == ""__main__"":. connection = create_connection(). num_entries = 1000000. d = RDataFrame(num_entries, daskclient=connection, npartitions=5). dd = d.Define(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . h = dd.Histo1D((""hist"", ""hist"", 100, 0, 20), ""x"") . LiveVisualize([h]). . c = ROOT.TCanvas(). c.Draw(). h.Draw(). c.Update(). ```. **Expected Result:**. The canvas should continuously update with new histogram values, reflecting partial results being merged in real-time. **Actual Result:**. The canvas does not update during the execution, and the final result is only displayed after the computation graph completes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13631
https://github.com/root-project/root/issues/13632:13,availability,fault,fault,13,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:241,availability,fault,fault,241,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:616,availability,Operat,Operating,616,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:248,deployability,stack,stack,248,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:546,deployability,version,version,546,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:569,deployability,Instal,Installation,569,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:13,energy efficiency,fault,fault,13,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:140,energy efficiency,Current,Currently,140,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:241,energy efficiency,fault,fault,241,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:524,energy efficiency,Draw,Draw,524,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:546,integrability,version,version,546,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:546,modifiability,version,version,546,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:13,performance,fault,fault,13,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:241,performance,fault,fault,241,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:13,reliability,fault,fault,13,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:241,reliability,fault,fault,241,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:13,safety,fault,fault,13,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:241,safety,fault,fault,241,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/issues/13632:660,testability,context,context,660,"Segmentation fault in TGraph::Sort with large number of entries; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```. import ROOT. d = ROOT.RDataFrame(1000000). dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""). . graph = dd.Graph(""x"", ""y""). . c = ROOT.TCanvas(). graph.Sort(). graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13632
https://github.com/root-project/root/pull/13633:380,availability,recov,recovering,380,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:103,deployability,build,building,103,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:380,deployability,recov,recovering,380,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:454,deployability,updat,updated,454,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:306,reliability,doe,does,306,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:380,reliability,recov,recovering,380,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:25,safety,test,tests,25,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:50,safety,test,tests,50,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:69,safety,accid,accidentally,69,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:116,safety,test,testing,116,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:366,safety,test,test,366,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:380,safety,recov,recovering,380,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:396,safety,test,tests,396,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:424,safety,test,tested,424,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:454,safety,updat,updated,454,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:380,security,recov,recovering,380,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:454,security,updat,updated,454,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:25,testability,test,tests,25,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:50,testability,test,tests,50,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:116,testability,test,testing,116,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:366,testability,test,test,366,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:371,testability,coverag,coverage,371,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:396,testability,test,tests,396,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:424,testability,test,tested,424,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13633:163,usability,Minim,Minimal,163,"[Math] Respawn genvector tests; Respawn genvector tests because they accidentally dropped out from the building and testing process during the migration to CMake. Minimal changes to the code were applied to let them run, respecting the original coding style. # This Pull request:. ## Changes or fixes:. It does not fix an existing issue, but rather it increases the test coverage recovering some tests. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13633
https://github.com/root-project/root/pull/13634:119,deployability,updat,update,119,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:134,deployability,version,version,134,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:281,deployability,automat,automatically,281,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:198,energy efficiency,model,model,198,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:204,energy efficiency,predict,prediction,204,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:134,integrability,version,version,134,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:392,interoperability,platform,platform,392,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:134,modifiability,version,version,134,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:467,reliability,doe,does,467,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:119,safety,updat,update,119,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:204,safety,predict,prediction,204,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:271,safety,test,tests,271,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:342,safety,avoid,avoided,342,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:119,security,updat,update,119,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:198,security,model,model,198,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:271,testability,test,tests,271,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:281,testability,automat,automatically,281,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:92,usability,learn,learn,92,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13634:152,usability,learn,learn,152,[tmva][pymva]Various fixes in pymva; These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn. - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. . - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13634
https://github.com/root-project/root/pull/13635:171,availability,fault,fault,171,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:442,deployability,updat,updated,442,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:171,energy efficiency,fault,fault,171,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:171,performance,fault,fault,171,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:292,performance,execution time,execution time,292,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:351,performance,execution time,execution time,351,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:171,reliability,fault,fault,171,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:150,safety,avoid,avoid,150,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:171,safety,fault,fault,171,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:412,safety,test,tested,412,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:442,safety,updat,updated,442,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:442,security,updat,updated,442,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13635:412,testability,test,tested,412,"Reimplement TGraph::Sort using std::stable_sort; # This Pull request:. ## Changes or fixes:. Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:. ```. BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13635
https://github.com/root-project/root/pull/13636:63,availability,servic,services,63,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:63,deployability,servic,services,63,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:63,integrability,servic,services,63,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:63,modifiability,servic,services,63,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:203,safety,test,testReport,203,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:232,safety,test,test,232,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:203,testability,test,testReport,203,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13636:232,testability,test,test,232,"More fixes for stressGraphics; This PR fixes :. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-debian10-i386,SPEC=default,V=master/lastCompletedBuild/testReport/junit/projectroot/test/test_stressgraphics/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13636
https://github.com/root-project/root/pull/13637:113,availability,error,error,113,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:164,availability,Sli,Slice,164,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:213,availability,state,states,213,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:119,integrability,messag,message,119,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:213,integrability,state,states,213,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:119,interoperability,messag,message,119,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:113,performance,error,error,113,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:164,reliability,Sli,Slice,164,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:88,safety,except,exception,88,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:113,safety,error,error,113,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:342,testability,simul,simultaneous-fit-in-a-single-plot,342,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:105,usability,help,helpful,105,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:113,usability,error,error,113,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:134,usability,user,user,134,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13637:234,usability,support,supported,234,"[RF] Give example for multiple categories plot in rf501_simultaneouspdf; Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:. https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13637
https://github.com/root-project/root/pull/13638:265,availability,consist,consistent,265,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:326,availability,error,error,326,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:299,deployability,releas,release,299,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:555,deployability,fail,failing-,555,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:332,integrability,messag,message,332,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:332,interoperability,messag,message,332,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:10,modifiability,exten,extended,10,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:138,modifiability,exten,extended,138,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:167,modifiability,exten,extended,167,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:380,modifiability,exten,extended,380,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:415,modifiability,exten,extended,415,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:326,performance,error,error,326,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:555,reliability,fail,failing-,555,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:326,safety,error,error,326,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:96,usability,user,users,96,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:256,usability,behavi,behavior,256,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:265,usability,consist,consistent,265,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13638:326,usability,error,error,326,"[RF] Make extended fit default of RooAbsPdf::fitChi2() same as in fitTo; It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13638
https://github.com/root-project/root/pull/13639:550,deployability,manag,manage,550,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:736,deployability,fail,failing-,736,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:550,energy efficiency,manag,manage,550,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:237,modifiability,paramet,parameter,237,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:53,performance,cach,caching,53,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:135,performance,cach,cacheArgs,135,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:314,performance,cach,caches,314,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:736,reliability,fail,failing-,736,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:37,safety,test,tests,37,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:445,safety,test,test,445,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:537,safety,safe,safer,537,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:550,safety,manag,manage,550,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:80,security,hack,hack,80,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:37,testability,test,tests,37,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13639:445,testability,test,test,445,"[RF] Fix skipping of zero weights in tests statistic caching; There was an evil hack in `RooAbsOptTestStatistic`:. ```c++. _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;. ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13639
https://github.com/root-project/root/pull/13640:91,deployability,updat,update,91,[jsroot] dev 12/09/2023 with axis labels tilt [skip-ci]; Fix axis labels tilt. Fix THStack update. Support drawing HIST and E1 for TH1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13640
https://github.com/root-project/root/pull/13640:107,energy efficiency,draw,drawing,107,[jsroot] dev 12/09/2023 with axis labels tilt [skip-ci]; Fix axis labels tilt. Fix THStack update. Support drawing HIST and E1 for TH1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13640
https://github.com/root-project/root/pull/13640:91,safety,updat,update,91,[jsroot] dev 12/09/2023 with axis labels tilt [skip-ci]; Fix axis labels tilt. Fix THStack update. Support drawing HIST and E1 for TH1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13640
https://github.com/root-project/root/pull/13640:91,security,updat,update,91,[jsroot] dev 12/09/2023 with axis labels tilt [skip-ci]; Fix axis labels tilt. Fix THStack update. Support drawing HIST and E1 for TH1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13640
https://github.com/root-project/root/pull/13640:99,usability,Support,Support,99,[jsroot] dev 12/09/2023 with axis labels tilt [skip-ci]; Fix axis labels tilt. Fix THStack update. Support drawing HIST and E1 for TH1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13640
https://github.com/root-project/root/pull/13642:33,deployability,Releas,Release,33,[ntuple] add RFieldBase::RValue::Release(); Adds a method to drop ownership of the object pointer in RValue. That is useful for framework code that uses RNTuple to construct an object and would then want to decouple that object from the RValue class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13642
https://github.com/root-project/root/pull/13642:207,modifiability,deco,decouple,207,[ntuple] add RFieldBase::RValue::Release(); Adds a method to drop ownership of the object pointer in RValue. That is useful for framework code that uses RNTuple to construct an object and would then want to decouple that object from the RValue class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13642
https://github.com/root-project/root/pull/13644:28,deployability,Updat,Update,28,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:99,deployability,Updat,Update,99,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:191,deployability,updat,updated,191,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:233,deployability,updat,update,233,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:308,deployability,releas,released,308,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:324,deployability,version,version,324,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:240,energy efficiency,draw,drawing,240,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:284,energy efficiency,draw,drawings,284,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:374,energy efficiency,draw,drawings,374,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:324,integrability,version,version,324,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:324,modifiability,version,version,324,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:75,reliability,RCa,RCanvas,75,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:28,safety,Updat,Update,28,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:99,safety,Updat,Update,99,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:191,safety,updat,updated,191,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:233,safety,updat,update,233,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:28,security,Updat,Update,28,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:99,security,Updat,Update,99,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:191,security,updat,updated,191,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13644:233,security,updat,update,233,"[ipython] implement `canvas.Update()` in notebooks; 1. Add flag in TCanvas/RCanvas which set when `Update()` method is called. 2. Use `can.IsUpdated()` flag in iPython to check if canvas was updated. 3. Use iPython display handle to update drawing. 4. Works with JSROOT and png-based drawings. 5. Use latest released JSROOT version 7.4.3. 6. Use TWebCanvas JSON for TCanvas drawings to handle all special cases like style, list of colors, stats box and so on. Resolves #13631",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13644
https://github.com/root-project/root/pull/13645:178,deployability,releas,release,178,[ipython] fix canvas width/height usage [6.28]; Use GetCanvasWidth()/GetCanvasHeight() for obtain proper dimension . Do not swap width/height arguments. Use correspondent JSROOT release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13645
https://github.com/root-project/root/pull/13646:29,availability,Error,Error,29,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:89,availability,Error,Error,89,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:216,availability,Error,Error,216,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:655,availability,Error,Error,655,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:727,availability,Error,Error,727,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:251,deployability,depend,depending,251,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:746,deployability,build,build,746,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:752,deployability,depend,dependency,752,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:251,integrability,depend,depending,251,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:752,integrability,depend,dependency,752,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:251,modifiability,depend,depending,251,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:752,modifiability,depend,dependency,752,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:29,performance,Error,Error,29,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:89,performance,Error,Error,89,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:216,performance,Error,Error,216,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:655,performance,Error,Error,655,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:727,performance,Error,Error,727,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:799,reliability,doe,doesn,799,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:29,safety,Error,Error,29,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:89,safety,Error,Error,89,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:216,safety,Error,Error,216,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:251,safety,depend,depending,251,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:655,safety,Error,Error,655,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:727,safety,Error,Error,727,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:752,safety,depend,dependency,752,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:917,safety,avoid,avoided,917,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:251,testability,depend,depending,251,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:752,testability,depend,dependency,752,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:29,usability,Error,Error,29,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:89,usability,Error,Error,89,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:216,usability,Error,Error,216,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:360,usability,user,user,360,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:414,usability,user,user,414,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:655,usability,Error,Error,655,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:727,usability,Error,Error,727,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/pull/13646:794,usability,user,user,794,"[math] Don't `#include ""Math/Error.h""` and `""Math/Util.h""` in Minuit2 headers; The ""Math/Error.h"" header is not shipped with standalone Minuit2. It is not a perfect solution to just ship it with Minuit2, because the Error.h header behaves differently depending on the `MATHCORE_STANDALONE` macro being defined or not. The code would only work correctly if the user defines the `MATHCORE_STANDALONE` herself in the user code that uses standalone Minuit2, which would be annoying. Instead, this commit proposes another solution to the problem: for all headers also used in Minuit2 standalone, MathCore. moves the definitions of all functions that use `Math/Error.h` out of the header files in the cxx files. Like this, the `Math/Error.h` is only a build dependency of standalone Minuit2, and the user doesn't need to define the `MATHCORE_STANDALONE` macro for it to work. Including the ""Math/Util.h"" header needs to be avoided for similar reasons (it's about another preprocessor macro related to `veccore`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13646
https://github.com/root-project/root/issues/14103:177,availability,state,stated,177,version_id Fedora; The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename? Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M. -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:23,deployability,releas,release,23,version_id Fedora; The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename? Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M. -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:57,deployability,releas,releases,57,version_id Fedora; The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename? Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M. -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:66,deployability,releas,release-,66,version_id Fedora; The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename? Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M. -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:81,deployability,contain,contains,81,version_id Fedora; The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename? Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M. -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/issues/14103:177,integrability,state,stated,177,version_id Fedora; The release webpage https://root.cern/releases/release-62806/ contains a 'weird' tag for Fedora:. Should `VERSION_ID=` rather be removed instead of explictly stated in the filename? Fedoraversion_id= 36 | root_v6.28.06.Linux-fedoraVERSION_ID=36-x86_64-gcc12.2.tar.gz | 302M. -- | -- | --,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14103
https://github.com/root-project/root/pull/13647:191,deployability,updat,updated,191,[skip ci][Doc] Revamp and Doxygenize doc of T(X)NetFile and TS3WebFile; # This Pull request:. ## Changes or fixes:. It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally. - [v] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13647:161,safety,test,tested,161,[skip ci][Doc] Revamp and Doxygenize doc of T(X)NetFile and TS3WebFile; # This Pull request:. ## Changes or fixes:. It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally. - [v] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13647:191,safety,updat,updated,191,[skip ci][Doc] Revamp and Doxygenize doc of T(X)NetFile and TS3WebFile; # This Pull request:. ## Changes or fixes:. It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally. - [v] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13647:191,security,updat,updated,191,[skip ci][Doc] Revamp and Doxygenize doc of T(X)NetFile and TS3WebFile; # This Pull request:. ## Changes or fixes:. It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally. - [v] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13647:161,testability,test,tested,161,[skip ci][Doc] Revamp and Doxygenize doc of T(X)NetFile and TS3WebFile; # This Pull request:. ## Changes or fixes:. It improves ROOT's doc. ## Checklist:. - [ ] tested changes locally. - [v] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13647
https://github.com/root-project/root/pull/13648:1074,deployability,build,builds,1074,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:1198,deployability,updat,updated,1198,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:857,energy efficiency,current,currently,857,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:24,integrability,sub,subdirectories,24,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:200,integrability,sub,subdirectories,200,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:254,integrability,Sub,Subdirectories,254,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:386,integrability,sub,subdirectories,386,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:451,integrability,sub,subsubdirectories,451,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:619,integrability,sub,subdirectories,619,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:695,integrability,sub,subdirectories,695,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:711,integrability,sub,subsubdirectories,711,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:730,integrability,sub,subsubsubdirectories,730,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:837,interoperability,compatib,compatibility,837,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:1168,safety,test,tested,1168,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:1198,safety,updat,updated,1198,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:1198,security,updat,updated,1198,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:1168,testability,test,tested,1168,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:164,usability,support,support,164,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:484,usability,behavi,behavior,484,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:644,usability,behavi,behavior,644,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13648:757,usability,behavi,behavior,757,"[tree] Add globbing for subdirectories in TChain::Add; # This Pull request:. `ROOT::Internal::TreeUtils::ExpandGlob` now expands the globbing string recursively to support patterns with wildcards for subdirectories e.g., `path/to/tree/files/*/*/*.root`. Subdirectories are only expanded when it is explicitly included in the pattern. For example, `dir/*` will only add the files in the subdirectories of `dir`, but `dir/*/*` will add the files in the subsubdirectories of `dir`. This behavior resembles Python's glob.glob. Some other options for expanding a directory wildcard e.g., `dir/*` is to also add files in the subdirectories of `dir` (behavior of `ls`) or also all the files in all the subdirectories, subsubdirectories, subsubsubdirectories etc. (behavior of `find`). I believe this would be unwanted since it breaks backwards compatibility. This currently uses TSystemFile.IsDirectory() to check whether a path is a directory. A better solution might be to use C++17 `std::filesystem::is_directory` but this requires an additional compiler/linker option for some builds (see https://en.cppreference.com/w/cpp/filesystem under Notes). . ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #13623 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13648
https://github.com/root-project/root/pull/13649:278,deployability,updat,updated,278,[Doc] Reformulate Doxy doc not to trigger a compiler warning; which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13649:248,safety,test,tested,248,[Doc] Reformulate Doxy doc not to trigger a compiler warning; which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13649:278,safety,updat,updated,278,[Doc] Reformulate Doxy doc not to trigger a compiler warning; which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13649:278,security,updat,updated,278,[Doc] Reformulate Doxy doc not to trigger a compiler warning; which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13649:248,testability,test,tested,248,[Doc] Reformulate Doxy doc not to trigger a compiler warning; which is `root/net/net/src/TNetFile.cxx:19:29: warning: '/*' within block comment [-Wcomment]` on clang on macos 13.5.1. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13649
https://github.com/root-project/root/pull/13650:116,usability,document,document,116,Make sure the default marker is visible when displaying an histogram …; as suggested here:. https://docs.google.com/document/d/1RDza51mOYb_sRgSRR3Od7oxVP_NCMnrAV2a1HPvMGH4/edit?mode=html.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13650
https://github.com/root-project/root/pull/13651:931,availability,error,errors,931,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:412,deployability,log,logic,412,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:894,energy efficiency,reduc,reduce,894,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:931,performance,error,errors,931,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:154,reliability,doe,does-not-support-range-option,154,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:412,safety,log,logic,412,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:513,safety,test,test,513,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:546,safety,Avoid,Avoid,546,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:931,safety,error,errors,931,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:412,security,log,logic,412,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:412,testability,log,logic,412,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:513,testability,test,test,513,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:163,usability,support,support-range-option,163,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:802,usability,Support,Support,802,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13651:931,usability,error,errors,931,"[RF] Several improvements in RooFit chi-square fitting; The changes in this PR address this forum post... https://root-forum.cern.ch/t/chi2fito-with-yvar-does-not-support-range-option/56369. ...and follows up on the discussion here:. https://github.com/root-project/root/pull/13638. Short summaries of the commits, more detail in the commit descriptions:. 1. Following up on #1455, the multi-range chi2 creation logic is removed from `createChi2()`, because for a few months already this can be dealt with in the test statistics base classes. 2. Avoid separate RooXYChi2Var constructors for pdfs and functions: instead of having separate constructors for RooAbsPdf and RooAbsReal, it's better and less code duplication to have one RooAbsReal constructor and dynamically check if it got a RooAbsPdf. 3. Support `NumCPU()` and `Range()` in createChi2() for RooDataSets. 4. Bugfix in `RooDataSet::reduce()` by also copying the stored errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13651
https://github.com/root-project/root/pull/13652:31,availability,servic,services,31,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:127,availability,servic,services,127,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:31,deployability,servic,services,31,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:127,deployability,servic,services,127,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:270,deployability,updat,updated,270,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:31,integrability,servic,services,31,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:127,integrability,servic,services,127,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:31,modifiability,servic,services,31,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:127,modifiability,servic,services,127,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:240,safety,test,tested,240,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:270,safety,updat,updated,270,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:270,security,updat,updated,270,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:240,testability,test,tested,240,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:164,usability,document,documentation,164,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13652:213,usability,user,user,213,"[Doc][skip-ci]Remove 3rd party services; # This Pull request:. ## Changes or fixes:. This PR removes the usage of two external services, preserving the look of the documentation, de facto changing nothing for the user. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13652
https://github.com/root-project/root/pull/13654:19,safety,Test,Test,19,On demand loaded2; Test just to make sure...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13654
https://github.com/root-project/root/pull/13654:19,testability,Test,Test,19,On demand loaded2; Test just to make sure...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13654
https://github.com/root-project/root/issues/13656:391,availability,error,error,391,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1486,availability,error,error,1486,"pression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1594,availability,slo,slot,1594,"ol>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1977,availability,slo,slot,1977,"F::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3251,availability,error,error,3251," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3465,availability,state,state,3465," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3738,availability,Operat,Operating,3738," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:221,deployability,Instal,Install,221,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:247,deployability,Instal,Install,247,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:255,deployability,configurat,configuration,255,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:282,deployability,modul,module,282,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:412,deployability,fail,failed,412,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1383,deployability,modul,module,1383,"2:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3640,deployability,version,version,3640," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3695,deployability,Instal,Installation,3695," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3716,deployability,build,build,3716," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:255,integrability,configur,configuration,255,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:365,integrability,Interfac,InterfaceUtils,365,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:480,integrability,filter,filter,480,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:716,integrability,Interfac,InterfaceUtils,716,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2252,integrability,Filter,FilterF,2252,"OT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2398,integrability,Interfac,InterfaceUtils,2398,":. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3415,integrability,event,event,3415," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3465,integrability,state,state,3465," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3640,integrability,version,version,3640," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:365,interoperability,Interfac,InterfaceUtils,365,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:716,interoperability,Interfac,InterfaceUtils,716,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2398,interoperability,Interfac,InterfaceUtils,2398,":. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:255,modifiability,configur,configuration,255,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:282,modifiability,modul,module,282,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:365,modifiability,Interfac,InterfaceUtils,365,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:716,modifiability,Interfac,InterfaceUtils,716,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1383,modifiability,modul,module,1383,"2:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2398,modifiability,Interfac,InterfaceUtils,2398,":. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3640,modifiability,version,version,3640," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:391,performance,error,error,391,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1486,performance,error,error,1486,"pression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3251,performance,error,error,3251," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3281,performance,time,time,3281," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:412,reliability,fail,failed,412,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1594,reliability,slo,slot,1594,"ol>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1977,reliability,slo,slot,1977,"F::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:282,safety,modul,module,282,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:391,safety,error,error,391,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1383,safety,modul,module,1383,"2:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1486,safety,error,error,1486,"pression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3208,safety,except,exception,3208," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3251,safety,error,error,3251," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:255,security,configur,configuration,255,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3778,testability,context,context,3778," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:308,usability,User,Users,308,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:391,usability,error,error,391,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:659,usability,User,Users,659,"Dataframe issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. . Can you advice ? Is there a way to make DataFrame it more verbose maybe ? ```. Install the project... -- Install configuration: ""Debug"". In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnType",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1409,usability,User,Users,1409,"failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1486,usability,error,error,1486,"pression returns a type that is not convertible to bool"". static_assert(std::is_convertible<FilterRet_t, bool>::value,. ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:1702,usability,User,Users,1702,"e/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here. CheckFilter(f);. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2026,usability,User,Users,2026,"RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:2341,usability,User,Users,2341,"umnRegister*>(0x600000bb80a0));. ^. In module 'ROOTDataFrame':. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'. return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3251,usability,error,error,3251," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/issues/13656:3342,usability,indicat,indicate,3342," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here. auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here. RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,. ^. /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here. std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));. ^. input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here. ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));. ^. libc++abi: terminating due to uncaught exception of type std::runtime_error: . An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash. All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6. ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13656
https://github.com/root-project/root/pull/13657:125,deployability,stack,stack,125,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:187,deployability,build,build,187,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:45,integrability,Pub,Public,45,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:52,integrability,interfac,interface,52,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:52,interoperability,interfac,interface,52,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:52,modifiability,interfac,interface,52,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:12,performance,Lock,Lock,12,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:105,performance,lock,locking,105,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:309,safety,test,test,309,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:12,security,Lock,Lock,12,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:105,security,lock,locking,105,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:131,testability,trace,trace,131,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:291,testability,simpl,simple,291,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:309,testability,test,test,309,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:350,testability,trace,trace,350,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:429,testability,trace,trace,429,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/pull/13657:291,usability,simpl,simple,291,"[metacling] Lock TCling::CheckClassTemplate; Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13657
https://github.com/root-project/root/issues/13659:165,integrability,sub,subdirectory,165,rootprint/rootls missing recursive traversal; ### Explain what you would like to see improved and how. `rootprint` does not output canvases that are stored inside a subdirectory. The CLI should accept a 'recursive' parameter that allows to deal with these cases. ### Additional context. https://root-forum.cern.ch/t/saving-all-plots-from-a-root-file-into-separate-png-files/56379/3?u=ferhue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13659
https://github.com/root-project/root/issues/13659:215,modifiability,paramet,parameter,215,rootprint/rootls missing recursive traversal; ### Explain what you would like to see improved and how. `rootprint` does not output canvases that are stored inside a subdirectory. The CLI should accept a 'recursive' parameter that allows to deal with these cases. ### Additional context. https://root-forum.cern.ch/t/saving-all-plots-from-a-root-file-into-separate-png-files/56379/3?u=ferhue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13659
https://github.com/root-project/root/issues/13659:115,reliability,doe,does,115,rootprint/rootls missing recursive traversal; ### Explain what you would like to see improved and how. `rootprint` does not output canvases that are stored inside a subdirectory. The CLI should accept a 'recursive' parameter that allows to deal with these cases. ### Additional context. https://root-forum.cern.ch/t/saving-all-plots-from-a-root-file-into-separate-png-files/56379/3?u=ferhue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13659
https://github.com/root-project/root/issues/13659:278,testability,context,context,278,rootprint/rootls missing recursive traversal; ### Explain what you would like to see improved and how. `rootprint` does not output canvases that are stored inside a subdirectory. The CLI should accept a 'recursive' parameter that allows to deal with these cases. ### Additional context. https://root-forum.cern.ch/t/saving-all-plots-from-a-root-file-into-separate-png-files/56379/3?u=ferhue,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13659
https://github.com/root-project/root/pull/13660:78,availability,failur,failures,78,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:13,deployability,depend,dependency,13,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:78,deployability,fail,failures,78,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:87,deployability,observ,observed,87,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:100,deployability,build,builds,100,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:13,integrability,depend,dependency,13,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:13,modifiability,depend,dependency,13,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:78,performance,failur,failures,78,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:78,reliability,fail,failures,78,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:13,safety,depend,dependency,13,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:43,safety,test,test,43,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:13,testability,depend,dependency,13,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:43,testability,test,test,43,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13660:87,testability,observ,observed,87,[pyroot] Fix dependency for pyroot rtensor test.; This should fix some of the failures observed for builds without rdataframe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13660
https://github.com/root-project/root/pull/13661:230,energy efficiency,adapt,adapted,230,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:230,integrability,adapt,adapted,230,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:230,interoperability,adapt,adapted,230,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:230,modifiability,adapt,adapted,230,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:139,safety,compl,complicated,139,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:220,safety,test,tests,220,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:139,security,compl,complicated,139,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:220,testability,test,tests,220,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:32,usability,minim,minimizer,32,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:68,usability,prefer,prefer,68,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:111,usability,user,users,111,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13661:277,usability,minim,minimizer,277,"[math] Make Minuit2 the default minimizer in ROOT Math; Most people prefer Minuit2 nowadays, especially RooFit users, as some of. the more complicated fits don't converge with the old Minuit. implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13661
https://github.com/root-project/root/pull/13662:110,energy efficiency,reduc,reduce,110,[RF] Avoid duplicating minimizer steering code in `RooAbsPdf::fitTo()` and `RooAbsReal::chi2FitTo()`; Further reduce code duplication of the NLL and chi-square minimization paths.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13662
https://github.com/root-project/root/pull/13662:5,safety,Avoid,Avoid,5,[RF] Avoid duplicating minimizer steering code in `RooAbsPdf::fitTo()` and `RooAbsReal::chi2FitTo()`; Further reduce code duplication of the NLL and chi-square minimization paths.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13662
https://github.com/root-project/root/pull/13662:23,usability,minim,minimizer,23,[RF] Avoid duplicating minimizer steering code in `RooAbsPdf::fitTo()` and `RooAbsReal::chi2FitTo()`; Further reduce code duplication of the NLL and chi-square minimization paths.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13662
https://github.com/root-project/root/pull/13662:160,usability,minim,minimization,160,[RF] Avoid duplicating minimizer steering code in `RooAbsPdf::fitTo()` and `RooAbsReal::chi2FitTo()`; Further reduce code duplication of the NLL and chi-square minimization paths.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13662
https://github.com/root-project/root/pull/13663:105,deployability,updat,updated,105,Security; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13663:75,safety,test,tested,75,Security; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13663:105,safety,updat,updated,105,Security; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13663:0,security,Secur,Security,0,Security; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13663:105,security,updat,updated,105,Security; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13663:75,testability,test,tested,75,Security; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13663
https://github.com/root-project/root/pull/13664:440,deployability,updat,updated,440,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:310,integrability,coupl,coupled,310,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:53,interoperability,xml,xml,53,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:210,interoperability,XML,XML,210,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:239,interoperability,format,format,239,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:310,modifiability,coupl,coupled,310,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:328,safety,Test,Test,328,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:410,safety,test,tested,410,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:440,safety,updat,updated,440,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:440,security,updat,updated,440,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:310,testability,coupl,coupled,310,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:328,testability,Test,Test,328,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:410,testability,test,tested,410,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13664:126,usability,user,user,126,"[Dict][13543] Correct dicts with rootcling+selection xml; # This Pull request:. ## Changes or fixes:. These changes allow the user to generate a dictionary with rootcling and selecting classes with a selection XML file, the selection file format of genreflex, instead of a traditional LinkDef file. This PR is coupled with ROOT Test PR https://github.com/root-project/roottest/pull/1014 . ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # . https://github.com/dpiparo/root/pull/new/issue_13543.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13664
https://github.com/root-project/root/pull/13665:315,deployability,observ,observed,315,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:133,energy efficiency,CPU,CPU,133,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:142,integrability,Batch,BatchMode,142,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:133,performance,CPU,CPU,133,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:142,performance,Batch,BatchMode,142,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:167,safety,test,tests,167,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:389,safety,valid,validated,389,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:389,security,validat,validated,389,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:167,testability,test,tests,167,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:315,testability,observ,observed,315,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:506,testability,simpl,simple,506,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:506,usability,simpl,simple,506,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13665:561,usability,Close,Closes,561,"[RF] Implement Offset(""bin"") also for `RooDataSet` fits; Fully implement the `Offset(""bin"")` feature also for RooDataSet, both. with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:. an ""offset pdf"" that is created as a RooHistPdf from the observed data,. and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting. is inteed fixing the convergense problems that the simple offsetting by. the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13665
https://github.com/root-project/root/pull/13666:116,deployability,updat,update,116,"[webgui] set PDF page size when storing canvas in pdf; Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13666
https://github.com/root-project/root/pull/13666:147,deployability,releas,release,147,"[webgui] set PDF page size when storing canvas in pdf; Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13666
https://github.com/root-project/root/pull/13666:116,safety,updat,update,116,"[webgui] set PDF page size when storing canvas in pdf; Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13666
https://github.com/root-project/root/pull/13666:116,security,updat,update,116,"[webgui] set PDF page size when storing canvas in pdf; Use canvas pixel size as page size - including margins. Also update JSROOT, preliminary 7.5 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13666
https://github.com/root-project/root/issues/13667:1025,availability,operat,operator,1025,"isplayHandle::BrowserCreator::Display()`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. !!! ATTENTION !!! . ROOT comes with a web-based canvas, which is now being started. . Revert to the legacy canvas by setting ""Canvas.Name: TRootCanvas"" in rootrc file or. by starting ""root --web=off"". Find more info on https://root.cern/for_developers/root7/#twebcanvas. Info in <THttpEngine::Create>: Starting HTTP server on port 9237. ==1848772== Warning: set address range perms: large range [0x3fe4b3040, 0x56dad58a1) (undefined). ==1848772== Invalid read of size 8. ==1848772== at 0x484A4C8: memmove (vg_replace_strmem.c:1382). ==1848772== by 0x4F1DC5A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compile(char const*, char const*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:2425,availability,operat,operator,2425,"48772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compile(char const*, char const*, std::regex_constants::syntax_option_type) (regex.h:789). ==1848772== by 0x358DB881: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex(char const*, std::regex_constants::syntax_option_type) (regex.h:453). ==1848772== by 0x358C4590: ROOT::RWebDisplayHandle::BrowserCreator::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:244). ==1848772== by 0x358BFF2F: operator() (RWebDisplayHandle.cxx:572). ==1848772== by 0x358BFF2F: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&)::{lambda(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&)#1}::operator()(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&) const (RWebDisplayHandle.cxx:569). ==1848772== by 0x358C16FF: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:625). ==1848772== by 0x358EDCAA: ROOT::RWebWindowsManager::ShowWindow(ROOT::RWebWindow&, ROOT::RWebDisplayArgs const&) (RWebWindowsManager.cxx:688). ==1848772== by 0x34049D5B: TWebCanvas::Show() (TWebCanvas.cxx:1008). ==1848772== by 0x29E34AB1: TCanvas::Constructor(char const*, char const*, int, int, int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:2676,availability,operat,operator,2676,":91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compile(char const*, char const*, std::regex_constants::syntax_option_type) (regex.h:789). ==1848772== by 0x358DB881: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex(char const*, std::regex_constants::syntax_option_type) (regex.h:453). ==1848772== by 0x358C4590: ROOT::RWebDisplayHandle::BrowserCreator::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:244). ==1848772== by 0x358BFF2F: operator() (RWebDisplayHandle.cxx:572). ==1848772== by 0x358BFF2F: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&)::{lambda(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&)#1}::operator()(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&) const (RWebDisplayHandle.cxx:569). ==1848772== by 0x358C16FF: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:625). ==1848772== by 0x358EDCAA: ROOT::RWebWindowsManager::ShowWindow(ROOT::RWebWindow&, ROOT::RWebDisplayArgs const&) (RWebWindowsManager.cxx:688). ==1848772== by 0x34049D5B: TWebCanvas::Show() (TWebCanvas.cxx:1008). ==1848772== by 0x29E34AB1: TCanvas::Constructor(char const*, char const*, int, int, int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetROCCurve(TString, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1085). ==1848772== by 0x27558BFE: TMVA::Factory::GetROCCurve(TMVA::DataLoader*, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1063). ==1848772== by 0x12F5156C: ??? ==1848772== by",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:4239,availability,operat,operator,4239,", int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetROCCurve(TString, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1085). ==1848772== by 0x27558BFE: TMVA::Factory::GetROCCurve(TMVA::DataLoader*, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1063). ==1848772== by 0x12F5156C: ??? ==1848772== by 0x4DDB07E: ??? ==1848772== by 0x67F497B: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:5601,availability,operat,operator,5601,"&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ==1848772== Address 0x3fe4b3038 is 8 bytes before a block of size 6,163,671,137 alloc'd. ==1848772== at 0x4840F2F: operator new(unsigned long) (vg_replace_malloc.c:422). ==1848772== by 0x4F1DC29: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_trait",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:5997,availability,operat,operator,5997,"ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ==1848772== Address 0x3fe4b3038 is 8 bytes before a block of size 6,163,671,137 alloc'd. ==1848772== at 0x4840F2F: operator new(unsigned long) (vg_replace_malloc.c:422). ==1848772== by 0x4F1DC29: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compile(char const*, char const*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:7397,availability,operat,operator,7397,"48772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compile(char const*, char const*, std::regex_constants::syntax_option_type) (regex.h:789). ==1848772== by 0x358DB881: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex(char const*, std::regex_constants::syntax_option_type) (regex.h:453). ==1848772== by 0x358C4590: ROOT::RWebDisplayHandle::BrowserCreator::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:244). ==1848772== by 0x358BFF2F: operator() (RWebDisplayHandle.cxx:572). ==1848772== by 0x358BFF2F: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&)::{lambda(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&)#1}::operator()(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&) const (RWebDisplayHandle.cxx:569). ==1848772== by 0x358C16FF: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:625). ==1848772== by 0x358EDCAA: ROOT::RWebWindowsManager::ShowWindow(ROOT::RWebWindow&, ROOT::RWebDisplayArgs const&) (RWebWindowsManager.cxx:688). ==1848772== by 0x34049D5B: TWebCanvas::Show() (TWebCanvas.cxx:1008). ==1848772== by 0x29E34AB1: TCanvas::Constructor(char const*, char const*, int, int, int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:7648,availability,operat,operator,7648,":91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compile(char const*, char const*, std::regex_constants::syntax_option_type) (regex.h:789). ==1848772== by 0x358DB881: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::basic_regex(char const*, std::regex_constants::syntax_option_type) (regex.h:453). ==1848772== by 0x358C4590: ROOT::RWebDisplayHandle::BrowserCreator::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:244). ==1848772== by 0x358BFF2F: operator() (RWebDisplayHandle.cxx:572). ==1848772== by 0x358BFF2F: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&)::{lambda(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&)#1}::operator()(std::unique_ptr<ROOT::RWebDisplayHandle::Creator, std::default_delete<ROOT::RWebDisplayHandle::Creator> >&) const (RWebDisplayHandle.cxx:569). ==1848772== by 0x358C16FF: ROOT::RWebDisplayHandle::Display(ROOT::RWebDisplayArgs const&) (RWebDisplayHandle.cxx:625). ==1848772== by 0x358EDCAA: ROOT::RWebWindowsManager::ShowWindow(ROOT::RWebWindow&, ROOT::RWebDisplayArgs const&) (RWebWindowsManager.cxx:688). ==1848772== by 0x34049D5B: TWebCanvas::Show() (TWebCanvas.cxx:1008). ==1848772== by 0x29E34AB1: TCanvas::Constructor(char const*, char const*, int, int, int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetROCCurve(TString, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1085). ==1848772== by 0x27558BFE: TMVA::Factory::GetROCCurve(TMVA::DataLoader*, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1063). ==1848772== by 0x12F5156C: ??? ==1848772== by",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:9211,availability,operat,operator,9211,", int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetROCCurve(TString, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1085). ==1848772== by 0x27558BFE: TMVA::Factory::GetROCCurve(TMVA::DataLoader*, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1063). ==1848772== by 0x12F5156C: ??? ==1848772== by 0x4DDB07E: ??? ==1848772== by 0x67F497B: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:10693,availability,Operat,Operating,10693,"ng::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:10634,deployability,version,version,10634,"ng::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:10655,deployability,Instal,Installation,10655,"ng::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:772,energy efficiency,alloc,allocator,772,"Invalid memory read in `RWebDisplayHandle::BrowserCreator::Display()`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. !!! ATTENTION !!! . ROOT comes with a web-based canvas, which is now being started. . Revert to the legacy canvas by setting ""Canvas.Name: TRootCanvas"" in rootrc file or. by starting ""root --web=off"". Find more info on https://root.cern/for_developers/root7/#twebcanvas. Info in <THttpEngine::Create>: Starting HTTP server on port 9237. ==1848772== Warning: set address range perms: large range [0x3fe4b3040, 0x56dad58a1) (undefined). ==1848772== Invalid read of size 8. ==1848772== at 0x484A4C8: memmove (vg_replace_strmem.c:1382). ==1848772== by 0x4F1DC5A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:863,energy efficiency,alloc,allocator,863,"Invalid memory read in `RWebDisplayHandle::BrowserCreator::Display()`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. !!! ATTENTION !!! . ROOT comes with a web-based canvas, which is now being started. . Revert to the legacy canvas by setting ""Canvas.Name: TRootCanvas"" in rootrc file or. by starting ""root --web=off"". Find more info on https://root.cern/for_developers/root7/#twebcanvas. Info in <THttpEngine::Create>: Starting HTTP server on port 9237. ==1848772== Warning: set address range perms: large range [0x3fe4b3040, 0x56dad58a1) (undefined). ==1848772== Invalid read of size 8. ==1848772== at 0x484A4C8: memmove (vg_replace_strmem.c:1382). ==1848772== by 0x4F1DC5A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:4084,energy efficiency,alloc,allocator,4084,"). ==1848772== by 0x34049D5B: TWebCanvas::Show() (TWebCanvas.cxx:1008). ==1848772== by 0x29E34AB1: TCanvas::Constructor(char const*, char const*, int, int, int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetROCCurve(TString, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1085). ==1848772== by 0x27558BFE: TMVA::Factory::GetROCCurve(TMVA::DataLoader*, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1063). ==1848772== by 0x12F5156C: ??? ==1848772== by 0x4DDB07E: ??? ==1848772== by 0x67F497B: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:5566,energy efficiency,alloc,alloc,5566,"ommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ==1848772== Address 0x3fe4b3038 is 8 bytes before a block of size 6,163,671,137 alloc'd. ==1848772== at 0x4840F2F: operator new(unsigned long) (vg_replace_malloc.c:422). ==1848772== by 0x4F1DC29: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:5744,energy efficiency,alloc,allocator,5744,"Result&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ==1848772== Address 0x3fe4b3038 is 8 bytes before a block of size 6,163,671,137 alloc'd. ==1848772== at 0x4840F2F: operator new(unsigned long) (vg_replace_malloc.c:422). ==1848772== by 0x4F1DC29: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:5835,energy efficiency,alloc,allocator,5835,"rpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ==1848772== Address 0x3fe4b3038 is 8 bytes before a block of size 6,163,671,137 alloc'd. ==1848772== at 0x4840F2F: operator new(unsigned long) (vg_replace_malloc.c:422). ==1848772== by 0x4F1DC29: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:9056,energy efficiency,alloc,allocator,9056,"). ==1848772== by 0x34049D5B: TWebCanvas::Show() (TWebCanvas.cxx:1008). ==1848772== by 0x29E34AB1: TCanvas::Constructor(char const*, char const*, int, int, int, int) (TCanvas.cxx:527). ==1848772== by 0x29E35C5C: TCanvas::TCanvas(char const*, char const*, int, int, int, int) (TCanvas.cxx:461). ==1848772== by 0x275584FC: TMVA::Factory::GetROCCurve(TString, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1085). ==1848772== by 0x27558BFE: TMVA::Factory::GetROCCurve(TMVA::DataLoader*, unsigned int, TMVA::Types::ETreeType) (Factory.cxx:1063). ==1848772== by 0x12F5156C: ??? ==1848772== by 0x4DDB07E: ??? ==1848772== by 0x67F497B: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:10634,integrability,version,version,10634,"ng::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:10634,modifiability,version,version,10634,"ng::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:8,performance,memor,memory,8,"Invalid memory read in `RWebDisplayHandle::BrowserCreator::Display()`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. !!! ATTENTION !!! . ROOT comes with a web-based canvas, which is now being started. . Revert to the legacy canvas by setting ""Canvas.Name: TRootCanvas"" in rootrc file or. by starting ""root --web=off"". Find more info on https://root.cern/for_developers/root7/#twebcanvas. Info in <THttpEngine::Create>: Starting HTTP server on port 9237. ==1848772== Warning: set address range perms: large range [0x3fe4b3040, 0x56dad58a1) (undefined). ==1848772== Invalid read of size 8. ==1848772== at 0x484A4C8: memmove (vg_replace_strmem.c:1382). ==1848772== by 0x4F1DC5A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:10740,testability,context,context,10740,"ng::Value*) const (IncrementalExecutor.cpp:217). ==1848772== by 0x67865DE: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (Interpreter.cpp:1167). ==1848772== by 0x6788F5C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (Interpreter.cpp:1419). ==1848772== by 0x684A076: operator() (MetaSema.cpp:141). ==1848772== by 0x684A076: cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (MetaSema.cpp:158). ==1848772== by 0x6855743: cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:320). ==1848772== by 0x6856B15: cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (MetaParser.cpp:119). ==1848772== by 0x68446DF: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (MetaProcessor.cpp:317). ==1848772== by 0x66B792B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (TCling.cxx:2436). ==1848772== by 0x66D26CE: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (TCling.cxx:2580). ==1848772== by 0x66D2A81: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (TCling.cxx:3540). ==1848772== by 0x4A8A626: TApplication::ExecuteFile(char const*, int*, bool) (TApplication.cxx:1865). ==1848772== by 0x4863F8B: TRint::ProcessLineNr(char const*, char const*, int*) (TRint.cxx:820). ==1848772== by 0x4865B45: TRint::Run(bool) (TRint.cxx:461). ==1848772== by 0x1091CE: main (rmain.cxx:84). ```. ### Reproducer. `valgrind --num-callers=50 --track-origins=yes --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe tutorials/tmva/TMVA_CNN_Classification.C`. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux Debian. ### Additional context. GCC 12.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/issues/13667:8,usability,memor,memory,8,"Invalid memory read in `RWebDisplayHandle::BrowserCreator::Display()`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```. !!! ATTENTION !!! . ROOT comes with a web-based canvas, which is now being started. . Revert to the legacy canvas by setting ""Canvas.Name: TRootCanvas"" in rootrc file or. by starting ""root --web=off"". Find more info on https://root.cern/for_developers/root7/#twebcanvas. Info in <THttpEngine::Create>: Starting HTTP server on port 9237. ==1848772== Warning: set address range perms: large range [0x3fe4b3040, 0x56dad58a1) (undefined). ==1848772== Invalid read of size 8. ==1848772== at 0x484A4C8: memmove (vg_replace_strmem.c:1382). ==1848772== by 0x4F1DC5A: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30). ==1848772== by 0x358C1ECF: assign (basic_string.h:1571). ==1848772== by 0x358C1ECF: operator= (basic_string.h:805). ==1848772== by 0x358C1ECF: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_match_token(std::__detail::_ScannerBase::_TokenT) [clone .part.0] (regex_compiler.tcc:574). ==1848772== by 0x358DA122: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_atom() (regex_compiler.tcc:310). ==1848772== by 0x358DAA47: _M_term (regex_compiler.tcc:133). ==1848772== by 0x358DAA47: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_alternative() (regex_compiler.tcc:115). ==1848772== by 0x358DACC2: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_M_disjunction() (regex_compiler.tcc:91). ==1848772== by 0x358DB307: std::__detail::_Compiler<std::__cxx11::regex_traits<char> >::_Compiler(char const*, char const*, std::locale const&, std::regex_constants::syntax_option_type) (regex_compiler.tcc:76). ==1848772== by 0x358DB69E: std::__cxx11::basic_regex<char, std::__cxx11::regex_traits<char> >::_M_compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13667
https://github.com/root-project/root/pull/13668:146,deployability,updat,updated,146,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13668:43,integrability,sub,substr,43,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13668:116,safety,test,tested,116,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13668:146,safety,updat,updated,146,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13668:146,security,updat,updated,146,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13668:116,testability,test,tested,116,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13668
https://github.com/root-project/root/pull/13669:146,deployability,updat,updated,146,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13669:43,integrability,sub,substr,43,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13669:116,safety,test,tested,116,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13669:146,safety,updat,updated,146,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13669:146,security,updat,updated,146,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13669:116,testability,test,tested,116,Remove invalid value -1 as second arg from substr; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13669
https://github.com/root-project/root/pull/13670:106,deployability,Updat,UpdateAsync,106,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13670:34,energy efficiency,Draw,Draw,34,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13670:49,energy efficiency,Draw,Draw,49,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13670:106,safety,Updat,UpdateAsync,106,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13670:121,safety,Prevent,Prevent,121,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13670:106,security,Updat,UpdateAsync,106,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13670:121,security,Preven,Prevent,121,[webgui] Provide correct TCanvas::Draw and TPad::Draw for web canvas; Instead direct call of Paint() call UpdateAsync(). Prevent Paint() when calling TCanvas::SetGrayscale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13670
https://github.com/root-project/root/pull/13671:43,usability,support,support,43,[jsroot] 7.5.pre 19/09/2023 with grayscale support [skip-ci]; Add support of grayscale flag in the canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13671
https://github.com/root-project/root/pull/13671:66,usability,support,support,66,[jsroot] 7.5.pre 19/09/2023 with grayscale support [skip-ci]; Add support of grayscale flag in the canvas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13671
https://github.com/root-project/root/issues/13672:1839,availability,Operat,Operating,1839,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1312,deployability,version,version,1312,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1796,deployability,Instal,Installation,1796,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:39,energy efficiency,model,model,39,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:178,energy efficiency,draw,draw,178,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:230,energy efficiency,model,model,230,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:361,energy efficiency,Profil,Profile,361,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:449,energy efficiency,Profil,Profile,449,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:709,energy efficiency,Draw,Draw,709,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:724,energy efficiency,Draw,Draw,724,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:879,energy efficiency,Profil,Profile,879,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:963,energy efficiency,Profil,Profile,963,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1279,energy efficiency,Draw,Draw,1279,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1290,energy efficiency,Draw,Draw,1290,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1312,integrability,version,version,1312,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1312,modifiability,version,version,1312,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:361,performance,Profil,Profile,361,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:449,performance,Profil,Profile,449,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:879,performance,Profil,Profile,879,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:963,performance,Profil,Profile,963,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:39,security,model,model,39,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:230,security,model,model,230,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1467,security,Team,Team,1467,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1890,testability,context,context,1890,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/issues/13672:1658,usability,help,help,1658,"Pyroot's TProfile3D cannot display the model under '% jsroot on'.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In pyroot, when using TProfile3D to draw images, using '% jsroot on' cannot display the model, but when I use '% jsroot off', I can display the image. ### Reproducer. ```. # c++ code. # {. # auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);. # auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);. # Double_t px, py, pz, pt;. # TRandom3 r(0);. # for ( Int_t i=0; i<25000; i++) {. # r.Rannor(px,py);. # pz = px*px + py*py;. # pt = r.Landau(0,1);. # hprof3d->Fill(px,py,pz,pt,1);. # }. # hprof3d->Draw();. # c1->Draw();. # }. # pyroot code. import ctypes. from ROOT import TCanvas, TProfile, TProfile2D, TProfile3D, TRandom3, gRandom. %jsroot on. c1 = TCanvas(""c1"", ""Profile histogram exmple"", 200, 10, 700, 500). hpro3d = TProfile3D(. ""hprofile3d"", ""Profile of pt versus px, py and pz"", 40, -4, 4, 40, -4, 4, 40, 0, 20. ). px_ref, py_ref = ctypes.c_double(), ctypes.c_double(). r = TRandom3(0). for i in range(2500):. r.Rannor(px_ref, py_ref). px = px_ref.value. py = py_ref.value. pz = px * px + py * py. pt = r.Landau(0, 1). hpro3d.Fill(pz, py, pz, pt, 1). hpro3d.Draw(). c1.Draw(). ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With c++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. pre-built binary. ### Operating system. linux and docker. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13672
https://github.com/root-project/root/pull/13673:70,deployability,version,version,70,"[cmake] Replace FindOracle.cmake:; Nicer to distribute a BSD licensed version. The file `COPYING-CMAKE-SCRIPTS` is missing virtually worldwide, not even CMake includes it: https://gitlab.kitware.com/search?search=COPYING-CMAKE-SCRIPTS&nav_source=navbar&project_id=541&group_id=415&search_code=true&repository_ref=master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13673
https://github.com/root-project/root/pull/13673:70,integrability,version,version,70,"[cmake] Replace FindOracle.cmake:; Nicer to distribute a BSD licensed version. The file `COPYING-CMAKE-SCRIPTS` is missing virtually worldwide, not even CMake includes it: https://gitlab.kitware.com/search?search=COPYING-CMAKE-SCRIPTS&nav_source=navbar&project_id=541&group_id=415&search_code=true&repository_ref=master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13673
https://github.com/root-project/root/pull/13673:44,interoperability,distribut,distribute,44,"[cmake] Replace FindOracle.cmake:; Nicer to distribute a BSD licensed version. The file `COPYING-CMAKE-SCRIPTS` is missing virtually worldwide, not even CMake includes it: https://gitlab.kitware.com/search?search=COPYING-CMAKE-SCRIPTS&nav_source=navbar&project_id=541&group_id=415&search_code=true&repository_ref=master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13673
https://github.com/root-project/root/pull/13673:70,modifiability,version,version,70,"[cmake] Replace FindOracle.cmake:; Nicer to distribute a BSD licensed version. The file `COPYING-CMAKE-SCRIPTS` is missing virtually worldwide, not even CMake includes it: https://gitlab.kitware.com/search?search=COPYING-CMAKE-SCRIPTS&nav_source=navbar&project_id=541&group_id=415&search_code=true&repository_ref=master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13673
https://github.com/root-project/root/pull/13674:27,energy efficiency,load,loading,27,"[tmva] Import torch before loading libTMVA in TMVA PyTorch tutorials tests; This PR provides some improvements in pymva, especially in PyMethodBase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13674
https://github.com/root-project/root/pull/13674:27,performance,load,loading,27,"[tmva] Import torch before loading libTMVA in TMVA PyTorch tutorials tests; This PR provides some improvements in pymva, especially in PyMethodBase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13674
https://github.com/root-project/root/pull/13674:69,safety,test,tests,69,"[tmva] Import torch before loading libTMVA in TMVA PyTorch tutorials tests; This PR provides some improvements in pymva, especially in PyMethodBase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13674
https://github.com/root-project/root/pull/13674:69,testability,test,tests,69,"[tmva] Import torch before loading libTMVA in TMVA PyTorch tutorials tests; This PR provides some improvements in pymva, especially in PyMethodBase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13674
https://github.com/root-project/root/issues/13675:53,availability,error,error,53,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:377,availability,error,error,377,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1063,availability,error,error,1063,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1081,availability,echo,echo,1081,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1592,availability,Operat,Operating,1592,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:175,deployability,modul,module,175,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:268,deployability,build,build,268,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:354,deployability,modul,module,354,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:361,deployability,modul,modulemap,361,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:396,deployability,modul,module,396,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:686,deployability,continu,continues,686,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:766,deployability,modul,module,766,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:827,deployability,modul,module,827,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1103,deployability,version,version,1103,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1562,deployability,Instal,Installation,1562,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:261,energy efficiency,green,greenc,261,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:238,integrability,messag,message,238,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1103,integrability,version,version,1103,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:186,interoperability,specif,specifying,186,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:238,interoperability,messag,message,238,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:464,interoperability,specif,specified,464,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:175,modifiability,modul,module,175,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:354,modifiability,modul,module,354,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:361,modifiability,modul,modulemap,361,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:396,modifiability,modul,module,396,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:766,modifiability,modul,module,766,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:827,modifiability,modul,module,827,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1103,modifiability,version,version,1103,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:53,performance,error,error,53,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:377,performance,error,error,377,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1063,performance,error,error,1063,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:53,safety,error,error,53,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:175,safety,modul,module,175,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:330,safety,test,test,330,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:348,safety,input,input,348,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:354,safety,modul,module,354,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:361,safety,modul,modulemap,361,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:377,safety,error,error,377,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:396,safety,modul,module,396,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:766,safety,modul,module,766,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:827,safety,modul,module,827,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1063,safety,error,error,1063,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1258,security,Team,Team,1258,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:330,testability,test,test,330,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:759,testability,simpl,simple,759,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1630,testability,context,context,1630,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:38,usability,statu,status,38,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:53,usability,error,error,53,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:348,usability,input,input,348,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:377,usability,error,error,377,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:664,usability,statu,status,664,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:759,usability,simpl,simple,759,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1063,usability,error,error,1063,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/issues/13675:1424,usability,help,help,1424,"rootcling --cxxmodule exits with zero status code on error; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message. ```. /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h"". header ""canvas/Persistency/Common/Sampled.h"". ^. ```. This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". link ""libcanvas.so"". }. ```. 1. Attempt to create a PCM from it:. ```. rootcling --cxxmodule -f -v4 ... ```. 1. Check the error code:. ```. echo $? ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13675
https://github.com/root-project/root/pull/13676:165,security,Barrier,Barriers,165,"[CONTRIB] Improve following FLOSScoach: [skip-ci]; See https://fron.ch/preprint_fse.pdf / ""Do CONTRIBUTING Files Provide Information about OSS Newcomers’ Onboarding Barriers?"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13676
https://github.com/root-project/root/issues/13677:769,availability,operat,operator,769,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1052,availability,operat,operator,1052,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1182,availability,Operat,Operating,1182,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:18,deployability,unload,unloading,18,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:194,deployability,unload,unloading,194,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:361,deployability,unload,unloadingIssue,361,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:428,deployability,unload,unloadingIssue,428,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:538,deployability,unload,unloadingIssue,538,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:662,deployability,unload,unloadingIssue,662,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:692,deployability,unload,unloadingIssue,692,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:721,deployability,fail,failed,721,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:939,deployability,unload,unloadingIssue,939,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1116,deployability,version,version,1116,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1137,deployability,Instal,Installation,1137,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1116,integrability,version,version,1116,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:47,interoperability,distribut,distributed,47,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:598,interoperability,share,shared,598,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1116,modifiability,version,version,1116,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:721,reliability,fail,failed,721,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1011,reliability,doe,does,1011,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:216,safety,prevent,prevents,216,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:229,safety,test,test,229,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:148,security,ident,identified,148,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:216,security,preven,prevents,216,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:229,testability,test,test,229,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:711,testability,Assert,Assertion,711,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:1229,testability,context,context,1229,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13677:496,usability,command,commands,496,"[Cling] Potential unloading issue which breaks distributed execution; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. We identified an issue which might be related to unloading. This issue prevents any test with dask+htcondor without the usage of unelegant cludges. It would be great if it could be fixed. ### Reproducer. The macro (`unloadingIssue.C`). ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return 1 + ROOT::RVecF({-.2,.2});. }. ```. The commands at the prompt:. ```. root [0] .L unloadingIssue.C+. Info in <TMacOSXSystem::ACLiC>: creating shared library /mypath/./unloadingIssue_C.so. root [1] .! touch unloadingIssue.C. root [2] .x unloadingIssue.C . Assertion failed: (!Calls.empty() && ""Missing lambda call operator!""), function getLambdaCallOperatorHelper, file DeclCXX.cpp, line 1499. ```. Note that if the macro is changed to. ```.cpp. #include <ROOT/RVec.hxx>. ROOT::RVecF unloadingIssue(). {. return ROOT::RVecF({-1.2,1.2});. }. ```. The issue does not manifest itself: the overloaded operator+ for int and RVec<float> seems to trigger it. ### ROOT version. Master. ### Installation method. built from sources. ### Operating system. MacOS, Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13677
https://github.com/root-project/root/issues/13678:850,availability,Operat,Operating,850,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:387,deployability,version,version,387,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:413,deployability,version,version,413,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:778,deployability,version,version,778,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:807,deployability,Instal,Installation,807,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:787,energy efficiency,current,current,787,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:387,integrability,version,version,387,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:413,integrability,version,version,413,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:778,integrability,version,version,778,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:387,modifiability,version,version,387,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:413,modifiability,version,version,413,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:778,modifiability,version,version,778,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:619,safety,compl,completely,619,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:619,security,compl,completely,619,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/issues/13678:890,testability,context,context,890,"Different results using SetFillStyle using TCanvas and WebCanvas; . <img width=""816"" alt=""Screenshot 2023-09-19 at 17 21 56"" src=""https://github.com/root-project/root/assets/80402204/cd5cf7e4-6920-4156-9695-f50da9e760d5"">. ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have an issue with the SetFillStyle - the result looks quite different for the TCanvas version and the WebCanvas version. In this particular case I'm doing 'SetFillStyle(3244)' and 'SetFillStyle(3254)'. Also, for both cases, while I save the canvas from the web, using the bottom right button, the hatched area becomes completely filled instead of remaining hatched. See the attached comparison. . ### Reproducer. Using SetFillStyle() with or without WebBrowse option. ### ROOT version. current master. ### Installation method. root from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13678
https://github.com/root-project/root/pull/13680:188,deployability,updat,updated,188,Fixing a typo in histpalettecolor.C; # This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13680:158,safety,test,tested,158,Fixing a typo in histpalettecolor.C; # This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13680:188,safety,updat,updated,188,Fixing a typo in histpalettecolor.C; # This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13680:188,security,updat,updated,188,Fixing a typo in histpalettecolor.C; # This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13680:158,testability,test,tested,158,Fixing a typo in histpalettecolor.C; # This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13680:83,usability,document,documentation,83,Fixing a typo in histpalettecolor.C; # This Pull request: . ## Fixes a typo in the documentation of `tutorials/hist/histpalettecolor.C`. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13680
https://github.com/root-project/root/pull/13681:353,availability,consist,consistent,353,"[hist] Fix license for TGraphSmooth (NFC): [skip-ci]; After consultation with Christian Stratowa, the intent was to use the same license as that of ROOT. Given the commit 041f9ed55290e7edcfd78a15dfcd3c0eb7b8c9fc which sets the (c) to Fons+Rene, the copyright for Christian must end around that time that Christian has donated the code to Fons&Rene. Use consistent header for .h and .cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13681
https://github.com/root-project/root/pull/13681:294,performance,time,time,294,"[hist] Fix license for TGraphSmooth (NFC): [skip-ci]; After consultation with Christian Stratowa, the intent was to use the same license as that of ROOT. Given the commit 041f9ed55290e7edcfd78a15dfcd3c0eb7b8c9fc which sets the (c) to Fons+Rene, the copyright for Christian must end around that time that Christian has donated the code to Fons&Rene. Use consistent header for .h and .cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13681
https://github.com/root-project/root/pull/13681:353,usability,consist,consistent,353,"[hist] Fix license for TGraphSmooth (NFC): [skip-ci]; After consultation with Christian Stratowa, the intent was to use the same license as that of ROOT. Given the commit 041f9ed55290e7edcfd78a15dfcd3c0eb7b8c9fc which sets the (c) to Fons+Rene, the copyright for Christian must end around that time that Christian has donated the code to Fons&Rene. Use consistent header for .h and .cxx.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13681
https://github.com/root-project/root/pull/13683:88,deployability,build,build,88,[win32gdk] Remove unused relocatable; gcompat.h:; They are GPLed (unlike the rest); our build has. `#undef ENABLE_RELOCATABLE` in `graf2d/win32gdk/gdk/src/iconv/config.h`. gcompat.h is not included anywhere. So there is just no reason to keep these.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13683
https://github.com/root-project/root/pull/13684:65,usability,help,help,65,[RF] Fix all typos in RooFit source code; This was done with the help of this very useful tool: https://github.com/crate-ci/typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13684
https://github.com/root-project/root/pull/13684:90,usability,tool,tool,90,[RF] Fix all typos in RooFit source code; This was done with the help of this very useful tool: https://github.com/crate-ci/typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13684
https://github.com/root-project/root/pull/13685:184,deployability,updat,updated,184,[config] Remove config/root-help.el.in: it is GPLed and thus incompat… [skip-ci]; …ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13685:154,safety,test,tested,154,[config] Remove config/root-help.el.in: it is GPLed and thus incompat… [skip-ci]; …ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13685:184,safety,updat,updated,184,[config] Remove config/root-help.el.in: it is GPLed and thus incompat… [skip-ci]; …ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13685:184,security,updat,updated,184,[config] Remove config/root-help.el.in: it is GPLed and thus incompat… [skip-ci]; …ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13685:154,testability,test,tested,154,[config] Remove config/root-help.el.in: it is GPLed and thus incompat… [skip-ci]; …ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13685:28,usability,help,help,28,[config] Remove config/root-help.el.in: it is GPLed and thus incompat… [skip-ci]; …ible. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13685
https://github.com/root-project/root/pull/13686:114,deployability,build,build,114,[cmake] Turn everything GPLed off by default:; The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13686:273,deployability,updat,updated,273,[cmake] Turn everything GPLed off by default:; The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13686:243,safety,test,tested,243,[cmake] Turn everything GPLed off by default:; The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13686:273,safety,updat,updated,273,[cmake] Turn everything GPLed off by default:; The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13686:273,security,updat,updated,273,[cmake] Turn everything GPLed off by default:; The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13686:243,testability,test,tested,243,[cmake] Turn everything GPLed off by default:; The default should be a ROOT binary that respects its license; any build that creates GPLed binaries should be an active decision. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13686
https://github.com/root-project/root/pull/13687:153,deployability,updat,updated,153,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:1,energy efficiency,core,core,1,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:35,interoperability,incompatib,incompatible,35,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:123,safety,test,tested,123,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:153,safety,updat,updated,153,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:153,security,updat,updated,153,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13687:123,testability,test,tested,123,[core] Remove Demangle: unused and incompatible license.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13687
https://github.com/root-project/root/pull/13688:26,interoperability,incompatib,incompatible,26,[mathmore] Remove license-incompatible KelvinFunctions.; Part of ROOT-10992.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13688
https://github.com/root-project/root/issues/13689:909,availability,failur,failure,909,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:1435,availability,Operat,Operating,1435,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:38,deployability,modul,module,38,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:45,deployability,modul,modulemap,45,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:171,deployability,modul,module,171,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:178,deployability,modul,modulemap,178,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:215,deployability,modul,module,215,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:691,deployability,modul,module,691,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:698,deployability,modul,modulemap,698,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:897,deployability,Observ,Observe,897,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:909,deployability,fail,failure,909,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:946,deployability,version,version,946,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:1405,deployability,Instal,Installation,1405,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:946,integrability,version,version,946,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:372,interoperability,specif,specified,372,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:709,interoperability,specif,specifying,709,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:38,modifiability,modul,module,38,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:45,modifiability,modul,modulemap,45,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:171,modifiability,modul,module,171,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:178,modifiability,modul,modulemap,178,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:215,modifiability,modul,module,215,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:691,modifiability,modul,module,691,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:698,modifiability,modul,modulemap,698,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:946,modifiability,version,version,946,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:909,performance,failur,failure,909,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:909,reliability,fail,failure,909,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:38,safety,modul,module,38,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:45,safety,modul,modulemap,45,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:171,safety,modul,module,171,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:178,safety,modul,modulemap,178,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:215,safety,modul,module,215,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:691,safety,modul,module,691,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:698,safety,modul,modulemap,698,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:1101,security,Team,Team,1101,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:163,testability,simpl,simple,163,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:897,testability,Observ,Observe,897,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:1473,testability,context,context,1473,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:163,usability,simpl,simple,163,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:522,usability,command,command,522,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:858,usability,command,command,858,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13689:1267,usability,help,help,1267,"header ""relative/path/to/header.h"" in module.modulemap not honored by rootcling; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:. ```. module ""critic_test_art_sampling-input_dict"" {. requires cplusplus. header ""canvas/Persistency/Common/Sampled.h"". export *. link ""libcanvas.so"". }. ```. The specified header is not found—as it would be in C++ source—even in the presence of. ```. -I<path/to/parent/of/relative/path>. ```. on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory. 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent. 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`. 4. Observe the failure to find the header. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13689
https://github.com/root-project/root/issues/13690:885,availability,Operat,Operating,885,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:837,deployability,version,version,837,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:855,deployability,Instal,Installation,855,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:37,energy efficiency,load,loads,37,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:166,energy efficiency,current,current,166,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:837,integrability,version,version,837,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:837,modifiability,version,version,837,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:37,performance,load,loads,37,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:310,performance,memor,memory,310,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:59,safety,input,input,59,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:79,security,stride,stride,79,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:345,security,stride,strides,345,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:923,testability,context,context,923,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:59,usability,input,input,59,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13690:310,usability,memor,memory,310,"[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The current implementation of `FromNumpy({'x': array1, 'y': array2})` implicitly expects that the values of `array1` and `array2` are contiguous in memory and ignores the presence of strides. This is quite dangerous as it can result in silent processing of wrong values. ### Reproducer. ```python. import numpy as np. import ROOT. table = np.array([[1, 2], [3, 4]]). columns = {'x': table[:,0], 'y': table[:,1]}. df = ROOT.RDF.FromNumpy(columns). df.Display().Print(). ```. should print values `1,3` for `x` and `2,4` for `y`, but instead:. ```. +-----+---+---+. | Row | x | y |. +-----+---+---+. | 0 | 1 | 2 |. +-----+---+---+. | 1 | 2 | 3 |. +-----+---+---+. ```. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. First reported by @andriiknu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13690
https://github.com/root-project/root/issues/13691:6533,availability,Operat,Operating,6533,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:566,deployability,stack,stacktrace,566,"TDirectoryFile destructor segfault in compiled C++ program; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4587,deployability,modul,modulename,4587,"n/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6468,deployability,version,version,6468,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6489,deployability,Instal,Installation,6489,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6510,deployability,build,build,6510,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:512,energy efficiency,core,core,512,"TDirectoryFile destructor segfault in compiled C++ program; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:723,energy efficiency,core,core,723,"TDirectoryFile destructor segfault in compiled C++ program; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:894,energy efficiency,core,core,894,"TDirectoryFile destructor segfault in compiled C++ program; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1064,energy efficiency,core,core,1064,"eck duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1196,energy efficiency,alloc,alloc,1196,"gram (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1271,energy efficiency,core,core,1271," trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1432,energy efficiency,core,core,1432,"://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1536,energy efficiency,optim,optimized,1536,"L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1599,energy efficiency,core,core,1599,". #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::Check",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1781,energy efficiency,optim,optimized,1781,"shList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1844,energy efficiency,core,core,1844," at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2049,energy efficiency,core,core,2049,"ject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2226,energy efficiency,core,core,2226,"home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2379,energy efficiency,core,core,2379,".}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2532,energy efficiency,core,core,2532,"=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2688,energy efficiency,core,core,2688,"eRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2825,energy efficiency,core,core,2825,"tproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:2991,energy efficiency,core,core,2991,"Ref=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:3143,energy efficiency,core,core,3143,"untimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:3308,energy efficiency,core,core,3308,"mber (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:3449,energy efficiency,core,core,3449,"sConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:3623,energy efficiency,core,core,3623,"this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TObject.h:341. #21 0x00007f770e619808 in THashTable::GetCheckedHashValue (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/THashTable.h:95. #22 0x00007f770e61761c in THashTable::Add (this=0x354b270, obj=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashTable.cxx:96. #23 0x00007f770e62031a in TMap::Add (this=0x354b230, key=0x354b380, value=0x354b350) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4297,energy efficiency,Load,LoadPCM,4297,"ootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4485,energy efficiency,core,core,4485,"7f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5265,energy efficiency,core,core,5265,"0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5400,energy efficiency,alloc,alloc,5400,"4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5455,energy efficiency,core,core,5455,"rograms/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5586,energy efficiency,core,core,5586,"odulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional conte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5705,energy efficiency,core,core,5705,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5817,energy efficiency,optim,optimized,5817,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5880,energy efficiency,core,core,5880,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6004,energy efficiency,optim,optimized,6004,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6468,integrability,version,version,6468,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4587,modifiability,modul,modulename,4587,"n/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6468,modifiability,version,version,6468,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1536,performance,optimiz,optimized,1536,"L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:1781,performance,optimiz,optimized,1781,"shList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205. #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502. #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373. #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124. #20 0x00007f770e619785 in TObject::CheckedHash (this=0x354b3b0) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4297,performance,Load,LoadPCM,4297,"ootsrc/core/cont/src/TMap.cxx:66. #24 0x00007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645. #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:5817,performance,optimiz,optimized,5817,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6004,performance,optimiz,optimized,6004,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:266,reliability,doe,doesn,266,"TDirectoryFile destructor segfault in compiled C++ program; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6443,reliability,doe,doesn,6443,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:358,safety,valid,validity,358,"TDirectoryFile destructor segfault in compiled C++ program; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The `TDirectory` file destructor segfaults in a compiled C++ program (as opposed to executing the same code as a ROOT macro, which doesn't trigger the segfault). The problem seems to lie with the absence of a check for the validity of the `fList` data member in [`TDirectory::RecursiveRemove`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/core/base/src/TDirectory.cxx#L1203). Here is the full stacktrace after the segfault:. ```. #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203. #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354. #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470. #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400. #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163. #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:4587,safety,modul,modulename,4587,"n/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686. #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380. #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114. #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850. #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/issues/13691:6583,testability,context,context,6583,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307. #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104. #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390. #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472. #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99. #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202. #35 0x0000000000401184 in main () at repro.cpp:5. ```. ### Reproducer. Given the following reproducer. ```cpp. #include <TDirectoryFile.h>. int main(){. TDirectoryFile f(""f"", ""f"");. }. ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13691
https://github.com/root-project/root/pull/13692:72,deployability,log,logic,72,"Fix 13691; This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13692
https://github.com/root-project/root/pull/13692:72,safety,log,logic,72,"Fix 13691; This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13692
https://github.com/root-project/root/pull/13692:72,security,log,logic,72,"Fix 13691; This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13692
https://github.com/root-project/root/pull/13692:72,testability,log,logic,72,"Fix 13691; This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13692
https://github.com/root-project/root/pull/13692:369,testability,unit,unittest,369,"Fix 13691; This PR fixes #13691 , although we might want to revisit the logic of [`TDirectoryFile::~TDirectoryFile`](https://github.com/root-project/root/blob/e8bdfaf5add048e5301bc8f96927ed6c7d3a8db2/io/io/src/TDirectoryFile.cxx#L178) since it's weird that it was triggered this way, IMHO. If deemed appropriate, I can use the small reproducer of the linked issue as a unittest of this fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13692
https://github.com/root-project/root/issues/13693:747,availability,Operat,Operating,747,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13693:681,deployability,version,version,681,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13693:702,deployability,Instal,Installation,702,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13693:681,integrability,version,version,681,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13693:681,modifiability,version,version,681,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13693:29,reliability,RCa,RCanvas,29,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13693:817,testability,context,context,817,"Different PDF output between RCanvas and TCanvas; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I'm attaching a plotting script that produces the desired plot with `root --web=off -q -b` but produces a different result with `root --web=on -q -b`. Differences I notice. - x axis labels vs no labels on the xaxis. - Different size for the text items below the x axis. - Different legend label sizes. - Different line width for the red line at `y=1`. - Different bar width (although I like the ones from the web graphics better). ### Reproducer. [webgui-reproducer.zip](https://github.com/root-project/root/files/12677353/webgui-reproducer.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13693
https://github.com/root-project/root/issues/13694:200,availability,error,errors,200,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4066,availability,Operat,Operating,4066,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:110,deployability,Build,Building,110,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:385,deployability,version,version,385,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:443,deployability,fail,fails,443,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:462,deployability,build,build,462,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:539,deployability,stack,stack,539,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1086,deployability,contain,containers,1086,". ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1097,deployability,contain,containers,1097,"iption. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1153,deployability,Modul,Modules,1153,".11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1325,deployability,Modul,Modules,1325," two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1611,deployability,Modul,Modules,1611,"from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1780,deployability,Modul,Modules,1780,"t_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1850,deployability,Modul,Modules,1850,"_assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1991,deployability,Modul,Modules,1991,"arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2086,deployability,Modul,Modules,2086,"ainers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2193,deployability,Modul,Modules,2193,"fb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2392,deployability,fail,failed,2392,"tate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2737,deployability,version,version,2737,"8>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2904,deployability,build,building,2904,"lizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2984,deployability,patch,patches,2984,"at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3176,deployability,api,api,3176,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3892,deployability,version,version,3892,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4009,deployability,version,version,4009,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4022,deployability,Instal,Installation,4022,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4043,deployability,build,build,4043,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2152,energy efficiency,optim,optimized,2152,"les/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2174,energy efficiency,optim,optimized,2174,"3 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2251,energy efficiency,optim,optimized,2251,"_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2273,energy efficiency,optim,optimized,2273,"eachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:385,integrability,version,version,385,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2737,integrability,version,version,2737,"8>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3176,integrability,api,api,3176,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3892,integrability,version,version,3892,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4009,integrability,version,version,4009,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:344,interoperability,platform,platforms,344,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3176,interoperability,api,api,3176,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:385,modifiability,version,version,385,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1153,modifiability,Modul,Modules,1153,".11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1325,modifiability,Modul,Modules,1325," two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1611,modifiability,Modul,Modules,1611,"from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1780,modifiability,Modul,Modules,1780,"t_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1850,modifiability,Modul,Modules,1850,"_assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1991,modifiability,Modul,Modules,1991,"arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2086,modifiability,Modul,Modules,2086,"ainers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2193,modifiability,Modul,Modules,2193,"fb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2737,modifiability,version,version,2737,"8>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2746,modifiability,pac,packaged,2746,"ation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3892,modifiability,version,version,3892,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4009,modifiability,version,version,4009,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:200,performance,error,errors,200,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2152,performance,optimiz,optimized,2152,"les/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2174,performance,optimiz,optimized,2174,"3 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2251,performance,optimiz,optimized,2251,"_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2273,performance,optimiz,optimized,2273,"eachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3333,performance,Memor,MemoryRegulator,3333,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:443,reliability,fail,fails,443,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2349,reliability,doe,doesn,2349,"4 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2392,reliability,fail,failed,2392,"tate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2698,reliability,doe,does,2698,"e. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3514,reliability,doe,does,3514,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:200,safety,error,errors,200,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:505,safety,test,test,505,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1153,safety,Modul,Modules,1153,".11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1325,safety,Modul,Modules,1325," two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1611,safety,Modul,Modules,1611,"from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1780,safety,Modul,Modules,1780,"t_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1850,safety,Modul,Modules,1850,"_assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:1991,safety,Modul,Modules,1991,"arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2086,safety,Modul,Modules,2086,"ainers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2193,safety,Modul,Modules,2193,"fb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2871,safety,compl,complicated,2871,"7 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2984,safety,patch,patches,2984,"at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3780,safety,test,test,3780,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2871,security,compl,complicated,2871,"7 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2984,security,patch,patches,2984,"at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3856,security,session,session,3856,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:190,testability,assert,assertion,190,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:505,testability,test,test,505,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:545,testability,trace,trace,545,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2399,testability,assert,assertion,2399,"te. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:2481,testability,assert,assert,2481,"collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682. #19 0x00007fc00f8dd9d4 in pymain_main (args=args. entry=0x7ffcb1bbaf90) at Modules/main.c:710. #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MAN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3780,testability,test,test,3780,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:4118,testability,context,context,4118,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:200,usability,error,errors,200,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:237,usability,user,user,237,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:294,usability,help,help,294,"PyROOT GC issues with python3.11 ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. with stack trace. ```. #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6. #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6. #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6. #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6. #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6. #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210. #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers. entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478. #13 0x00007fc00f8dedfb in deduce_unreachable (base=base. entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable. entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100. #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2, n_collected=n_collected. entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable. entry=0x7ffcb1bbaea0, nofail=nofail. entry=0) at Modules/gcmodule.c:1226. #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate. entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation. entry=2) at Modules/gcmodule.c:1400. #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086. #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830. #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3102,usability,document,documentation,3102," 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3333,usability,Memor,MemoryRegulator,3333,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/issues/13694:3837,usability,interact,interactive,3837,"Main (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734. #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15. ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```. 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {. 1210	 assert(type->tp_dictoffset);. 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);. 1212	 if (err) {. 1213	 return err;. 1214	 }. ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new in Python 3.12...), it seems like perhaps we want something like the following in MemoryRegulator.cxx . ```. 139 if (!Py_TYPE(pyobj)->tp_dictoffset). 140 {. 141 CPyCppyy_NoneType.tp_flags |= (Py_TYPE(pyobj)->tp_flags & Py_TPFLAGS_MANAGED_DICT);. 142 }. ```. This does indeed fix this immediate issue on my system, but I have no idea if it's the right thing or not. (Just commenting out that line also fixes the issue, but presumably causes other issues). . ### Reproducer. A python script with. ```. import ROOT. f = ROOT.TFile(""test.root"",""CREATE""); . ```. or typing those two into an interactive python session and then quitting. ### ROOT version. I used ROOT 6.28.06 with Python3.11 and gcc 13. @clark2668 likely may have a different reproducing compiler version. ### Installation method. build from source. ### Operating system. Fedora 38, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13694
https://github.com/root-project/root/pull/13695:206,interoperability,format,format,206,"[ntuple] Add `GetCompressionSettingsAsString()` to inspector; This PR adds a new `RNTupleInspector` method that returns the compression settings as a string next to the internal integer representation. The format of the string is ""`A` (level `L`)"", where `A` is the name of the compression algorithm and `L` the compression level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13695
https://github.com/root-project/root/pull/13696:155,deployability,updat,updated,155,[MacOS] Fix warnings appeared after moving to the 14.3 SDK; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/pull/13696:125,safety,test,tested,125,[MacOS] Fix warnings appeared after moving to the 14.3 SDK; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/pull/13696:155,safety,updat,updated,155,[MacOS] Fix warnings appeared after moving to the 14.3 SDK; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/pull/13696:155,security,updat,updated,155,[MacOS] Fix warnings appeared after moving to the 14.3 SDK; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/pull/13696:125,testability,test,tested,125,[MacOS] Fix warnings appeared after moving to the 14.3 SDK; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13696
https://github.com/root-project/root/issues/13697:979,availability,avail,available,979,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1341,availability,Operat,Operating,1341,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,deployability,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,deployability,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,deployability,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1189,deployability,version,version,1189,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1203,deployability,Version,Version,1203,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1299,deployability,Instal,Installation,1299,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,integrability,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,integrability,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,integrability,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:997,integrability,pub,public,997,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1008,integrability,repositor,repository,1008,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1046,integrability,pub,public,1046,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1189,integrability,version,version,1189,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1203,integrability,Version,Version,1203,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,interoperability,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,interoperability,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,interoperability,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1008,interoperability,repositor,repository,1008,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,modifiability,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,modifiability,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,modifiability,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1189,modifiability,version,version,1189,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1203,modifiability,Version,Version,1203,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,reliability,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,reliability,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,reliability,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:979,reliability,availab,available,979,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:321,safety,test,test,321,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:968,safety,input,input,968,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:979,safety,avail,available,979,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:58,security,ident,identical,58,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:173,security,ident,identical,173,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,security,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,security,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,security,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:979,security,availab,available,979,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:321,testability,test,test,321,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:681,testability,integr,integral,681,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:703,testability,Integr,Integral,703,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:733,testability,Integr,Integral,733,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1392,testability,context,context,1392,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:11,usability,behavi,behaviour,11,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:968,usability,input,input,968,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13697:1033,usability,user,user,1033,"Unexpected behaviour of KSTest with toys (""X"" option) for identical histograms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:. ```c++. void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");. TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");. const double prob = h1->KolmogorovTest(h2);. std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";. }. ```. with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins? ### ROOT version. ROOT Version: 6.28/04. Built for linuxx8664gcc on Jul 10 2023, 18:22:00. From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13697
https://github.com/root-project/root/issues/13698:297,availability,error,error,297,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:472,availability,error,error,472,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:831,availability,Operat,Operating,831,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:214,deployability,build,build,214,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:756,deployability,version,version,756,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:786,deployability,Instal,Installation,786,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:807,deployability,build,build,807,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:756,integrability,version,version,756,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:196,interoperability,specif,specified,196,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:364,interoperability,Platform,Platforms,364,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:381,interoperability,platform,platform,381,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:756,modifiability,version,version,756,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:297,performance,error,error,297,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:345,performance,Content,Contents,345,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:472,performance,error,error,472,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:297,safety,error,error,297,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:472,safety,error,error,472,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:871,testability,context,context,871,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:297,usability,error,error,297,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/issues/13698:472,usability,error,error,472,"[Meta] ROOT's llvm has issues with ranges coming from the Macos 14.3 sdk (llvm 15); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):. ```. /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation. using iterator_category = decltype(__get_iterator_category());. ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13698
https://github.com/root-project/root/pull/13699:313,deployability,contain,containing,313,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:161,interoperability,format,formatted,161,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:244,interoperability,format,formats,244,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:507,interoperability,format,formatted,507,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:866,interoperability,format,formatted,866,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:225,modifiability,exten,extended,225,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:633,performance,disk,disk,633,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:649,performance,memor,memory,649,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:329,safety,Compl,ComplexStructUtil,329,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:450,safety,test,test,450,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:329,security,Compl,ComplexStructUtil,329,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:450,testability,test,test,450,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:455,usability,Custom,CustomStructUtil,455,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13699:649,usability,memor,memory,649,"[ntuple] Add `PrintColumnTypeInfo` to `RNTupleInspector`; This PR adds the functionality to print per-column type information for a given RNTuple. Output can be formatted in both a text-based table as well as CSV (and may be extended with more formats where desired). ## Example. For an RNTuple with 75 rows each containing one [ComplexStructUtil](https://github.com/root-project/root/blob/3acc0e601bd74ffd876c755069e8e989d922521c/tree/ntupleutil/v7/test/CustomStructUtil.hxx#L36) field, the default (table-formatted) output is as follows:. ```. root [1] inspector->PrintColumnTypeInfo(). column type | count | # elements | bytes on disk | bytes in memory. ----------------|---------|-----------------|-----------------|-----------------. SplitIndex64 | 2 | 150 | 72 | 1200 . SplitReal32 | 4 | 300 | 189 | 1200 . SplitUInt32 | 3 | 225 | 123 | 900 . ```. And the CSV-formatted output:. ```. root [2] inspector->PrintColumnTypeInfo(ROOT::Experimental::ENTupleInspectorPrintFormat::kCSV). columnType,count,nElements,onDiskSize,inMemSize. SplitIndex64,2,150,72,1200. SplitReal32,4,300,189,1200. SplitUInt32,3,225,123,900. ```. Additionally, it is possible to define where the output should be written to (default is stdout).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13699
https://github.com/root-project/root/pull/13700:488,availability,error,errored,488,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:16,deployability,depend,dependent,16,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:79,deployability,depend,dependent,79,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:16,integrability,depend,dependent,16,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:79,integrability,depend,dependent,79,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:378,integrability,pub,public,378,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:16,modifiability,depend,dependent,16,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:79,modifiability,depend,dependent,79,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:488,performance,error,errored,488,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:16,safety,depend,dependent,16,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:79,safety,depend,dependent,79,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:122,safety,review,reviews,122,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:488,safety,error,errored,488,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:635,safety,review,reviews,635,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:16,testability,depend,dependent,16,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:79,testability,depend,dependent,79,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:122,testability,review,reviews,122,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:233,testability,context,context,233,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:635,testability,review,reviews,635,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13700:488,usability,error,errored,488,"Do not evaluate dependent immediate invocations; We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```. template<typename T>. class Bar {. consteval static T x() { return 5; }. public:. Bar() : a(x()) {}. private:. int a;. };. Bar<int> g();. ```. Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13700
https://github.com/root-project/root/pull/13701:257,deployability,depend,dependency,257,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:640,deployability,manag,manage,640,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:651,deployability,depend,dependencies,651,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:640,energy efficiency,manag,manage,640,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:257,integrability,depend,dependency,257,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:651,integrability,depend,dependencies,651,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:257,modifiability,depend,dependency,257,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:651,modifiability,depend,dependencies,651,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:613,performance,time,time,613,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:257,safety,depend,dependency,257,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:640,safety,manag,manage,640,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:651,safety,depend,dependencies,651,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:257,testability,depend,dependency,257,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13701:651,testability,depend,dependencies,651,"[RF] Include `gsl_integration.h` in RooFitMore instead of copy-pasting; Include `gsl_integration.h` in RooFitMore instead of copy-pasting code from gsl. The linking is done in the same was as in `math/mathmore/CMakeLists.txt`. This should add no additional dependency compilcations, because RooFitMore already linked against MathMore, which requires GSL to be present. The copy-pasted code was present in that file for at least 19 years now:. https://github.com/root-project/root/blob/11067c129e04ea8ec9f620b66ee89ab03c726174/roofitcore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx. Probably it was easier in that time to copy-paste than to manage the dependencies correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13701
https://github.com/root-project/root/pull/13702:142,availability,consist,consistently,142,"[ntuple] Homogenize `RNTupleInspector` method names; As mentioned in #13367, this PR homogenizes the naming used in the `RNTupleInspector` by consistently using the `ByType` or `ByName` suffix for methods that return aggregated information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13702
https://github.com/root-project/root/pull/13702:142,usability,consist,consistently,142,"[ntuple] Homogenize `RNTupleInspector` method names; As mentioned in #13367, this PR homogenizes the naming used in the `RNTupleInspector` by consistently using the `ByType` or `ByName` suffix for methods that return aggregated information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13702
https://github.com/root-project/root/pull/13703:297,availability,restor,restore,297,"[jsroot] dev 21/09/2023 with fixes [skip-ci]; 1. TText/TLatex scaling to pad size. 2. Handle TAxis with ndiv = 0. 3. TGraph B draw option - proper bar width. 4. Correctly use fixed label font size in TLegend, not always autoscale. 5. Adjust columns width in TLegend to content. 6. Correctly store/restore defs with fill patterns when producing screenshot . This PR fixes #13693.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13703
https://github.com/root-project/root/pull/13703:126,energy efficiency,draw,draw,126,"[jsroot] dev 21/09/2023 with fixes [skip-ci]; 1. TText/TLatex scaling to pad size. 2. Handle TAxis with ndiv = 0. 3. TGraph B draw option - proper bar width. 4. Correctly use fixed label font size in TLegend, not always autoscale. 5. Adjust columns width in TLegend to content. 6. Correctly store/restore defs with fill patterns when producing screenshot . This PR fixes #13693.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13703
https://github.com/root-project/root/pull/13703:62,modifiability,scal,scaling,62,"[jsroot] dev 21/09/2023 with fixes [skip-ci]; 1. TText/TLatex scaling to pad size. 2. Handle TAxis with ndiv = 0. 3. TGraph B draw option - proper bar width. 4. Correctly use fixed label font size in TLegend, not always autoscale. 5. Adjust columns width in TLegend to content. 6. Correctly store/restore defs with fill patterns when producing screenshot . This PR fixes #13693.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13703
https://github.com/root-project/root/pull/13703:220,performance,autosc,autoscale,220,"[jsroot] dev 21/09/2023 with fixes [skip-ci]; 1. TText/TLatex scaling to pad size. 2. Handle TAxis with ndiv = 0. 3. TGraph B draw option - proper bar width. 4. Correctly use fixed label font size in TLegend, not always autoscale. 5. Adjust columns width in TLegend to content. 6. Correctly store/restore defs with fill patterns when producing screenshot . This PR fixes #13693.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13703
https://github.com/root-project/root/pull/13703:269,performance,content,content,269,"[jsroot] dev 21/09/2023 with fixes [skip-ci]; 1. TText/TLatex scaling to pad size. 2. Handle TAxis with ndiv = 0. 3. TGraph B draw option - proper bar width. 4. Correctly use fixed label font size in TLegend, not always autoscale. 5. Adjust columns width in TLegend to content. 6. Correctly store/restore defs with fill patterns when producing screenshot . This PR fixes #13693.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13703
https://github.com/root-project/root/pull/13703:297,reliability,restor,restore,297,"[jsroot] dev 21/09/2023 with fixes [skip-ci]; 1. TText/TLatex scaling to pad size. 2. Handle TAxis with ndiv = 0. 3. TGraph B draw option - proper bar width. 4. Correctly use fixed label font size in TLegend, not always autoscale. 5. Adjust columns width in TLegend to content. 6. Correctly store/restore defs with fill patterns when producing screenshot . This PR fixes #13693.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13703
https://github.com/root-project/root/pull/13704:38,deployability,artifact,artifacts,38,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:145,deployability,updat,updated,145,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:30,modifiability,pac,package,30,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:115,safety,test,tested,115,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:145,safety,updat,updated,145,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:145,security,updat,updated,145,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13704:115,testability,test,tested,115,[ci] Add generation of binary package artifacts.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13704
https://github.com/root-project/root/pull/13705:200,deployability,updat,updated,200,[Cmake] Eliminate duplicate linked libs; # This Pull request:. Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:104,safety,avoid,avoid,104,[Cmake] Eliminate duplicate linked libs; # This Pull request:. Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:170,safety,test,tested,170,[Cmake] Eliminate duplicate linked libs; # This Pull request:. Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:200,safety,updat,updated,200,[Cmake] Eliminate duplicate linked libs; # This Pull request:. Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:200,security,updat,updated,200,[Cmake] Eliminate duplicate linked libs; # This Pull request:. Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13705:170,testability,test,tested,170,[Cmake] Eliminate duplicate linked libs; # This Pull request:. Eliminates duplicate linked libraries to avoid warnings on mac. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13705
https://github.com/root-project/root/pull/13706:97,modifiability,scal,scaling,97,[jsroot] 7.5.pre 22/09/2023 with TProfile3D support [skip-ci]; 1. Support TProfile3D. 2. Support scaling of special fill patterns. This PR fixes #13678 and #13672,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13706
https://github.com/root-project/root/pull/13706:44,usability,support,support,44,[jsroot] 7.5.pre 22/09/2023 with TProfile3D support [skip-ci]; 1. Support TProfile3D. 2. Support scaling of special fill patterns. This PR fixes #13678 and #13672,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13706
https://github.com/root-project/root/pull/13706:66,usability,Support,Support,66,[jsroot] 7.5.pre 22/09/2023 with TProfile3D support [skip-ci]; 1. Support TProfile3D. 2. Support scaling of special fill patterns. This PR fixes #13678 and #13672,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13706
https://github.com/root-project/root/pull/13706:89,usability,Support,Support,89,[jsroot] 7.5.pre 22/09/2023 with TProfile3D support [skip-ci]; 1. Support TProfile3D. 2. Support scaling of special fill patterns. This PR fixes #13678 and #13672,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13706
https://github.com/root-project/root/issues/13707:312,availability,error,error,312,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1098,availability,Operat,Operating,1098,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1032,deployability,version,version,1032,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1053,deployability,Instal,Installation,1053,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:265,energy efficiency,frequenc,frequency,265,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:694,energy efficiency,frequenc,frequency,694,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1032,integrability,version,version,1032,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:228,interoperability,format,formats,228,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:930,interoperability,format,formats,930,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1009,interoperability,format,formats,1009,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:651,modifiability,scal,scaling,651,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1032,modifiability,version,version,1032,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:217,performance,throughput,throughput-formats,217,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:312,performance,error,error,312,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:495,reliability,doe,does,495,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:312,safety,error,error,312,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:1168,testability,context,context,1168,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13707:312,usability,error,error,312,"Different PDF output `TCanvas` / `TWebCanvas`; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats. - Different ticks and label frequency in the left side y axis. - Different error bar width. 2: size-overview. - Difference in `TPaveText` background (flat color vs shadow). - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram). - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling. - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip). [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip). [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13707
https://github.com/root-project/root/issues/13708:415,availability,escal,escalade,415,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:475,availability,escal,escalade,475,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1577,availability,escal,escalade,1577,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1634,availability,escal,escalade,1634,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2149,availability,Operat,Operating,2149,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:315,deployability,Instal,Install,315,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:341,deployability,Instal,Install,341,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:349,deployability,configurat,configuration,349,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:376,deployability,Instal,Installing,376,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:436,deployability,Instal,Installing,436,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2059,deployability,version,version,2059,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2105,deployability,Instal,Installation,2105,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2126,deployability,build,build,2126,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:5,energy efficiency,Draw,DrawIntegral,5,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:155,energy efficiency,Draw,DrawIntegral,155,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:671,energy efficiency,core,core,671,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:819,energy efficiency,core,core,819,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:964,energy efficiency,core,core,964,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1199,energy efficiency,core,core,1199," is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1362,energy efficiency,core,core,1362,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1459,energy efficiency,Draw,DrawIntegral,1459,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1952,energy efficiency,Draw,Draw,1952,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1975,energy efficiency,Draw,DrawIntegral,1975,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:349,integrability,configur,configuration,349,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2059,integrability,version,version,2059,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:173,interoperability,specif,specific,173,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:349,modifiability,configur,configuration,349,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2059,modifiability,version,version,2059,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1655,safety,test,tests,1655,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:349,security,configur,configuration,349,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:415,security,escal,escalade,415,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:475,security,escal,escalade,475,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:488,security,Sign,SignalTest,488,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1577,security,escal,escalade,1577,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1590,security,Sign,SignalTest,1590,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1634,security,escal,escalade,1634,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1665,security,Sign,SignalTest,1665,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:182,testability,context,context,182,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1655,testability,test,tests,1655,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:2189,testability,context,context,2189,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:230,usability,interact,interactive,230,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:389,usability,User,Users,389,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:449,usability,User,Users,449,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:540,usability,User,Users,540,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:636,usability,User,Users,636,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:706,usability,User,Users,706,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:784,usability,User,Users,784,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:856,usability,User,Users,856,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:929,usability,User,Users,929,"TF1::DrawIntegral; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1072,usability,User,Users,1072,". ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1164,usability,User,Users,1164," in a specific context. This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1235,usability,User,Users,1235,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1327,usability,User,Users,1327,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1398,usability,User,Users,1398,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1486,usability,User,Users,1486,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1551,usability,User,Users,1551,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13708:1608,usability,User,Users,1608,"ppening when using interactive c++. This program is crashing in my case with the following issue:. ```. Install the project... -- Install configuration: ""Debug"". -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp. -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62. [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415. [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17. [/usr/lib/dyld] start (no debug info). ```. ### Reproducer. ```. [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);. // c->Divide(1, 2);. . TF1 *f = new TF1(""lin"", ""x"", -10, 10);. c->cd(1);. f->Draw();. c->cd(2);. f->DrawIntegral();. . while(1). gSystem->ProcessEvents();. return 0;. }. ```. ### ROOT version. ROOT master branch (2023-08-31). ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13708
https://github.com/root-project/root/issues/13709:1461,availability,Operat,Operating,1461,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:701,deployability,depend,depending,701,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:1380,deployability,version,version,1380,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:1417,deployability,Instal,Installation,1417,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:1438,deployability,build,build,1438,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:206,energy efficiency,draw,draw,206,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:701,integrability,depend,depending,701,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:1380,integrability,version,version,1380,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:16,modifiability,paramet,parameter,16,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:155,modifiability,paramet,parameter,155,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:263,modifiability,paramet,parameter,263,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:332,modifiability,paramet,parameter,332,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:685,modifiability,paramet,parameters,685,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:701,modifiability,depend,depending,701,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:1380,modifiability,version,version,1380,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:368,safety,compl,completely,368,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:502,safety,test,test,502,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:701,safety,depend,depending,701,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:368,security,compl,completely,368,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:466,security,modif,modified,466,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:228,testability,simpl,simplicity,228,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:502,testability,test,test,502,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:701,testability,depend,depending,701,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:1501,testability,context,context,1501,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:228,usability,simpl,simplicity,228,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:257,usability,clear,clear,257,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/issues/13709:308,usability,behavi,behaviors,308,"TF1::SetParName parameter names sorting; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have been trying to play with parameter names with TF1 (and TFormula). I need to draw a TF1 curve, for simplicity I want to include clear parameter names. But I see some very strange behaviors.. I play with parameter names and my formula gets completely mess up.. How can this be ? The output of the reproducer is the following:. My f0 gets modified into t0.. ```. root [1] .x test.C. [f0] + [beta]*x. [t0]+[beta]*x <<<<< EXPECTED : ""[f0] + [beta]*x"". ```. ### Reproducer. Here is the reproduced. My example just use f0 and beta, but my program use some other parameters also depending on if/else conditions. . ```. {. 	double t0 = 0;. 	double t1 = 10;. 	. 	double f0 = 12.5;. 	double f1 = 2;. 	double beta = (f1-f0)/t1;. 	TString formulaStr = ""[f0] + [beta]*x"";. TF1 *formula = new TF1(""formula1"", formulaStr);. formula->SetParName (0, ""beta"");. formula->SetParameter(0, beta);. formula->SetParName (1, ""t0"");. formula->SetParameter(1, t0);. formula->SetParName (2, ""f0"");. formula->SetParameter(2, f0);. formula->SetParName (3, ""t1"");. formula->SetParameter(3, t1);. formula->SetParName (4, ""f1"");. formula->SetParameter(4, f1);. std::cout << formulaStr << std::endl;. std::cout << formula->GetFormula()->GetExpFormula() << std::endl;. }. ```. ### ROOT version. ROOT master 2023/08/31. ### Installation method. build from source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13709
https://github.com/root-project/root/pull/13710:72,deployability,version,version,72,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:253,deployability,updat,updated,253,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:72,integrability,version,version,72,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:72,modifiability,version,version,72,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:223,safety,test,tested,223,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:253,safety,updat,updated,253,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:253,security,updat,updated,253,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:223,testability,test,tested,223,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13710:133,usability,tip,tip,133,"[CMake] Eliminate duplicate linked libs; # This Pull request:. Is a new version of #13705 (which is approved), recreated to pick the tip of the master of root as well as roottest. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13710
https://github.com/root-project/root/pull/13711:93,availability,Failur,Failure,93,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:16,deployability,instal,install,16,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:93,deployability,Fail,Failure,93,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:104,deployability,instal,install,104,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:246,deployability,updat,updated,246,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:93,performance,Failur,Failure,93,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:93,reliability,Fail,Failure,93,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:216,safety,test,tested,216,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:246,safety,updat,updated,246,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:246,security,updat,updated,246,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:216,testability,test,tested,216,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:40,usability,help,help,40,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13711:130,usability,help,help,130,[config] remove install of removed root-help.el; # This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13711
https://github.com/root-project/root/pull/13712:291,availability,error,errors,291,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:372,deployability,updat,updated,372,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:42,interoperability,specif,specified,42,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:67,interoperability,specif,specified,67,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:291,performance,error,errors,291,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:115,safety,test,test,115,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:143,safety,Avoid,Avoids,143,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:291,safety,error,errors,291,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:342,safety,test,tested,342,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:372,safety,updat,updated,372,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:372,security,updat,updated,372,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:115,testability,test,test,115,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:342,testability,test,tested,342,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/pull/13712:291,usability,error,errors,291,"[TMVA] Do not run CNN tutorial if imt not specified; if imt is not specified, this tutorial should not be run as a test. # This Pull request:. Avoids running the `TMVA_CNN_Classification.C` when ROOT is not built with imt, since it is a requirement and trying to proceed nevertheless causes errors. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13712
https://github.com/root-project/root/issues/13713:351,availability,error,errors,351,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:697,availability,Operat,Operating,697,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:600,deployability,depend,dependency,600,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:649,deployability,version,version,649,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:667,deployability,Instal,Installation,667,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:171,energy efficiency,current,currently,171,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:600,integrability,depend,dependency,600,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:649,integrability,version,version,649,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:17,modifiability,maintain,maintained,17,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:600,modifiability,depend,dependency,600,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:649,modifiability,version,version,649,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:327,performance,time,time,327,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:351,performance,error,errors,351,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:17,safety,maintain,maintained,17,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:351,safety,error,errors,351,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:600,safety,depend,dependency,600,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:566,security,ident,identify,566,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:600,testability,depend,dependency,600,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:735,testability,context,context,735,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:185,usability,support,supporting,185,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:213,usability,support,supported,213,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/issues/13713:351,usability,error,errors,351,"[Math] Vc is not maintained any more: is a migration strategy needed?; ### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more. On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors. For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13713
https://github.com/root-project/root/pull/13714:29,deployability,instal,installed,29,Remove ELISPDIR - nothing is installed in it anymore; The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:64,deployability,instal,installed,64,Remove ELISPDIR - nothing is installed in it anymore; The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:143,deployability,instal,install,143,Remove ELISPDIR - nothing is installed in it anymore; The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:127,integrability,configur,configure,127,Remove ELISPDIR - nothing is installed in it anymore; The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:127,modifiability,configur,configure,127,Remove ELISPDIR - nothing is installed in it anymore; The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13714:127,security,configur,configure,127,Remove ELISPDIR - nothing is installed in it anymore; The files installed in ELISPDIR have been removed. No need to be able to configure their install location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13714
https://github.com/root-project/root/pull/13715:305,deployability,version,version,305,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:313,deployability,automat,automatically,313,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:654,deployability,updat,updated,654,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:297,energy efficiency,current,current,297,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:538,energy efficiency,current,currently,538,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:305,integrability,version,version,305,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:305,modifiability,version,version,305,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:624,safety,test,tested,624,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:654,safety,updat,updated,654,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:654,security,updat,updated,654,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:313,testability,automat,automatically,313,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13715:624,testability,test,tested,624,"[ntuple] Add `GetColumnTypeInfoAsHist` to `RNTupleInspector`; This PR adds the feature to get a histogram representing different possible column type-related properties. These properties are the type count, number of elements per type, compressed size per type and uncompressed size per type. The current version automatically sets the histogram title based on the information it shows. The title can be changed after returning it using `TH1::SetTitle`. An alternative could be to add another argument which has the default value that is currently used but can be used to provided an alternative title. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13715
https://github.com/root-project/root/pull/13716:184,deployability,updat,updated,184,"[pythia8] Fix license of TPythia8Decayer (NFC):; as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13716:154,safety,test,tested,154,"[pythia8] Fix license of TPythia8Decayer (NFC):; as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13716:184,safety,updat,updated,184,"[pythia8] Fix license of TPythia8Decayer (NFC):; as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13716:184,security,updat,updated,184,"[pythia8] Fix license of TPythia8Decayer (NFC):; as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13716:154,testability,test,tested,154,"[pythia8] Fix license of TPythia8Decayer (NFC):; as per request by Peter Hristov, ALICE. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13716
https://github.com/root-project/root/pull/13717:5,deployability,Updat,Update,5,[RF] Update to latest xRooFit; Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it). .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13717:111,deployability,updat,updates,111,[RF] Update to latest xRooFit; Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it). .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13717:5,safety,Updat,Update,5,[RF] Update to latest xRooFit; Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it). .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13717:111,safety,updat,updates,111,[RF] Update to latest xRooFit; Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it). .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13717:5,security,Updat,Update,5,[RF] Update to latest xRooFit; Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it). .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13717:111,security,updat,updates,111,[RF] Update to latest xRooFit; Should hold off merging this until last minute (I will push any further xroofit updates that come this week to it). .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13717
https://github.com/root-project/root/pull/13718:11,deployability,depend,dependency,11,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:60,deployability,depend,dependency,60,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:111,deployability,depend,dependency,111,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:201,energy efficiency,load,loading,201,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:217,energy efficiency,model,models,217,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:11,integrability,depend,dependency,11,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:60,integrability,depend,dependency,60,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:111,integrability,depend,dependency,111,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:182,interoperability,conflict,conflict,182,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:232,interoperability,architectur,architectures,232,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:11,modifiability,depend,dependency,11,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:60,modifiability,depend,dependency,60,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:111,modifiability,depend,dependency,111,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:201,performance,load,loading,201,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:376,performance,time,time-out,376,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:11,safety,depend,dependency,11,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:60,safety,depend,dependency,60,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:111,safety,depend,dependency,111,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:145,safety,test,test,145,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:217,security,model,models,217,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:11,testability,depend,dependency,11,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:60,testability,depend,dependency,60,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:111,testability,depend,dependency,111,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/pull/13718:145,testability,test,test,145,[tmva] Fix dependency of libTMVA from ; This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. . This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS. (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13718
https://github.com/root-project/root/issues/13719:597,availability,Operat,Operating,597,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:531,deployability,version,version,531,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:552,deployability,Instal,Installation,552,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:573,deployability,build,build,573,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:531,integrability,version,version,531,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:531,modifiability,version,version,531,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:427,performance,time,timeseries,427,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:500,performance,time,timeseries,500,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:637,testability,context,context,637,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:10,usability,behavi,behaviour,10,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:158,usability,clear,clearly,158,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:199,usability,behavi,behaviour,199,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/issues/13719:267,usability,behavi,behaving,267,Different behaviour of new and old graphics; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I apologise in advance since I cannot clearly say whether this is the expected behaviour and my code should be fixed or if the new graphics is not behaving correctly. The X axis labels are touching the plot with the new graphics while they are not with the old one. ### Reproducer. See attached root file: [timeseries.root.zip](https://github.com/root-project/root/files/12717037/timeseries.root.zip). ### ROOT version. master. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13719
https://github.com/root-project/root/pull/13720:132,deployability,updat,updated,132,Fixes and doc improvements backport; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13720:102,safety,test,tested,102,Fixes and doc improvements backport; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13720:132,safety,updat,updated,132,Fixes and doc improvements backport; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13720:132,security,updat,updated,132,Fixes and doc improvements backport; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13720:102,testability,test,tested,102,Fixes and doc improvements backport; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13720
https://github.com/root-project/root/pull/13721:47,energy efficiency,draw,drawing,47,"[webcanvas] several fixes for axis and palette drawing [skip-ci]; 1. Do not draw hist title when ""AXIS"" option is used; do not create title in TWebCanvas. 2. Use factor 0.66666 when draw custom axis labels. 3. Correctly position axis labels - extra offset as in ROOT. 4. If there are many frames on the pad - only one with axes drawing will be interactive. 5. Copy Z axis attributes to color palette - labels offset, colors and so on . Fixes #13719 . Fixes #13707",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13721
https://github.com/root-project/root/pull/13721:76,energy efficiency,draw,draw,76,"[webcanvas] several fixes for axis and palette drawing [skip-ci]; 1. Do not draw hist title when ""AXIS"" option is used; do not create title in TWebCanvas. 2. Use factor 0.66666 when draw custom axis labels. 3. Correctly position axis labels - extra offset as in ROOT. 4. If there are many frames on the pad - only one with axes drawing will be interactive. 5. Copy Z axis attributes to color palette - labels offset, colors and so on . Fixes #13719 . Fixes #13707",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13721
https://github.com/root-project/root/pull/13721:182,energy efficiency,draw,draw,182,"[webcanvas] several fixes for axis and palette drawing [skip-ci]; 1. Do not draw hist title when ""AXIS"" option is used; do not create title in TWebCanvas. 2. Use factor 0.66666 when draw custom axis labels. 3. Correctly position axis labels - extra offset as in ROOT. 4. If there are many frames on the pad - only one with axes drawing will be interactive. 5. Copy Z axis attributes to color palette - labels offset, colors and so on . Fixes #13719 . Fixes #13707",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13721
https://github.com/root-project/root/pull/13721:328,energy efficiency,draw,drawing,328,"[webcanvas] several fixes for axis and palette drawing [skip-ci]; 1. Do not draw hist title when ""AXIS"" option is used; do not create title in TWebCanvas. 2. Use factor 0.66666 when draw custom axis labels. 3. Correctly position axis labels - extra offset as in ROOT. 4. If there are many frames on the pad - only one with axes drawing will be interactive. 5. Copy Z axis attributes to color palette - labels offset, colors and so on . Fixes #13719 . Fixes #13707",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13721
https://github.com/root-project/root/pull/13721:187,usability,custom,custom,187,"[webcanvas] several fixes for axis and palette drawing [skip-ci]; 1. Do not draw hist title when ""AXIS"" option is used; do not create title in TWebCanvas. 2. Use factor 0.66666 when draw custom axis labels. 3. Correctly position axis labels - extra offset as in ROOT. 4. If there are many frames on the pad - only one with axes drawing will be interactive. 5. Copy Z axis attributes to color palette - labels offset, colors and so on . Fixes #13719 . Fixes #13707",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13721
https://github.com/root-project/root/pull/13721:344,usability,interact,interactive,344,"[webcanvas] several fixes for axis and palette drawing [skip-ci]; 1. Do not draw hist title when ""AXIS"" option is used; do not create title in TWebCanvas. 2. Use factor 0.66666 when draw custom axis labels. 3. Correctly position axis labels - extra offset as in ROOT. 4. If there are many frames on the pad - only one with axes drawing will be interactive. 5. Copy Z axis attributes to color palette - labels offset, colors and so on . Fixes #13719 . Fixes #13707",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13721
https://github.com/root-project/root/pull/13722:407,deployability,updat,updated,407,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:35,energy efficiency,adapt,adaptation,35,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:35,integrability,adapt,adaptation,35,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:35,interoperability,adapt,adaptation,35,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:35,modifiability,adapt,adaptation,35,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:377,safety,test,tested,377,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:407,safety,updat,updated,407,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:407,security,updat,updated,407,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13722:377,testability,test,tested,377,"[LLVM] Backport commit; This is an adaptation of commit 6627da727b88ef70b74b7d87f274e0a21a9cea45 Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK. # This Pull request:. Unfortunately the directory structure of our llvm changed, and it was not possible to cherry-pick. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13698.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13722
https://github.com/root-project/root/pull/13724:8,deployability,Updat,Update,8,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:19,deployability,version,version,19,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:82,deployability,build,builds,82,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:238,deployability,build,build,238,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:349,deployability,continu,continue,349,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:511,deployability,updat,updated,511,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:19,integrability,version,version,19,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:270,interoperability,standard,standards,270,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:19,modifiability,version,version,19,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:229,reliability,doe,does,229,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:8,safety,Updat,Update,8,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:481,safety,test,tested,481,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:511,safety,updat,updated,511,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:8,security,Updat,Update,8,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:106,security,polic,policy,106,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:511,security,updat,updated,511,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:481,testability,test,tested,481,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13724:361,usability,support,support,361,"[CMake] Update TBB version; This PR is a proposed solution for a problem of MacOS builds. It is more of a policy decision than a technical discussion, even if there is a technical aspect involved. Since 2019 U9, the one of 6.28, does not build any more on macos for C++ standards equal or greater than 2017 if the new sdk is used. Unfortunately, to continue to support older setups, branching has been put in place. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13724
https://github.com/root-project/root/pull/13725:47,energy efficiency,model,models,47,"[RF][HS3] Fix JSON import of older HistFactory models; The HistFactory JSON IO had some problems with models that were produced prior to ROOT 6.26, e.g., prior to this PR:. https://github.com/root-project/root/pull/8167. In particular, the problem was that the JSON export assumed that the multiplication with the inverse bin width as always done with the RooBinWidthFunction. Also, the first commits in this PR makes sure that the `BinnedLikelihood` attribute is correctly preserved by the JSON IO. More details in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13725
https://github.com/root-project/root/pull/13725:102,energy efficiency,model,models,102,"[RF][HS3] Fix JSON import of older HistFactory models; The HistFactory JSON IO had some problems with models that were produced prior to ROOT 6.26, e.g., prior to this PR:. https://github.com/root-project/root/pull/8167. In particular, the problem was that the JSON export assumed that the multiplication with the inverse bin width as always done with the RooBinWidthFunction. Also, the first commits in this PR makes sure that the `BinnedLikelihood` attribute is correctly preserved by the JSON IO. More details in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13725
https://github.com/root-project/root/pull/13725:47,security,model,models,47,"[RF][HS3] Fix JSON import of older HistFactory models; The HistFactory JSON IO had some problems with models that were produced prior to ROOT 6.26, e.g., prior to this PR:. https://github.com/root-project/root/pull/8167. In particular, the problem was that the JSON export assumed that the multiplication with the inverse bin width as always done with the RooBinWidthFunction. Also, the first commits in this PR makes sure that the `BinnedLikelihood` attribute is correctly preserved by the JSON IO. More details in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13725
https://github.com/root-project/root/pull/13725:102,security,model,models,102,"[RF][HS3] Fix JSON import of older HistFactory models; The HistFactory JSON IO had some problems with models that were produced prior to ROOT 6.26, e.g., prior to this PR:. https://github.com/root-project/root/pull/8167. In particular, the problem was that the JSON export assumed that the multiplication with the inverse bin width as always done with the RooBinWidthFunction. Also, the first commits in this PR makes sure that the `BinnedLikelihood` attribute is correctly preserved by the JSON IO. More details in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13725
https://github.com/root-project/root/pull/13726:337,availability,sli,slight,337,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:235,deployability,version,version,235,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:687,deployability,updat,updated,687,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:583,energy efficiency,current,currently,583,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:235,integrability,version,version,235,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:344,interoperability,mismatch,mismatch,344,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:235,modifiability,version,version,235,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:288,performance,disk,disk,288,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:319,performance,memor,memory,319,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:368,performance,memor,memory,368,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:419,performance,disk,disk,419,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:603,performance,memor,memory,603,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:337,reliability,sli,slight,337,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:657,safety,test,tested,657,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:687,safety,updat,updated,687,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:687,security,updat,updated,687,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:657,testability,test,tested,657,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:319,usability,memor,memory,319,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:368,usability,memor,memory,368,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13726:603,usability,memor,memory,603,"[ntuple] Rename `RNTupleInspector` size-related methods; This PR changes the size-related `RNTupleInspector` methods from `GetOnDiskSize` and `GetInMemorySize` to `GetCompressedSize` and `GetUncompressedSize`, respectively. An earlier version of `RNTuple` stored index fields as 32bit on-disk but kept them as 64bit in memory, causing a slight mismatch between the in-memory representation and actual non-compressed on-disk data. This is not the case anymore and moreover, the name `GetInMemorySize` may be confusing as it can be interpreted as the number of bytes that are actually currently stored in memory rather than the total uncompressed size. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13726
https://github.com/root-project/root/pull/13727:298,availability,servic,services,298,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13727:298,deployability,servic,services,298,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13727:374,deployability,patch,patches,374,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13727:298,integrability,servic,services,298,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13727:298,modifiability,servic,services,298,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13727:374,safety,patch,patches,374,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13727:374,security,patch,patches,374,"[v628] Backports to fix warnings about enum comparisons in the nightlies; Backport two PRs to fix warnings about enum comparisons in the nightlies:. * https://github.com/root-project/root/pull/13360. * https://github.com/root-project/root/pull/13082. The warnings can be seen here:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-28-00-patches/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=6-28/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13727
https://github.com/root-project/root/pull/13728:81,safety,compl,completes,81,[v626][RF][HF] Add missing LinkDefs for systematics classes in HistFactory; This completes the list of LinkDef entries for the classes in `RooStats/HistFactory/Systematics.h`. Backport of https://github.com/root-project/root/pull/12969.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13728
https://github.com/root-project/root/pull/13728:81,security,compl,completes,81,[v626][RF][HF] Add missing LinkDefs for systematics classes in HistFactory; This completes the list of LinkDef entries for the classes in `RooStats/HistFactory/Systematics.h`. Backport of https://github.com/root-project/root/pull/12969.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13728
https://github.com/root-project/root/issues/13729:449,modifiability,paramet,parameter,449,"[math] Contour method has some problems with Minuit2; I the [RooFit interactive Minuit tutorial](https://root.cern.ch/doc/master/rf601__intminuit_8C.html), there is this line here:. ```c++. // The contour algorithm in Minuit2 does not work for this tutorial. m.setMinimizerType(""Minuit"");. ```. The implementation of `CONTOUR` in Minuit2 should be fixed such that this is not necessary. The problem has something to do with the contours hitting the parameter boundaries. If one tries to get different contours inside the boundary by changing the `contour()` to for example:. ```c++. RooPlot *frame = m.contour(frac, sigma_g2, 1, 1.4, 1.7);. ```. the plot looks still a bit screwed up with out-of-place lines:. ![rf601-crop](https://github.com/root-project/root/assets/6578603/33ef2fa5-08d1-458f-a169-63c2c28298ba). Also this problem should be fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13729
https://github.com/root-project/root/issues/13729:226,reliability,doe,does,226,"[math] Contour method has some problems with Minuit2; I the [RooFit interactive Minuit tutorial](https://root.cern.ch/doc/master/rf601__intminuit_8C.html), there is this line here:. ```c++. // The contour algorithm in Minuit2 does not work for this tutorial. m.setMinimizerType(""Minuit"");. ```. The implementation of `CONTOUR` in Minuit2 should be fixed such that this is not necessary. The problem has something to do with the contours hitting the parameter boundaries. If one tries to get different contours inside the boundary by changing the `contour()` to for example:. ```c++. RooPlot *frame = m.contour(frac, sigma_g2, 1, 1.4, 1.7);. ```. the plot looks still a bit screwed up with out-of-place lines:. ![rf601-crop](https://github.com/root-project/root/assets/6578603/33ef2fa5-08d1-458f-a169-63c2c28298ba). Also this problem should be fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13729
https://github.com/root-project/root/issues/13729:68,usability,interact,interactive,68,"[math] Contour method has some problems with Minuit2; I the [RooFit interactive Minuit tutorial](https://root.cern.ch/doc/master/rf601__intminuit_8C.html), there is this line here:. ```c++. // The contour algorithm in Minuit2 does not work for this tutorial. m.setMinimizerType(""Minuit"");. ```. The implementation of `CONTOUR` in Minuit2 should be fixed such that this is not necessary. The problem has something to do with the contours hitting the parameter boundaries. If one tries to get different contours inside the boundary by changing the `contour()` to for example:. ```c++. RooPlot *frame = m.contour(frac, sigma_g2, 1, 1.4, 1.7);. ```. the plot looks still a bit screwed up with out-of-place lines:. ![rf601-crop](https://github.com/root-project/root/assets/6578603/33ef2fa5-08d1-458f-a169-63c2c28298ba). Also this problem should be fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13729
https://github.com/root-project/root/issues/13730:27,availability,operat,operators,27,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,deployability,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:246,deployability,fail,failing,246,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,integrability,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,interoperability,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:158,interoperability,compatib,compatibility,158,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,modifiability,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,reliability,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:246,reliability,fail,failing,246,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,security,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:53,testability,integr,integral,53,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13730:358,usability,help,helpful,358,"[math] TComplex arithmetic operators don't work with integral types; ### Feature description. Hello, . This sounds obvious but, can we hope to have some cast compatibility with int and float for TComplex class ? Just typing the following line is failing: `2*TComplex(2,2)`. but `2.0*TComplex(2,2)` is fine. I dont think this would be a lot of work, but very helpful to use. Cheers,. M.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13730
https://github.com/root-project/root/issues/13731:247,availability,Error,Error,247,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:633,availability,error,error,633,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:836,availability,Operat,Operating,836,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:0,deployability,Build,Build,0,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:142,deployability,build,build,142,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:262,deployability,modul,modules,262,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:336,deployability,fail,failed,336,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:390,deployability,build,builds,390,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:426,deployability,Stack,Stack,426,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:465,deployability,modul,modules,465,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:687,deployability,fail,fail,687,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:751,deployability,build,build,751,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:782,deployability,version,version,782,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:803,deployability,Instal,Installation,803,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:523,energy efficiency,core,core,523,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:305,integrability,sub,sub-command,305,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:317,integrability,FILTER,FILTER,317,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:639,integrability,messag,messages,639,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:782,integrability,version,version,782,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:639,interoperability,messag,messages,639,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:262,modifiability,modul,modules,262,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:465,modifiability,modul,modules,465,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:782,modifiability,version,version,782,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:217,performance,time,times,217,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:247,performance,Error,Error,247,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:633,performance,error,error,633,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:336,reliability,fail,failed,336,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:687,reliability,fail,fail,687,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:247,safety,Error,Error,247,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:262,safety,modul,modules,262,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:465,safety,modul,modules,465,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:633,safety,error,error,633,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:661,safety,detect,detect,661,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:661,security,detect,detect,661,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:876,testability,context,context,876,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:247,usability,Error,Error,247,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:309,usability,command,command,309,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:364,usability,User,Users,364,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:633,usability,error,error,633,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:648,usability,clear,clearer,648,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/issues/13731:692,usability,clear,clearly,692,"Build directory name not allowed to have wildcards in them; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):. ```. CMake Error at cmake/modules/RootMacros.cmake:336 (list):. list sub-command FILTER, mode REGEX failed to compile regex. ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"". Call Stack (most recent call first):. cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY). core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13731
https://github.com/root-project/root/pull/13732:59,deployability,instal,installing,59,"Remove root help.el 6.28; # This Pull request:. The commit installing the root help.el file was cherry-picked to 6.28, but not the commit that removed it. ## Changes or fixes:. Cherry-pick the remoining 2 commits for the removal of the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13732
https://github.com/root-project/root/pull/13732:12,usability,help,help,12,"Remove root help.el 6.28; # This Pull request:. The commit installing the root help.el file was cherry-picked to 6.28, but not the commit that removed it. ## Changes or fixes:. Cherry-pick the remoining 2 commits for the removal of the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13732
https://github.com/root-project/root/pull/13732:79,usability,help,help,79,"Remove root help.el 6.28; # This Pull request:. The commit installing the root help.el file was cherry-picked to 6.28, but not the commit that removed it. ## Changes or fixes:. Cherry-pick the remoining 2 commits for the removal of the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13732
https://github.com/root-project/root/pull/13733:146,availability,state,state,146,"Test possible fix for regex in build dir; In first approximation, this fixes #13731 . I am not sure it's what we want, so for now it's in a rough state. It is based on the discussion at https://gitlab.kitware.com/cmake/cmake/-/issues/18580 . If we decide it's what we want I will polish it a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13733
https://github.com/root-project/root/pull/13733:31,deployability,build,build,31,"Test possible fix for regex in build dir; In first approximation, this fixes #13731 . I am not sure it's what we want, so for now it's in a rough state. It is based on the discussion at https://gitlab.kitware.com/cmake/cmake/-/issues/18580 . If we decide it's what we want I will polish it a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13733
https://github.com/root-project/root/pull/13733:146,integrability,state,state,146,"Test possible fix for regex in build dir; In first approximation, this fixes #13731 . I am not sure it's what we want, so for now it's in a rough state. It is based on the discussion at https://gitlab.kitware.com/cmake/cmake/-/issues/18580 . If we decide it's what we want I will polish it a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13733
https://github.com/root-project/root/pull/13733:0,safety,Test,Test,0,"Test possible fix for regex in build dir; In first approximation, this fixes #13731 . I am not sure it's what we want, so for now it's in a rough state. It is based on the discussion at https://gitlab.kitware.com/cmake/cmake/-/issues/18580 . If we decide it's what we want I will polish it a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13733
https://github.com/root-project/root/pull/13733:0,testability,Test,Test,0,"Test possible fix for regex in build dir; In first approximation, this fixes #13731 . I am not sure it's what we want, so for now it's in a rough state. It is based on the discussion at https://gitlab.kitware.com/cmake/cmake/-/issues/18580 . If we decide it's what we want I will polish it a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13733
https://github.com/root-project/root/issues/13734:357,availability,echo,echo,357,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:574,availability,echo,echo,574,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1160,availability,error,error,1160,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1693,availability,Operat,Operating,1693,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1833,availability,servic,services,1833,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1075,deployability,version,version,1075,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1116,deployability,fail,failing,1116,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1252,deployability,build,build,1252,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1306,deployability,build,build,1306,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1473,deployability,build,build,1473,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1527,deployability,build,build,1527,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1621,deployability,version,version,1621,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1649,deployability,Instal,Installation,1649,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1670,deployability,build,build,1670,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1811,deployability,fail,fail,1811,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1833,deployability,servic,services,1833,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:34,energy efficiency,Load,Load,34,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:232,energy efficiency,load,load,232,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:264,energy efficiency,Load,Load,264,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:280,energy efficiency,load,loading,280,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:508,energy efficiency,Load,Load,508,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:658,energy efficiency,Load,Load,658,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:913,energy efficiency,Load,Load,913,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:937,energy efficiency,load,loading,937,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1006,energy efficiency,Load,Load,1006,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1042,energy efficiency,Load,Load,1042,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1091,energy efficiency,load,loading,1091,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1214,energy efficiency,load,loadLibrary,1214,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1374,energy efficiency,load,loaded,1374,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1075,integrability,version,version,1075,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1166,integrability,messag,message,1166,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1621,integrability,version,version,1621,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1833,integrability,servic,services,1833,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1166,interoperability,messag,message,1166,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1075,modifiability,version,version,1075,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1621,modifiability,version,version,1621,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1833,modifiability,servic,services,1833,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:34,performance,Load,Load,34,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:232,performance,load,load,232,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:264,performance,Load,Load,264,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:280,performance,load,loading,280,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:508,performance,Load,Load,508,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:658,performance,Load,Load,658,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:913,performance,Load,Load,913,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:937,performance,load,loading,937,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1006,performance,Load,Load,1006,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1042,performance,Load,Load,1042,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1091,performance,load,loading,1091,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1160,performance,error,error,1160,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1214,performance,load,loadLibrary,1214,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1374,performance,load,loaded,1374,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:838,reliability,doe,doesn,838,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1116,reliability,fail,failing,1116,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1811,reliability,fail,fail,1811,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1160,safety,error,error,1160,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1779,safety,test,tests,1779,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1743,testability,context,context,1743,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1779,testability,test,tests,1779,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1160,usability,error,error,1160,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1237,usability,User,Users,1237,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/issues/13734:1458,usability,User,Users,1458,"[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh. # Creating a dummy library. echo ""void foo() {}"" > foo.C. root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine. root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script. echo '#include <TSystem.h>. #include <iostream>. int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main. ./main. # But with PyROOT, it doesn't work on macos 14 beta. python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works! python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```. The Python version without loading libRint first is failing on macos 14 beta with the following error message:. ```txt. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so. Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so. Reason: no LC_RPATH's found. -1. ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13734
https://github.com/root-project/root/pull/13735:36,usability,document,documentation,36,[ntuple] Improve `RNTupleInspector` documentation; This PR expands the `RNTupleInspector` documentation by adding proper Doxygen tags and adding additional information where necessary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13735
https://github.com/root-project/root/pull/13735:90,usability,document,documentation,90,[ntuple] Improve `RNTupleInspector` documentation; This PR expands the `RNTupleInspector` documentation by adding proper Doxygen tags and adding additional information where necessary.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13735
https://github.com/root-project/root/pull/13736:204,energy efficiency,load,load,204,"[graf2d] Remove asimagexml, pixmap from AfterImage: incompat license; [graf2d] Remove `asimagexml.c` and `pixmap.c` from AfterImage due to license incompatibility. They were used by `load_xml2ASImage` to load xml to asimage. Almost not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13736
https://github.com/root-project/root/pull/13736:147,interoperability,incompatib,incompatibility,147,"[graf2d] Remove asimagexml, pixmap from AfterImage: incompat license; [graf2d] Remove `asimagexml.c` and `pixmap.c` from AfterImage due to license incompatibility. They were used by `load_xml2ASImage` to load xml to asimage. Almost not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13736
https://github.com/root-project/root/pull/13736:209,interoperability,xml,xml,209,"[graf2d] Remove asimagexml, pixmap from AfterImage: incompat license; [graf2d] Remove `asimagexml.c` and `pixmap.c` from AfterImage due to license incompatibility. They were used by `load_xml2ASImage` to load xml to asimage. Almost not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13736
https://github.com/root-project/root/pull/13736:204,performance,load,load,204,"[graf2d] Remove asimagexml, pixmap from AfterImage: incompat license; [graf2d] Remove `asimagexml.c` and `pixmap.c` from AfterImage due to license incompatibility. They were used by `load_xml2ASImage` to load xml to asimage. Almost not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13736
https://github.com/root-project/root/pull/13737:275,availability,error,errors,275,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:196,deployability,contain,contains,196,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:1,energy efficiency,core,core,1,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:304,energy efficiency,load,loading,304,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:41,interoperability,share,shared,41,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:314,interoperability,share,shared,314,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:275,performance,error,errors,275,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:304,performance,load,loading,304,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:128,reliability,doe,doesn,128,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:275,safety,error,errors,275,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13737:275,usability,error,errors,275,"[core] Add rpath on MacOS when compiling shared libraries via ACLiC; The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13737
https://github.com/root-project/root/pull/13738:59,availability,sli,sliced,59,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:151,availability,sli,sliced,151,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:262,availability,sli,sliced,262,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:424,deployability,updat,updated,424,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:59,reliability,sli,sliced,59,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:151,reliability,sli,sliced,151,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:262,reliability,sli,sliced,262,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:204,safety,input,input,204,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:394,safety,test,tested,394,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:424,safety,updat,updated,424,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:178,security,stride,strides,178,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:424,security,updat,updated,424,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:394,testability,test,tested,394,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13738:204,usability,input,input,204,"[DF] Fix RDataFrame FromNumpy wrong reading of values from sliced arrays; # This Pull request:. The RDF FromNumpy was silently reading wrong values if sliced arrays (arrays with strides) were given as an input. This PR fixes the issue by producing copies of the sliced arrays that are then read correctly. . TODO for the future: a neater solution, without making copies. . ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #13690 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13738
https://github.com/root-project/root/pull/13739:60,deployability,build,building,60,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:519,deployability,updat,updated,519,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:243,interoperability,share,shared,243,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:489,safety,test,tested,489,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:519,safety,updat,updated,519,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:519,security,updat,updated,519,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:489,testability,test,tested,489,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13739:149,usability,feedback,feedback,149,"[CMake] Fix warning about xxhash linked more than once when building libCore.; # This Pull request:. This PR is a WIP and has been posted to collect feedback. It proposes a fix for warnings on MacOS which are prompted when linking the libCore shared library due to two links to libxxHash, which are there only if xxhash and lz4 are builtins. This seems to be a non trivial CMake problem, which is fixed with some perhaps non-hortodox CMake code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13739
https://github.com/root-project/root/pull/13740:157,deployability,updat,updates,157,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:213,energy efficiency,Draw,Draw,213,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:157,safety,updat,updates,157,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:157,security,updat,updates,157,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:84,testability,context,context,84,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:234,testability,context,context,234,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:92,usability,menu,menu,92,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:97,usability,command,commands,97,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:242,usability,menu,menu,242,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13740:247,usability,command,commands,247,[jsroot] 7.5.pre 28/09/2023 with TPaletteAxis fixes [skip-ci]; 1. Properly redirect context menu commands to histogram Z axis. 2. When moving palette - send updates back to the server. 3. Improve HierarchyPainter Draw/Expand/Unexpand context menu commands.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13740
https://github.com/root-project/root/pull/13741:168,deployability,updat,updated,168,[ci] Pass --binaries for all platforms; fix syntax of cpack invocation.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13741:29,interoperability,platform,platforms,29,[ci] Pass --binaries for all platforms; fix syntax of cpack invocation.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13741:138,safety,test,tested,138,[ci] Pass --binaries for all platforms; fix syntax of cpack invocation.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13741:168,safety,updat,updated,168,[ci] Pass --binaries for all platforms; fix syntax of cpack invocation.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13741:168,security,updat,updated,168,[ci] Pass --binaries for all platforms; fix syntax of cpack invocation.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13741:138,testability,test,tested,138,[ci] Pass --binaries for all platforms; fix syntax of cpack invocation.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13741
https://github.com/root-project/root/pull/13742:138,availability,failur,failures,138,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:159,availability,FAILUR,FAILURES,159,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:138,deployability,fail,failures,138,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:159,deployability,FAIL,FAILURES,159,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:75,interoperability,xml,xml,75,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:90,interoperability,xml,xml,90,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:183,interoperability,xml,xml-DOMParsePerson,183,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:216,interoperability,xml,xml-DOMRecursive,216,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:247,interoperability,xml,xml-SAXHandler,247,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:138,performance,failur,failures,138,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:159,performance,FAILUR,FAILURES,159,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:138,reliability,fail,failures,138,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:159,reliability,FAIL,FAILURES,159,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:59,safety,Prevent,Prevent,59,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:79,safety,test,tests,79,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:133,safety,test,test,133,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:154,safety,TEST,TEST,154,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:59,security,Preven,Prevent,59,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:79,testability,test,tests,79,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:133,testability,test,test,133,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13742:154,testability,TEST,TEST,154,"Append to the `xml_veto` list instead of (re-)creating it; Prevent running xml tests when xml is disabled, suppressing the following test failures:. ```. TEST FAILURES:. 971:tutorial-xml-DOMParsePerson. 972:tutorial-xml-DOMRecursive. 973:tutorial-xml-SAXHandler. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13742
https://github.com/root-project/root/pull/13743:118,deployability,build,builds,118,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:232,deployability,updat,updated,232,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:202,safety,test,tested,202,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:232,safety,updat,updated,232,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:232,security,updat,updated,232,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:63,testability,simpl,simple,63,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:202,testability,test,tested,202,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/pull/13743:63,usability,simpl,simple,63,[webgeom] Remove dead code; # This Pull request:. This PR is a simple backport that removes a warning on recent macos builds due to the presence of dead code. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13743
https://github.com/root-project/root/issues/13744:687,availability,Operat,Operating,687,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:305,deployability,Updat,Update,305,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:588,deployability,Updat,Update,588,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:621,deployability,version,version,621,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:642,deployability,Instal,Installation,642,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:295,energy efficiency,Draw,Draw,295,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:578,energy efficiency,Draw,Draw,578,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:621,integrability,version,version,621,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:621,modifiability,version,version,621,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:442,performance,deadlock,deadlock,442,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:52,safety,input,input,52,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:305,safety,Updat,Update,305,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:315,safety,input,input,315,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:588,safety,Updat,Update,588,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:598,safety,input,input,598,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:305,security,Updat,Update,305,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:588,security,Updat,Update,588,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:727,testability,context,context,727,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:26,usability,paus,pause,26,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:52,usability,input,input,52,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:315,usability,input,input,315,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:352,usability,interact,interact,352,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/issues/13744:598,usability,input,input,598,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. This script used to work, also on MacOS. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. and allowed to see and interact with the canvas to then end execution upon pressing a key. This results now in a deadlock in master. ### Reproducer. ```. import ROOT. h = ROOT.TH1F(""foo"", ""bar"", 64, -4, 4). h.FillRandom(""gaus""). c=ROOT.TCanvas(). h.Draw(). c.Update(). input(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13744
https://github.com/root-project/root/pull/13745:20,integrability,event,events,20,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13745:213,safety,input,input,213,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13745:219,testability,hook,hook,219,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13745:101,usability,interact,interactive,101,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13745:185,usability,interact,interactive,185,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13745:213,usability,input,input,213,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13745:251,usability,interact,interactive,251,"[pyroot] adjust GUI events processing; First of all, make handling for Mac and Linux similar. In non-interactive mode run special thread where `gSystem->ProcessEvents()` are called. In interactive mode try to use input hook. . In webgui in python non-interactive mode allow to use calling thread for callbacks invocation. . It is the only chance to get processing of http requests from clients. Probably fixes #13744",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13745
https://github.com/root-project/root/pull/13746:35,availability,operat,operations,35,[math] Support TComplex arithmetic operations with any possible type; Generalize the arithmetic operator overloads of TComplex to general arithmetic types with templates. Closes #13730.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13746
https://github.com/root-project/root/pull/13746:96,availability,operat,operator,96,[math] Support TComplex arithmetic operations with any possible type; Generalize the arithmetic operator overloads of TComplex to general arithmetic types with templates. Closes #13730.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13746
https://github.com/root-project/root/pull/13746:7,usability,Support,Support,7,[math] Support TComplex arithmetic operations with any possible type; Generalize the arithmetic operator overloads of TComplex to general arithmetic types with templates. Closes #13730.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13746
https://github.com/root-project/root/pull/13746:171,usability,Close,Closes,171,[math] Support TComplex arithmetic operations with any possible type; Generalize the arithmetic operator overloads of TComplex to general arithmetic types with templates. Closes #13730.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13746
https://github.com/root-project/root/issues/13747:23,availability,consist,consistent,23,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:729,availability,consist,consistency,729,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1768,availability,Operat,Operating,1768,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:220,deployability,observ,observed,220,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1703,deployability,version,version,1703,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1724,deployability,Instal,Installation,1724,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1745,deployability,build,build,1745,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:487,energy efficiency,Draw,Draw,487,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1339,energy efficiency,Draw,Drawing,1339,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1601,energy efficiency,Draw,Draw,1601,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:173,integrability,discover,discovered,173,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:599,integrability,event,event,599,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1291,integrability,event,events,1291,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1703,integrability,version,version,1703,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:173,interoperability,discover,discovered,173,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1703,modifiability,version,version,1703,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:649,performance,time,timer,649,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1067,performance,time,time,1067,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:663,reliability,doe,does,663,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:220,testability,observ,observed,220,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:1817,testability,context,context,1817,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:23,usability,consist,consistent,23,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:173,usability,discov,discovered,173,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/issues/13747:729,usability,consist,consistency,729,"[pyroot] `gPad` is not consistent when `TThread` methods are used from python threads; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Originally discovered with web graphics,, but also can be observed with plain ROOT graphics. It is enough to start `THttpServer` before creating canvas. In that case `gPad` which should be set in TCanvas constructor not correctly set. From one side, python correctly report value of `gPad.GetName()`. From other side, `title.Draw()` call do not recognize gPad and creates new canvas instance. Most probably problems coming from internal event processing of THttpServer. . It invokes per timer - which does nothing in the example. But uses `TTimer::SelfId()` just for consistency. And seems to be it is a problem. Same problem can be reproduced also without `THttpServer`, just by editing`_application.py` adding printout in the beginning. ```. def _process_root_events(self):. print(""Special thread is started"", TThread.SelfId()). gPad = self.gpad_copy. while self.keep_polling:. gSystem.ProcessEvents(). time.sleep(0.01). ```. ### Reproducer. ```python. from ROOT import TCanvas, TPaveText, gROOT, gPad, TThread, THttpServer. gROOT.SetWebDisplay(""off""). http = THttpServer(""http:8080""). # http.SetTimer(0) # disable any kind of events processing. c1 = TCanvas(""c1"", ""Surfaces Drawing Options"", 200, 10, 700, 900). title = TPaveText(0.2, 0.96, 0.8, 0.995). title.AddText(""Example of gPad problem""). if gPad:. print(""gPad"", gPad.GetName(), ""thread id is"", TThread.SelfId()). else:. print(""No GPAD"", ""thread id is"", TThread.SelfId()). title.Draw(). ```. [gpad_py.txt](https://github.com/root-project/root/files/12749634/gpad_py.txt). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13747
https://github.com/root-project/root/pull/13748:409,availability,error,error,409,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:435,availability,failur,failure,435,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:529,availability,consist,consistency,529,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:550,availability,error,errors,550,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:686,availability,error,error,686,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:435,deployability,fail,failure,435,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:448,deployability,continu,continues,448,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:672,deployability,fail,fail,672,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:716,deployability,log,logs,716,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:126,integrability,pub,public,126,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:220,integrability,pub,public,220,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:415,integrability,messag,messages,415,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:483,integrability,pub,public,483,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:692,integrability,messag,messages,692,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:415,interoperability,messag,messages,415,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:692,interoperability,messag,messages,692,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:409,performance,error,error,409,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:435,performance,failur,failure,435,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:550,performance,error,errors,550,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:686,performance,error,error,686,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:435,reliability,fail,failure,435,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:672,reliability,fail,fail,672,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:7,safety,Avoid,Avoid,7,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:178,safety,except,exceptions,178,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:285,safety,test,tested,285,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:409,safety,error,error,409,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:550,safety,error,errors,550,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:686,safety,error,error,686,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:716,safety,log,logs,716,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:716,security,log,logs,716,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:285,testability,test,tested,285,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:716,testability,log,logs,716,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:236,usability,user,user,236,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:409,usability,error,error,409,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:497,usability,user,user,497,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:529,usability,consist,consistency,529,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:550,usability,error,errors,550,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:561,usability,stop,stop,561,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/pull/13748:686,usability,error,error,686,"[hist] Avoid `try-catch` in TH1; # This Pull request:. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`. The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13748
https://github.com/root-project/root/issues/13749:409,availability,error,error,409,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:753,availability,error,error,753,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:831,availability,Operat,Operating,831,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:48,deployability,fail,failing,48,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:284,deployability,fail,fails,284,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:519,deployability,fail,fail,519,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:714,deployability,version,version,714,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:787,deployability,Instal,Installation,787,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:808,deployability,build,build,808,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:723,energy efficiency,Current,Current,723,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:274,integrability,compon,component,274,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:544,integrability,messag,message,544,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:714,integrability,version,version,714,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:274,interoperability,compon,component,274,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:544,interoperability,messag,message,544,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:274,modifiability,compon,component,274,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:714,modifiability,version,version,714,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:409,performance,error,error,409,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:753,performance,error,error,753,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:48,reliability,fail,failing,48,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:284,reliability,fail,fails,284,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:519,reliability,fail,fail,519,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:773,reliability,doe,does,773,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:409,safety,error,error,409,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:753,safety,error,error,753,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:200,testability,simpl,simple,200,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:879,testability,context,context,879,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:200,usability,simpl,simple,200,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:409,usability,error,error,409,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/issues/13749:753,usability,error,error,753,"[RF] `RooStats::HistFactory::FlexibleInterpVar` failing evaluation; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*. 2. `root -l failWS_release.root`. 3. `fail->Print()`. 4. See: ""message : function value is NAN"". Please find here the workspace:. [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:. https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13749
https://github.com/root-project/root/pull/13750:154,deployability,fail,fails,154,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:184,deployability,configurat,configuration,184,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:184,integrability,configur,configuration,184,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:184,modifiability,configur,configuration,184,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:154,reliability,fail,fails,154,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:184,security,configur,configuration,184,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13750:304,usability,Close,Closes,304,"[CMake] Use `find_package(XRootD)` and not `XROOTD` (case sensitivity); With this change, the reproducer provided in #12631 works for me, while it indeed fails to find `xrootd` in the configuration step without this commit. See:. https://github.com/xrootd/xrootd/blob/master/cmake/XRootDConfig.cmake.in. Closes #12631.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13750
https://github.com/root-project/root/pull/13751:24,deployability,version,version,24,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:85,deployability,version,version,85,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:347,deployability,version,versions,347,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:480,deployability,version,version,480,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:593,deployability,version,version,593,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:675,deployability,version,version,675,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:813,deployability,version,version,813,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:24,integrability,version,version,24,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:85,integrability,version,version,85,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:347,integrability,version,versions,347,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:480,integrability,version,version,480,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:593,integrability,version,version,593,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:675,integrability,version,version,675,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:813,integrability,version,version,813,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:575,interoperability,standard,standard,575,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:631,interoperability,incompatib,incompatible,631,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:24,modifiability,version,version,24,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:85,modifiability,version,version,85,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:347,modifiability,version,versions,347,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:480,modifiability,version,version,480,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:593,modifiability,version,version,593,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:675,modifiability,version,version,675,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:813,modifiability,version,version,813,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:395,performance,memor,memory,395,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:773,reliability,doe,doesn,773,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:493,safety,test,test,493,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:498,safety,test,test,498,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:357,testability,Simpl,Simple,357,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:493,testability,test,test,493,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:498,testability,test,test,498,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:357,usability,Simpl,Simple,357,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:395,usability,memor,memory,395,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:699,usability,clear,clear,699,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13751:874,usability,Close,Closes,874,"[geom] Don't use `-fabi-version=6` when compiling geom/vecgeom with GCC ; The `-fabi-version=6` flag was added to the compilation of. `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`. in newer GCC versions. Simple reproducer:. ```c++. #include <memory>. int main() { std::unique_ptr<int>(nullptr); }. ```. Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library. version that comes with gcc 13.2.1 is incompatible with that (super old). gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to. remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13751
https://github.com/root-project/root/pull/13752:137,deployability,version,version,137,[cmake] Assume XRootD >= 5.0.0 and migrate to `XRootDConfig.cmake` shipped by XRootD; * Assume that XRootD will always be >= 5.0.0 since version 4 is EOL for two years now and all the ROOT features that need XRootD 4 are deprecated by now. * Migrates finding XRootD to the `XRootDConfig.cmake` from XRootD itself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13752
https://github.com/root-project/root/pull/13752:137,integrability,version,version,137,[cmake] Assume XRootD >= 5.0.0 and migrate to `XRootDConfig.cmake` shipped by XRootD; * Assume that XRootD will always be >= 5.0.0 since version 4 is EOL for two years now and all the ROOT features that need XRootD 4 are deprecated by now. * Migrates finding XRootD to the `XRootDConfig.cmake` from XRootD itself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13752
https://github.com/root-project/root/pull/13752:137,modifiability,version,version,137,[cmake] Assume XRootD >= 5.0.0 and migrate to `XRootDConfig.cmake` shipped by XRootD; * Assume that XRootD will always be >= 5.0.0 since version 4 is EOL for two years now and all the ROOT features that need XRootD 4 are deprecated by now. * Migrates finding XRootD to the `XRootDConfig.cmake` from XRootD itself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13752
https://github.com/root-project/root/pull/13754:138,deployability,modul,module,138,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:338,deployability,updat,updated,338,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:38,integrability,event,events,38,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:138,modifiability,modul,module,138,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:138,safety,modul,module,138,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:308,safety,test,tested,308,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:338,safety,updat,updated,338,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:338,security,updat,updated,338,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13754:308,testability,test,tested,308,"🚨 Revert ""[pyroot] make Mac and Linux events handling similar""; This revert is in place because python scripts now hang whenever the ROOT module is imported on macos 12, 13 and 14. This reverts commit 06b86c3a3408fec00eaa615790a9298bb9b7eb41. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13754
https://github.com/root-project/root/pull/13755:573,deployability,updat,updated,573,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:116,energy efficiency,core,core,116,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:217,energy efficiency,core,core,217,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:187,reliability,doe,doesn,187,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:180,safety,input,inputs,180,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:543,safety,test,tested,543,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:573,safety,updat,updated,573,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:573,security,updat,updated,573,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:543,testability,test,tested,543,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13755:180,usability,input,inputs,180,"[cmake] Only add a move_header_XYZ target if there are headers:; ninja rightfully said:. ```. ninja explain: output core/newdelete/move_header_core_newdelete of phony edge with no inputs doesn't exist. ninja explain: core/newdelete/move_header_core_newdelete is dirty. ninja explain: move_headers is dirty. ```. which likely triggered MSBUILD to re-run the move-headers target (during roottest). This might fix it, and in general gets rid of useless ""rebuilds"" of move_headers. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13755
https://github.com/root-project/root/pull/13756:7,deployability,Updat,Update,7,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:66,deployability,updat,updates,66,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:207,deployability,updat,updated,207,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:1,energy efficiency,Core,Core,1,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:7,safety,Updat,Update,7,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:66,safety,updat,updates,66,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:177,safety,test,tested,177,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:207,safety,updat,updated,207,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:7,security,Updat,Update,7,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:66,security,updat,updates,66,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:207,security,updat,updated,207,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:177,testability,test,tested,177,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13756:108,usability,command,command,108,[Core] Update year in the ROOT banner; # This Pull request:. Just updates the banner shown when booting the command line interpreter. ## Changes or fixes:. ## Checklist:. - [V] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13756
https://github.com/root-project/root/pull/13757:36,deployability,upgrad,upgraded,36,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:154,deployability,updat,updated,154,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:36,modifiability,upgrad,upgraded,36,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:124,safety,test,tested,124,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:154,safety,updat,updated,154,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:154,security,updat,updated,154,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13757:124,testability,test,tested,124,[ci] The only Mac in the new CI was upgraded to macOS 14.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13757
https://github.com/root-project/root/pull/13758:67,deployability,log,log,67,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:115,deployability,Updat,Update,115,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:60,energy efficiency,reduc,reduce,60,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:141,interoperability,format,formating,141,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:67,safety,log,log,67,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:115,safety,Updat,Update,115,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:67,security,log,log,67,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:115,security,Updat,Update,115,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:67,testability,log,log,67,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13758:24,usability,support,support,24,[webcanvas] fix `TExec` support in `TGraph` functions; Also reduce log output when processing too many executions. Update JSROOT with eslint formating,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13758
https://github.com/root-project/root/pull/13759:135,deployability,updat,updated,135,[req.txt] No numba for Python3.12 yet.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13759:105,safety,test,tested,105,[req.txt] No numba for Python3.12 yet.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13759:135,safety,updat,updated,135,[req.txt] No numba for Python3.12 yet.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13759:135,security,updat,updated,135,[req.txt] No numba for Python3.12 yet.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13759:105,testability,test,tested,105,[req.txt] No numba for Python3.12 yet.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13759
https://github.com/root-project/root/pull/13760:23,integrability,event,event,23,[pyroot] start special event loop as separate thread from C++; On Mac it is not working from python - let do it from C++ . Define special method and call it via pyroot interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13760
https://github.com/root-project/root/pull/13760:168,integrability,interfac,interface,168,[pyroot] start special event loop as separate thread from C++; On Mac it is not working from python - let do it from C++ . Define special method and call it via pyroot interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13760
https://github.com/root-project/root/pull/13760:168,interoperability,interfac,interface,168,[pyroot] start special event loop as separate thread from C++; On Mac it is not working from python - let do it from C++ . Define special method and call it via pyroot interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13760
https://github.com/root-project/root/pull/13760:168,modifiability,interfac,interface,168,[pyroot] start special event loop as separate thread from C++; On Mac it is not working from python - let do it from C++ . Define special method and call it via pyroot interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13760
https://github.com/root-project/root/pull/13761:123,deployability,updat,updated,123,[ci] Add Fed39 with C++20.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13761:93,safety,test,tested,93,[ci] Add Fed39 with C++20.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13761:123,safety,updat,updated,123,[ci] Add Fed39 with C++20.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13761:123,security,updat,updated,123,[ci] Add Fed39 with C++20.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13761:93,testability,test,tested,93,[ci] Add Fed39 with C++20.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13761
https://github.com/root-project/root/pull/13762:229,deployability,updat,updated,229,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:24,energy efficiency,reduc,reduce,24,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:115,energy efficiency,reduc,reducing,115,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:71,performance,time,time,71,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:1,safety,Test,Testing,1,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:90,safety,test,testing,90,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:199,safety,test,tested,199,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:229,safety,updat,updated,229,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:10,security,Sign,Significantly,10,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:229,security,updat,updated,229,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:1,testability,Test,Testing,1,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:90,testability,test,testing,90,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:124,testability,coverag,coverage,124,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13762:199,testability,test,tested,199,"[Testing] Significantly reduce duration of legacy tutorials; Ran every time by the CI and testing TThread, without reducing coverage. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13762
https://github.com/root-project/root/pull/13763:44,availability,state,statements,44,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:88,deployability,build,building,88,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:204,deployability,updat,updated,204,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:44,integrability,state,statements,44,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:174,safety,test,tested,174,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:204,safety,updat,updated,204,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:29,security,ident,identical,29,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:204,security,updat,updated,204,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13763:174,testability,test,tested,174,[Backport][CMake] Remove N-1 identical link statements; of the libxxhash.a library when building libCore.so. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13763
https://github.com/root-project/root/pull/13764:391,availability,servic,services,391,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:274,deployability,version,versions,274,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:391,deployability,servic,services,391,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:619,deployability,updat,updated,619,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:11,energy efficiency,core,core,11,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:40,energy efficiency,core,core,40,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:170,energy efficiency,core,core,170,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:274,integrability,version,versions,274,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:391,integrability,servic,services,391,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:274,modifiability,version,versions,274,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:391,modifiability,servic,services,391,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:589,safety,test,tested,589,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:619,safety,updat,updated,619,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:619,security,updat,updated,619,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:589,testability,test,tested,589,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:243,usability,prototyp,prototype,243,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:299,usability,support,supported,299,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13764:334,usability,prototyp,prototype,334,"[Backport][core] Remove some `mm*.c` in core/clib; These files are unused and can be removed. This should fix this warning in the ROOT nightlies on the mac13 node:. ```. core/clib/src/mmtrace.c:32:14: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. extern char *getenv ();. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13764
https://github.com/root-project/root/pull/13765:21,deployability,fail,failing,21,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:108,deployability,fail,fails,108,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:315,deployability,updat,updated,315,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:51,energy efficiency,batter,battery,51,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:21,reliability,fail,failing,21,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:108,reliability,fail,fails,108,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:35,safety,test,test,35,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:91,safety,test,test,91,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:285,safety,test,tested,285,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:315,safety,updat,updated,315,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:315,security,updat,updated,315,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:35,testability,test,test,35,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:91,testability,test,test,91,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13765:285,testability,test,tested,285,[TMVA][CMake] Remove failing keras test from macos battery; # This Pull request:. Remove a test that always fails on macos. This is related to https://github.com/root-project/root/pull/13718/commits/5db2ace91a23ea495b9b6a6a87483fcc58ed9547 . ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13765
https://github.com/root-project/root/pull/13768:165,deployability,updat,updated,165,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:41,integrability,sub,subdir,41,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:20,modifiability,pac,packages,20,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:32,modifiability,pac,package,32,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:135,safety,test,tested,135,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:165,safety,updat,updated,165,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:165,security,updat,updated,165,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/pull/13768:135,testability,test,tested,135,[ci] Move resulting packages to package/ subdir to easily find them.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13768
https://github.com/root-project/root/issues/13769:413,availability,Operat,Operating,413,"[PyROOT] Scripts do not work any more on Macos12 (they freeze); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program. All tests in the CI are failing because of this. ### Reproducer. ```python. import ROOT. ROOT.TH1F(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13769:158,deployability,modul,module,158,"[PyROOT] Scripts do not work any more on Macos12 (they freeze); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program. All tests in the CI are failing because of this. ### Reproducer. ```python. import ROOT. ROOT.TH1F(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13769:255,deployability,fail,failing,255,"[PyROOT] Scripts do not work any more on Macos12 (they freeze); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program. All tests in the CI are failing because of this. ### Reproducer. ```python. import ROOT. ROOT.TH1F(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13769:347,deployability,version,version,347,"[PyROOT] Scripts do not work any more on Macos12 (they freeze); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program. All tests in the CI are failing because of this. ### Reproducer. ```python. import ROOT. ROOT.TH1F(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
https://github.com/root-project/root/issues/13769:368,deployability,Instal,Installation,368,"[PyROOT] Scripts do not work any more on Macos12 (they freeze); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing the ROOT module and accessing anything inside it is enough to freeze the program. All tests in the CI are failing because of this. ### Reproducer. ```python. import ROOT. ROOT.TH1F(). ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. MacOS 12, x86 and ARM. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13769
