id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/12430:1896,safety,test,tests,1896,"_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1918,safety,Test,TestProdPdf,1918,"st filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1950,safety,Test,TestProdPdf,1950,"ile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2000,safety,Test,TestProdPdf,2000,"RegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2059,safety,Test,TestProdPdf,2059,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2109,safety,Test,TestProdPdf,2109,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2167,safety,Test,TestProdPdf,2167,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2217,safety,Test,TestProdPdf,2217,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2276,safety,Test,TestProdPdf,2276,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2326,safety,Test,TestProdPdf,2326,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2384,safety,Test,TestProdPdf,2384,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2434,safety,Test,TestProdPdf,2434,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2493,safety,Test,TestProdPdf,2493,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2543,safety,Test,TestProdPdf,2543,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2597,safety,test,tests,2597,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2619,safety,Test,TestProdPdf,2619,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2666,safety,test,test,2666,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2709,safety,test,tests,2709,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2722,safety,test,test,2722,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2768,safety,test,tests,2768,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2788,safety,test,test,2788,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2831,safety,Test,TestGetPartIntList,2831,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2860,safety,TEST,TEST,2860,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2886,safety,TEST,TEST,2886,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2898,safety,Error,Error,2898,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2948,safety,modul,modules,2948,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2993,safety,error,error,2993,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:203,security,log,log,203,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:319,security,compl,complicated,319,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1378,security,hash,hashRooProduct,1378,". d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1553,security,recov,recovery,1553,"erating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.Ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:16,testability,test,test,16,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:119,testability,test,test-testRooProdPdf,119,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:139,testability,test,test,139,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:203,testability,log,log,203,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:218,testability,assert,assert,218,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:438,testability,test,test,438,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:503,testability,unit,unit,503,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:508,testability,test,tests,508,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:678,testability,context,context,678,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:698,testability,test,test,698,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:719,testability,Test,Test,719,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:754,testability,test,test-testRooProdPdf,754,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:922,testability,Test,Test,922,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1103,testability,test,tests,1103,"t-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1116,testability,test,test,1116,"-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1149,testability,test,test,1149,"n s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1189,testability,test,tests,1189,"e. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1231,testability,Test,TestGetPartIntList,1231,"ecause the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1304,testability,test,test,1304,"ssue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1309,testability,test,testRooProdPdf,1309,"re complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1456,testability,Test,TestGetPartIntList,1456,"duce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1504,testability,Test,TestDepsAreCond,1504,"s. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.Caching",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1730,testability,Test,TestDepsAreCond,1730,"ofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1843,testability,test,tests,1843,"ir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1896,testability,test,tests,1896,"_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1918,testability,Test,TestProdPdf,1918,"st filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:1950,testability,Test,TestProdPdf,1950,"ile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2000,testability,Test,TestProdPdf,2000,"RegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2059,testability,Test,TestProdPdf,2059,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2109,testability,Test,TestProdPdf,2109,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2167,testability,Test,TestProdPdf,2167,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2217,testability,Test,TestProdPdf,2217,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2276,testability,Test,TestProdPdf,2276,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2326,testability,Test,TestProdPdf,2326,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2384,testability,Test,TestProdPdf,2384,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2434,testability,Test,TestProdPdf,2434,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2493,testability,Test,TestProdPdf,2493,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2543,testability,Test,TestProdPdf,2543,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2597,testability,test,tests,2597,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2619,testability,Test,TestProdPdf,2619,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2666,testability,test,test,2666,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2709,testability,test,tests,2709,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2722,testability,test,test,2722,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2768,testability,test,tests,2768,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2788,testability,test,test,2788,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2831,testability,Test,TestGetPartIntList,2831,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2860,testability,TEST,TEST,2860,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2886,testability,TEST,TEST,2886,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:420,usability,behavi,behavior,420,"[RF] RooProdPdf test failure on s390x; - [x] Checked for duplicates. ### Describe the bug. The gtest-roofit-roofitcore-test-testRooProdPdf test fails on s390x. This is a big-endian architecture. See the log below. The assert does not fail because the two values are the same with differnt byte order. The issue is more complicated than that::. $ printf '%x\n%x\n' 3649468902 2448666198. d98679e6. 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x. 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:. ~~~. 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec. Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc. Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2898,usability,Error,Error,2898,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12430:2993,usability,error,error,2993,"rationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO. [==========] Running 8 tests from 2 test suites. [----------] Global test environment set-up. [----------] 2 tests from RooProdPdf. [ RUN ] RooProdPdf.TestGetPartIntList. /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure. Expected equality of these values:. hashRooProduct(prod). Which is: 3649468902. 2448666198. [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms). [ RUN ] RooProdPdf.TestDepsAreCond. Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern. [ OK ] RooProdPdf.TestDepsAreCond (644 ms). [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf. [----------] 2 tests from RooProdPdf (873 ms total). [----------] 6 tests from RooProdPdf/TestProdPdf. [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms). [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu. [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms). [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total). [----------] Global test environment tear-down. [==========] 8 tests from 2 test suites ran. (949 ms total). [ PASSED ] 7 tests. [ FAILED ] 1 test, listed below:. [ FAILED ] RooProdPdf.TestGetPartIntList. 1 FAILED TEST. YOU HAVE 1 DISABLED TEST. CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):. error code: 1. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12430
https://github.com/root-project/root/issues/12431:160,availability,failur,failure,160,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:316,availability,Operat,Operating,316,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:769,availability,operat,operator,769,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:942,availability,Error,Error,942,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1042,availability,error,error,1042,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:25,deployability,fail,fails,25,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:118,deployability,fail,fails,118,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:160,deployability,fail,failure,160,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:224,deployability,Build,Build,224,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:295,deployability,version,version,295,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:397,deployability,build,build,397,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:452,deployability,fail,failing,452,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:569,deployability,Fail,Failed,569,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:598,deployability,build,builddir,598,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:607,deployability,build,build,607,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:613,deployability,BUILD,BUILD,613,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:928,deployability,fail,failed,928,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:952,deployability,build,builddir,952,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:961,deployability,build,build,961,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:967,deployability,BUILD,BUILD,967,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:999,deployability,build,build,999,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:14,energy efficiency,draw,drawsparse,14,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:107,energy efficiency,draw,drawsparse,107,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:508,energy efficiency,draw,drawsparse,508,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:647,energy efficiency,draw,drawsparse,647,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:825,energy efficiency,alloc,allocator,825,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:295,integrability,version,version,295,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1031,integrability,messag,message,1031,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1054,integrability,Sub,Subprocess,1054,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1031,interoperability,messag,message,1031,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:295,modifiability,version,version,295,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:160,performance,failur,failure,160,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:942,performance,Error,Error,942,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1042,performance,error,error,1042,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:25,reliability,fail,fails,25,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:118,reliability,fail,fails,118,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:160,reliability,fail,failure,160,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:452,reliability,fail,failing,452,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:569,reliability,Fail,Failed,569,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:928,reliability,fail,failed,928,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:269,safety,test,tests,269,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:460,safety,test,test,460,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:482,safety,Test,Test,482,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:942,safety,Error,Error,942,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1042,safety,error,error,1042,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:264,testability,unit,unit,264,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:269,testability,test,tests,269,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:431,testability,context,context,431,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:460,testability,test,test,460,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:482,testability,Test,Test,482,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:897,testability,Assert,Assertion,897,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:147,usability,behavi,behavior,147,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:210,usability,behavi,behavior,210,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:942,usability,Error,Error,942,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12431:1042,usability,error,error,1042,"tutorial-tree-drawsparse fails on s390x; - [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root for 6.28.00 on s390x. 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00. 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x. 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:. ~~~. 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\. ............***Failed 0.97 sec. Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C... /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed. CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12431
https://github.com/root-project/root/issues/12433:0,security,Access,Access,0,Access root with termux ; https://github.com/AdarshAddee/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12433
https://github.com/root-project/root/pull/12437:76,deployability,log,logical,76,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:105,energy efficiency,draw,drawing,105,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:487,energy efficiency,measur,measure,487,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:76,safety,log,logical,76,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:76,security,log,logical,76,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:76,testability,log,logical,76,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:247,testability,context,context,247,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:255,usability,menu,menu,255,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/pull/12437:401,usability,close,closed,401,"[webgeom] many improvments in web geometry; 1. Split geometry viewer on two logical parts: hierarchy and drawing. 2. Always show full geometry hierarchy. 3. Add color and material column to hierarchy view. 4. Allow to set top visible volume using context menu. 5. Let search volume by name, material, color; use `TRegexp` for search. 6. Fix cleanup of embed web window connection when main connection closed. 7. Correctly count faces for `TGeoShape` instance, use diagonal as importance measure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12437
https://github.com/root-project/root/issues/12438:62,availability,servic,services,62,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1092,availability,ERROR,ERROR,1092,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1102,availability,Error,Error,1102,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1197,availability,toler,tolerance,1197,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1229,availability,ERROR,ERROR,1229,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1245,availability,Error,Error,1245,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:62,deployability,servic,services,62,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:469,deployability,build,build,469,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:520,deployability,build,build,520,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:600,deployability,build,build,600,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:651,deployability,build,build,651,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:694,deployability,build,build,694,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:880,deployability,build,build,880,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1269,deployability,build,build,1269,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1320,deployability,build,build,1320,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:62,integrability,servic,services,62,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1352,integrability,messag,message,1352,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1352,interoperability,messag,message,1352,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:62,modifiability,servic,services,62,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:564,performance,time,timeout,564,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1092,performance,ERROR,ERROR,1092,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1102,performance,Error,Error,1102,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1129,performance,Disk,Disk,1129,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1229,performance,ERROR,ERROR,1229,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1245,performance,Error,Error,1245,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1197,reliability,toleran,tolerance,1197,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:160,safety,test,testReport,160,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:433,safety,TEST,TEST,433,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:564,safety,timeout,timeout,564,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:773,safety,test,testSimpleFile,773,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:838,safety,TEST,TEST,838,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:959,safety,test,testSimpleFile,959,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1062,safety,TEST,TEST,1062,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1087,safety,TEST,TEST,1087,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1092,safety,ERROR,ERROR,1092,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1102,safety,Error,Error,1102,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1112,safety,test,testSimpleFile,1112,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1224,safety,TEST,TEST,1224,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1229,safety,ERROR,ERROR,1229,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1245,safety,Error,Error,1245,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:160,testability,test,testReport,160,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:433,testability,TEST,TEST,433,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:773,testability,test,testSimpleFile,773,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:838,testability,TEST,TEST,838,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:959,testability,test,testSimpleFile,959,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1062,testability,TEST,TEST,1062,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1087,testability,TEST,TEST,1087,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1112,testability,test,testSimpleFile,1112,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1224,testability,TEST,TEST,1224,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:438,usability,COMMAND,COMMAND,438,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1092,usability,ERROR,ERROR,1092,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1102,usability,Error,Error,1102,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1229,usability,ERROR,ERROR,1229,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/issues/12438:1245,usability,Error,Error,1245,"Unstable result of lz4 compression; As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : . ```. hadd Target file: hsimple401.root. hadd compression setting for all output: 401. hadd Source file 1: hsimple.root. hadd Target path: hsimple401.root:/. -- TEST COMMAND -- . cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger. /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7). -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)... Checking hsimple401.root. (int) 1000. -- END TEST OUTPUT --. -- BEGIN TEST ERROR --. Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --. CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):. got exit code 255 but expected 0. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12438
https://github.com/root-project/root/pull/12439:680,availability,sli,slightly,680,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12439:274,deployability,stack,stack,274,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12439:176,energy efficiency,current,current,176,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12439:458,energy efficiency,alloc,allocated,458,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12439:158,performance,time,time,158,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12439:680,reliability,sli,slightly,680,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12439:404,usability,statu,status,404,"Do not record kIsOnHeap nor kNotDeleted; Rather than reading from the file the value of kIsOnHeap, preserve the value that was. calculated at object creation time (i.e. in the current execution). For example, for. an embedded object (inside an object created on the heap or stack), the bit always. need to be off (i.e. it can never be explicitly deleted)# This Pull request:. When reading back the ""heap status"" is determine by how the. read-into object was allocated, so there is no need to record. that information. When reading back, the kNotDeleted is always on, (and should. always be on when writing :) ), so there is no need to record it. Recording '0' for both allow for (slightly) better compression. Fix https://github.com/root-project/root/issues/12438.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12439
https://github.com/root-project/root/pull/12440:52,modifiability,variab,variable,52,[ntuple] Avoid warning about possibly uninitialized variable; Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/pull/12440:86,modifiability,variab,variable,86,[ntuple] Avoid warning about possibly uninitialized variable; Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/pull/12440:134,reliability,doe,does,134,[ntuple] Avoid warning about possibly uninitialized variable; Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/pull/12440:9,safety,Avoid,Avoid,9,[ntuple] Avoid warning about possibly uninitialized variable; Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/pull/12440:166,security,hack,hackery,166,[ntuple] Avoid warning about possibly uninitialized variable; Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/pull/12440:143,testability,understand,understand,143,[ntuple] Avoid warning about possibly uninitialized variable; Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12440
https://github.com/root-project/root/issues/12441:16,deployability,updat,updated,16,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:47,deployability,version,version,47,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:211,deployability,version,version,211,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:320,deployability,updat,updated,320,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:344,deployability,version,version,344,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:47,integrability,version,version,47,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:211,integrability,version,version,211,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:344,integrability,version,version,344,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:141,interoperability,bind,bindings,141,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:268,interoperability,share,share,268,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:47,modifiability,version,version,47,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:141,modifiability,bind,bindings,141,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:211,modifiability,version,version,211,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:344,modifiability,version,version,344,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:16,safety,updat,updated,16,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:320,safety,updat,updated,320,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:16,security,updat,updated,16,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/issues/12441:320,security,updat,updated,320,JsMVA should be updated to use the same jsroot version as the rest of ROOT; ### Explain what you would like to see improved. The JsMVA code `bindings/jsmva/` and `etc/notebook/JsMVA/` uses a different and older version of jsroot than the rest of ROOT. . ### Optional: share how it could be improved. It should either be updated to use the same version or dropped.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12441
https://github.com/root-project/root/pull/12442:654,availability,servic,services,654,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:201,deployability,version,versions,201,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:654,deployability,servic,services,654,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:825,energy efficiency,Heat,HeatmapAnalyzer,825,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:201,integrability,version,versions,201,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:654,integrability,servic,services,654,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:201,modifiability,version,versions,201,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:231,modifiability,variab,variable,231,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:654,modifiability,servic,services,654,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:805,performance,memor,memory,805,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:297,reliability,doe,does,297,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:0,safety,Avoid,Avoid,0,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:358,safety,avoid,avoid,358,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:594,safety,avoid,avoid,594,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:502,usability,clear,clearer,502,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12442:805,usability,memor,memory,805,"Avoid warnings when iterating over a TList in a range-based loop with `auto const&&`; The example for range-based iteration in `TList.cxx` uses a pattern that. can yield compiler warnings for some GCC versions:. ```. warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]. ```. To avoid spreading this pattern, this commit suggests to change the. example to explicitly use the `TObject *` type, which also makes the. example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:. https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12442
https://github.com/root-project/root/pull/12443:32,interoperability,specif,specification,32,Enforce 'sample' concept in the specification; Backport of #12366,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12443
https://github.com/root-project/root/pull/12444:14,interoperability,format,format,14,"Change `clang-format` style to have line breaks in c'tor initializer; Backport of #12102 , in case we want it for 6.28 too since we'll still be making some changes there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12444
https://github.com/root-project/root/pull/12447:900,deployability,depend,dependend,900,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:168,energy efficiency,alloc,allocation,168,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:900,integrability,depend,dependend,900,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:900,modifiability,depend,dependend,900,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:161,performance,memor,memory,161,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:182,performance,improve perform,improve performance,182,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:454,performance,content,content,454,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:480,performance,cach,cache,480,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:927,performance,cach,cache,927,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:537,reliability,doe,doesn,537,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:25,safety,Test,TestGetPartIntList,25,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:50,safety,test,test,50,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:233,safety,test,test,233,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:339,safety,test,test,339,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:611,safety,test,test,611,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:673,safety,test,test,673,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:900,safety,depend,dependend,900,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:993,safety,test,test,993,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:1183,safety,test,test,1183,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:442,security,hash,hashing,442,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:580,security,hash,hash,580,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:589,security,hardcod,hardcoded,589,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:915,security,hash,hashing,915,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:25,testability,Test,TestGetPartIntList,25,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:45,testability,unit,unit,45,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:50,testability,test,test,50,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:228,testability,unit,unit,228,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:233,testability,test,test,233,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:243,testability,verif,verifies,243,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:339,testability,test,test,339,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:606,testability,unit,unit,606,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:611,testability,test,test,611,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:668,testability,unit,unit,668,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:673,testability,test,test,673,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:900,testability,depend,dependend,900,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:993,testability,test,test,993,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:1178,testability,unit,unit,1178,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:1183,testability,test,test,1183,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:161,usability,memor,memory,161,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:190,usability,perform,performance,190,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:556,usability,behavi,behavior,556,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12447:948,usability,close,closes,948,"[RF] Rewrite `RooProdPdf.TestGetPartIntList` unit test; In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12447
https://github.com/root-project/root/pull/12448:29,deployability,log,log,29,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:33,deployability,scale,scale,33,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:145,deployability,Log,Log,145,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:270,deployability,artifact,artifact,270,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:440,deployability,patch,patch,440,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:18,energy efficiency,draw,drawing,18,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:33,energy efficiency,scale,scale,33,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:116,energy efficiency,draw,drawn,116,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:192,energy efficiency,draw,drawn,192,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:383,energy efficiency,draw,drawn,383,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:479,energy efficiency,draw,drawing,479,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:500,energy efficiency,draw,drawing,500,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:1080,energy efficiency,Draw,Draw,1080,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:1100,energy efficiency,Draw,Draw,1100,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:1195,energy efficiency,Draw,Draw,1195,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:1215,energy efficiency,Draw,Draw,1215,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:33,modifiability,scal,scale,33,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:33,performance,scale,scale,33,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:29,safety,log,log,29,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:145,safety,Log,Log,145,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:440,safety,patch,patch,440,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:29,security,log,log,29,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:145,security,Log,Log,145,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:440,security,patch,patch,440,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:29,testability,log,log,29,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:145,testability,Log,Log,145,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12448:205,usability,minim,minimum,205,"Fix multiple hist drawing in log scale.; When two histograms created with different upper edges of the last bin are drawn in the same pad with a Log y-axis. The edge of the last bin should be drawn as the minimum y value of the pad, instead, it is always set to 1. This artifact is most noticeable when the histogram values are less than 1. This occurred only when the histogram was drawn as a line, it was correct with a filled area. This patch uses the same algorithm for line drawing as fill area drawing. The problem was seen here: https://github.com/root-project/root/issues/12394. The following macro can be used as a reproducer:. ```. {. gStyle->SetOptStat(0);. gStyle->SetOptTitle(0);. auto C = new TCanvas();. C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);. auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);. h15->Fill(12,1.);. h15->Fill(14,.5);. h15->SetLineWidth(3);. h25->Fill(1,1);. h25->Fill(6,2);. h25->Fill(11,3);. h25->Fill(16,2);. h25->Fill(23,1);. h25->SetLineColor(2);. h25->SetLineWidth(3);. h25->SetMinimum(.05);. C->cd(1);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetLogy(1);. gPad->SetGridx(1);. gPad->SetGridy(1);. C->cd(2);. h25->Draw(""hist"");. h15->Draw(""hist same"");. gPad->SetGridx(1);. gPad->SetGridy(1);. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12448
https://github.com/root-project/root/pull/12449:15,availability,error,error,15,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:104,availability,error,errors,104,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:403,availability,error,errors,403,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1346,availability,operat,operator,1346," sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Temp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2059,availability,error,error,2059,"y related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2528,availability,error,error,2528,". test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2814,availability,operat,operator,2814,"_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3211,availability,error,error,3211,"h ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_hel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3542,availability,error,error,3542,"ign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3640,availability,operat,operator,3640,"s = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3930,availability,error,error,3930,"r<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4028,availability,operat,operator,4028,"ebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4246,availability,error,error,4246,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4577,availability,error,error,4577,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4675,availability,operat,operator,4675,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:147,deployability,fail,fails,147,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:194,deployability,version,version,194,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:379,deployability,fail,fails,379,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:434,deployability,roll,rolling,434,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:920,deployability,rollback,rollback,920,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1916,deployability,fail,failed,1916," rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specializati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2135,deployability,rollback,rollback,2135,"-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2338,deployability,fail,failed,2338,"ze_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2373,deployability,fail,failed,2373,"td::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function templat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2382,deployability,Fail,Failed,2382,"t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template special",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3148,deployability,Fail,Failed,3148," noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3480,deployability,Fail,Failed,3480,". /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3823,deployability,fail,failed,3823,"requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3858,deployability,fail,failed,3858,". note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3867,deployability,Fail,Failed,3867,"n instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4183,deployability,Fail,Failed,4183,"per<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4515,deployability,Fail,Failed,4515,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1974,energy efficiency,optim,optimal,1974,"haves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2791,energy efficiency,alloc,allocator,2791," try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2967,energy efficiency,alloc,allocator,2967,"o optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<doub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3270,energy efficiency,alloc,allocator,3270,". creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3438,energy efficiency,alloc,allocator,3438,". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3593,energy efficiency,alloc,allocator,3593,"t std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3754,energy efficiency,alloc,allocator,3754,"Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3981,energy efficiency,alloc,allocator,3981," > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Need",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4142,energy efficiency,alloc,allocator,4142," Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.github",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4305,energy efficiency,alloc,allocator,4305,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4473,energy efficiency,alloc,allocator,4473,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4628,energy efficiency,alloc,allocator,4628,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4789,energy efficiency,alloc,allocator,4789,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:62,integrability,sub,substantive,62,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:130,integrability,wrap,wrapper,130,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:194,integrability,version,version,194,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1312,integrability,pub,public,1312,"a52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2065,integrability,messag,message,2065,"ed to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:130,interoperability,wrapper,wrapper,130,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2065,interoperability,messag,message,2065,"ed to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:194,modifiability,version,version,194,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2552,modifiability,variab,variable,2552,"ort ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3057,modifiability,variab,variable,3057,"ror message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:15,performance,error,error,15,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:104,performance,error,errors,104,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:403,performance,error,errors,403,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2059,performance,error,error,2059,"y related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2528,performance,error,error,2528,". test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3211,performance,error,error,3211,"h ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_hel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3542,performance,error,error,3542,"ign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3930,performance,error,error,3930,"r<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4246,performance,error,error,4246,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4577,performance,error,error,4577,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:147,reliability,fail,fails,147,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:379,reliability,fail,fails,379,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:633,reliability,diagno,diagnostics,633,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:709,reliability,diagno,diagnostic,709,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:920,reliability,rollback,rollback,920,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1916,reliability,fail,failed,1916," rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specializati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2135,reliability,rollback,rollback,2135,"-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2338,reliability,fail,failed,2338,"ze_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2373,reliability,fail,failed,2373,"td::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function templat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2382,reliability,Fail,Failed,2382,"t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template special",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3148,reliability,Fail,Failed,3148," noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3480,reliability,Fail,Failed,3480,". /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3616,reliability,doe,does,3616,"'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<dou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3823,reliability,fail,failed,3823,"requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3858,reliability,fail,failed,3858,". note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3867,reliability,Fail,Failed,3867,"n instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4004,reliability,doe,does,4004,". /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4183,reliability,Fail,Failed,4183,"per<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4515,reliability,Fail,Failed,4515,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4651,reliability,doe,does,4651,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4938,reliability,diagno,diagnostic,4938,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:15,safety,error,error,15,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:104,safety,error,errors,104,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:403,safety,error,errors,403,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:755,safety,except,exceptions,755,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1244,safety,test,test,1244,"n cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1256,safety,test,test,1256,"ps://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1533,safety,test,test,1533,", @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1609,safety,test,test,1609,"for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1873,safety,except,except,1873,"ome remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1880,safety,Except,Exception,1880,"ning problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2059,safety,error,error,2059,"y related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2515,safety,test,test,2515,"per();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2528,safety,error,error,2528,". test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2702,safety,test,test,2702,"ector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specializa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3038,safety,test,test,3038,"iation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3211,safety,error,error,3211,"h ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_hel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3542,safety,error,error,3542,"ign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3930,safety,error,error,3930,"r<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4246,safety,error,error,4246,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4577,safety,error,error,4577,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:5070,safety,compl,complex,5070,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:920,security,rollback,rollback,920,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2135,security,rollback,rollback,2135,"-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:5070,security,compl,complex,5070,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:633,testability,diagno,diagnostics,633,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:709,testability,diagno,diagnostic,709,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1244,testability,test,test,1244,"n cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1256,testability,test,test,1256,"ps://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1533,testability,test,test,1533,", @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1609,testability,test,test,1609,"for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2515,testability,test,test,2515,"per();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(He",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2702,testability,test,test,2702,"ector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specializa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3038,testability,test,test,3038,"iation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4938,testability,diagno,diagnostic,4938,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:15,usability,error,error,15,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:104,usability,error,errors,104,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:403,usability,error,errors,403,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:650,usability,user,user,650,"[WIP] Improved error handling for template instantiation; Two substantive changes:. 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1302,usability,Help,Helper,1302,"d5ffcabaeba52fba5b8471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling hel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1321,usability,Help,Helper,1321,"471149c6bb1fe71d). 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1496,usability,help,helper,1496,"y sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1514,usability,help,helper,1514,"ctly the right fix, @Axel-Naumann @jalopezg-git please take a look). 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1663,usability,help,helper,1663,"tream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1673,usability,help,helper,1673,"use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1687,usability,Help,Helper,1687,"pyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1739,usability,help,helper,1739,"o the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1826,usability,help,helper,1826,"ot-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' req",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1842,usability,help,helper,1842,"issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1904,usability,help,helper,1904," transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:1965,usability,close,close,1965,"pyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2059,usability,error,error,2059,"y related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:. ```cpp. template <typename T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2286,usability,help,helper,2286,"me T>. class Helper {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2302,usability,help,helper,2302,"per {. public:. Helper() {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2326,usability,help,helper,2326," {}. std::size_t operator() () const {. const std::size_t res = 0;. res = T{0, 0}.size();. return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2417,usability,Help,Helper,2417,"return res;. }. };. template <typename H>. std::size_t call_helper(const H &helper) {. return helper();. }. ```. test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2528,usability,error,error,2528,". test.py. ```python. import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""). helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2759,usability,Help,Helper,2759,"e(2):. print(f""call attempt {i}""). try:. res = ROOT.call_helper(helper). print(""helper call succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocato",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2849,usability,help,helper,2849,"l succeeded:"", res). except Exception as e:. print(""helper call failed""). print(e). ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resol",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:2935,usability,Help,Helper,2935,"`. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3183,usability,Help,Helper,3183,"ntiating the template through ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3211,usability,error,error,3211,"h ```TInterpreter::Declare``` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_hel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3238,usability,Help,Helper,3238,"`` as said). ```. declare ret True. creating helper. calling helper. call attempt 0. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3406,usability,Help,Helper,3406,"_helper(Helper<vector<double> >&)"". In file included from input_line_52:1:. /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function templ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3515,usability,Help,Helper,3515,"t.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3542,usability,error,error,3542,"ign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_he",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3561,usability,Help,Helper,3561,"s' with const-qualified type 'const std::size_t' (aka 'const unsigned long'). res = T{0, 0}.size();. ~~~ ^. /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3722,usability,Help,Helper,3722,"instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function templ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3811,usability,help,helper,3811,"operator()' requested here. return helper();. ^. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3902,usability,Help,Helper,3902,"e specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3930,usability,error,error,3930,"r<Helper<std::vector<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:3949,usability,Help,Helper,3949,"r<double, std::allocator<double> > > >' requested here. /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here. const std::size_t res = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic pri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4110,usability,Help,Helper,4110,"s = 0;. ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. !",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4218,usability,Help,Helper,4218,"led object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4246,usability,error,error,4246,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4273,usability,Help,Helper,4273,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4441,usability,Help,Helper,4441,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4550,usability,Help,Helper,4550,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4577,usability,error,error,4577,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4596,usability,Help,Helper,4596,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:4757,usability,Help,Helper,4757,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12449:5129,usability,user,user-images,5129,"d object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1. helper call failed. Template method resolution failed:. Failed to instantiate ""call_helper(Helper<vector<double> >&)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)"". error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)"". error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator. note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needless to say, taken together this constitutes a major improvement when trying to use complex templated code with pyroot/cppyy. ![image](https://user-images.githubusercontent.com/4920798/226954485-09a0b158-4515-4b35-ae17-6d7b340bdce8.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12449
https://github.com/root-project/root/pull/12451:98,deployability,fail,fails,98,[RF] Enable AD code-gen test for RooFit.; Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/pull/12451:98,reliability,fail,fails,98,[RF] Enable AD code-gen test for RooFit.; Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/pull/12451:24,safety,test,test,24,[RF] Enable AD code-gen test for RooFit.; Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/pull/12451:71,safety,test,test,71,[RF] Enable AD code-gen test for RooFit.; Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/pull/12451:24,testability,test,test,24,[RF] Enable AD code-gen test for RooFit.; Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/pull/12451:71,testability,test,test,71,[RF] Enable AD code-gen test for RooFit.; Enable a previously disabled test to fix it if it still fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12451
https://github.com/root-project/root/issues/12452:2340,availability,Operat,Operating,2340," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2415,availability,down,download,2415," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:721,deployability,version,versions,721,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1537,deployability,build,build,1537,"ond-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2208,deployability,Updat,Update,2208," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2328,deployability,version,version,2328," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2397,deployability,instal,install,2397," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2480,deployability,version,versions,2480," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2178,energy efficiency,Draw,Draw,2178," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2193,energy efficiency,Draw,Draw,2193," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:721,integrability,version,versions,721,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2328,integrability,version,version,2328," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2480,integrability,version,versions,2480," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:606,modifiability,paramet,parameter,606,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:721,modifiability,version,versions,721,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1963,modifiability,paramet,parameter,1963," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2026,modifiability,paramet,parameter,2026," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2328,modifiability,version,version,2328," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2480,modifiability,version,versions,2480," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1237,safety,avoid,avoid,1237,"ra/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1491,safety,input,input,1491,"on of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2208,safety,Updat,Update,2208," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2289,safety,input,input,2289," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2208,security,Updat,Update,2208," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2521,testability,context,context,2521," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2550,testability,context,context,2550," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:467,usability,clear,clear,467,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:515,usability,behavi,behavior,515,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:766,usability,user,user-images,766,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:888,usability,user,user-images,888,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:996,usability,behavi,behavior,996,"[RF] Handling of the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1014,usability,clear,clear,1014,"the negative values in RooChebychev causes fit divergence; - [V ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1083,usability,prefer,preferred,1083,"ed for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Che",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1346,usability,behavi,behavior,1346," add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:1491,usability,input,input,1491,"on of what the wrong behavior is. -->. The second-order RooChebyshev class produces negative values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ub",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12452:2289,usability,input,input,2289," values for certain parameter range around `c1=-0.5` and `c2=-0.55`. . These negative values are then handled differently in different versions of ROOT. ![chebtest_6 2004](https://user-images.githubusercontent.com/8844360/223719234-2a99dc62-3c1a-4f2b-9690-3ccc5fa45df0.png). ![chebtest_6 2406](https://user-images.githubusercontent.com/8844360/223719704-06e4d558-9aa0-4d48-a15c-7316297f0bfb.png). ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. A preferred solution would be to set negative values to 0 as in ROOT 6.20, because setting them to +inf is causing the fits to diverge. . Is it possible to avoid the negative values in RooChebychev in the first place? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The code which produces the plots above:. ```. import ROOT. canvas = ROOT.TCanvas(""cv1"", ""cv1"", 700, 500). #ROOT.__version__ = '6.20/04' # Earlier pyROOT implementations have no __version__. mass = ROOT.RooRealVar(""KS_M"", ""m(#pi^{+}#pi^{-}) GeV/c^{2}"", 0.47, 0.53). frame = mass.frame(ROOT.RooFit.Bins(100), ROOT.RooFit.Title(ROOT.__version__)). c1 = ROOT.RooRealVar(""c1"", "" 1st cheb parameter"",-0.5, -1, 1). c2 = ROOT.RooRealVar(""c2"", "" 2nd cheb parameter"", -0.55, -1, 1). bkg = ROOT.RooChebychev(""bkg"", ""Chebyshev Polynomial"", mass, ROOT.RooArgList(c1, c2)). bkg.plotOn(frame). canvas.cd(). frame.Draw(). canvas.Draw(). canvas.Update(). canvas.SaveAs(f'pdf/chebtest_{ROOT.__version__.replace(""/"","""")}.png'). input(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. I used 6.20 and 6.24 ROOT versions on Ubuntu 18.04. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12452
https://github.com/root-project/root/issues/12453:12,availability,error,errors,12,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:83,availability,error,errors,83,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:877,availability,ERROR,ERROR,877,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:915,availability,error,error,915,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1010,availability,error,errors,1010,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1133,availability,error,error,1133,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:113,deployability,version,versions,113,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1089,deployability,releas,releases,1089,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:113,integrability,version,versions,113,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:902,integrability,event,event,902,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1139,integrability,messag,message,1139,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1139,interoperability,messag,message,1139,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:113,modifiability,version,versions,113,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:977,modifiability,variab,variable,977,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:12,performance,error,errors,12,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:83,performance,error,errors,83,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:877,performance,ERROR,ERROR,877,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:915,performance,error,error,915,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1010,performance,error,errors,1010,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1133,performance,error,error,1133,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:995,reliability,doe,does,995,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:12,safety,error,errors,12,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:83,safety,error,errors,83,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:877,safety,ERROR,ERROR,877,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:915,safety,error,error,915,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1010,safety,error,errors,1010,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1133,safety,error,error,1133,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:148,testability,simul,simultaneous,148,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:12,usability,error,errors,12,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:83,usability,error,errors,83,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:877,usability,ERROR,ERROR,877,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:915,usability,error,error,915,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1010,usability,error,errors,1010,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/issues/12453:1133,usability,error,error,1133,"[RF] Weight errors are wrong when splitting RooDataSet and RooDataHist with weight errors; This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};. RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};. RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};. auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);. std::cout << data1.weightError() << std::endl;. data2.get(0);. std::cout << data2.weightError() << std::endl;. }. ```. The output will be:. ```. [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor. 0.3. 0. ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12453
https://github.com/root-project/root/pull/12454:190,deployability,fail,failing,190,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:223,deployability,unload,unloaded,223,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:49,integrability,Buffer,Buffer,49,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:21,performance,Content,ContentCache,21,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:190,reliability,fail,failing,190,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:140,safety,test,test,140,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:203,safety,compl,complaints,203,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:203,security,compl,complaints,203,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/pull/12454:140,testability,test,test,140,"Revert ""[clang] Mark ContentCache as invalid if !Buffer:""; This reverts commit 8deb57c04a5ceea96533d095092fcd4f71d1df94 and fixes the Cling test `CodeUnloading/Macros.C` that was previously failing with complaints that the unloaded and then re-included `Macros.h` header had no lines 18 and 19.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12454
https://github.com/root-project/root/issues/12455:377,availability,echo,echo,377,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:0,deployability,Fail,Failing,0,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:58,deployability,upgrad,upgrade,58,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:101,deployability,fail,failing,101,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:58,modifiability,upgrad,upgrade,58,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:0,reliability,Fail,Failing,0,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:101,reliability,fail,failing,101,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:196,reliability,doe,does,196,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:541,reliability,doe,doesn,541,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:14,safety,test,tests,14,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:91,safety,test,tests,91,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:554,security,access,access,554,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:14,testability,test,tests,14,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:91,testability,test,tests,91,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/issues/12455:127,usability,interact,interactions,127,"Failing Cling tests with multiple interpreters; Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:. * `CodeUnloading/AtExit.C` does not find the symbol `gChild`. * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12455
https://github.com/root-project/root/pull/12456:39,availability,state,states,39,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:235,availability,Error,ErrorRecovery,235,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:21,deployability,Modul,Module,21,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:57,deployability,upgrad,upgrade,57,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:85,deployability,infrastructur,infrastructure,85,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:123,deployability,Modul,Module,123,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:200,deployability,modul,module,200,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:39,integrability,state,states,39,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:21,modifiability,Modul,Module,21,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:57,modifiability,upgrad,upgrade,57,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:123,modifiability,Modul,Module,123,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:200,modifiability,modul,module,200,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:235,performance,Error,ErrorRecovery,235,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:21,safety,Modul,Module,21,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:123,safety,Modul,Module,123,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:200,safety,modul,module,200,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:229,safety,test,test,229,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:235,safety,Error,ErrorRecovery,235,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:229,testability,test,test,229,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/pull/12456:235,usability,Error,ErrorRecovery,235,"[cling] Use compiled Module for stored states; Since the upgrade to LLVM 13, the JIT infrastructure takes ownership of the Module. After JIT compilation, we get back a (const) pointer to the compiled module. This fixes the Cling test `ErrorRecovery/StoredState.C`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12456
https://github.com/root-project/root/issues/12457:375,availability,operat,operator,375,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:0,deployability,Fail,Failing,0,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:23,deployability,unload,unloading,23,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:77,deployability,upgrad,upgrade,77,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:141,deployability,fail,fails,141,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:387,deployability,fail,failed,387,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:1143,deployability,build,build-cling-clang,1143," ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:5357,deployability,unload,unloadDeclarations,5357,":Decl const*>>>::getPointer() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/ADT/PointerIntPair.h:59:58. #25 0x000000000225342d clang::GlobalDecl::getDecl() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/GlobalDecl.h:102:46. #26 0x000000000225342d cling::DeclUnloader::MaybeRemoveDeclFromModule(clang::GlobalDecl&) const /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:862:52. #27 0x00000000022532f6 cling::DeclUnloader::VisitVarDecl(clang::VarDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:0:7. #28 0x0000000002253df2 cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:696:7. #29 0x00000000022539d1 cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:549:23. #30 0x0000000002302591 cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:65:9. #31 0x00000000023029b5 cling::TransactionUnloader::RevertTransaction(cling::Transaction*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:0:18. #32 0x00000000022cc5f6 cling::Interpreter::unload(cling::Transaction&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:0:0. #33 0x00000000022cc74f cling::Interpreter::unload(unsigned int) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1569:28. #34 0x000000000231e9ce cling::MetaSema::actOnUCommand(llvm::StringRef) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:216:14. #35 0x000000000231e62b cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:5728,deployability,unload,unload,5728," const /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:862:52. #27 0x00000000022532f6 cling::DeclUnloader::VisitVarDecl(clang::VarDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:0:7. #28 0x0000000002253df2 cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:696:7. #29 0x00000000022539d1 cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:549:23. #30 0x0000000002302591 cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:65:9. #31 0x00000000023029b5 cling::TransactionUnloader::RevertTransaction(cling::Transaction*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:0:18. #32 0x00000000022cc5f6 cling::Interpreter::unload(cling::Transaction&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:0:0. #33 0x00000000022cc74f cling::Interpreter::unload(unsigned int) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1569:28. #34 0x000000000231e9ce cling::MetaSema::actOnUCommand(llvm::StringRef) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:216:14. #35 0x000000000231e62b cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::Met",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:5878,deployability,unload,unload,5878,"ng::VarDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:0:7. #28 0x0000000002253df2 cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:696:7. #29 0x00000000022539d1 cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:549:23. #30 0x0000000002302591 cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:65:9. #31 0x00000000023029b5 cling::TransactionUnloader::RevertTransaction(cling::Transaction*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:0:18. #32 0x00000000022cc5f6 cling::Interpreter::unload(cling::Transaction&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:0:0. #33 0x00000000022cc74f cling::Interpreter::unload(unsigned int) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1569:28. #34 0x000000000231e9ce cling::MetaSema::actOnUCommand(llvm::StringRef) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:216:14. #35 0x000000000231e62b cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7439,deployability,build,build-cling-clang,7439,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7586,deployability,Stack,Stack,7586,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7641,deployability,build,build-cling-clang,7641,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7721,deployability,build,build-cling-clang,7721,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:4065,energy efficiency,alloc,allocator,4065,"Type(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.cpp:102:12. #24 0x000000000225342d llvm::PointerIntPair<clang::Decl const*, 3u, unsigned int, llvm::PointerLikeTypeTraits<clang::Decl const*>, llvm::PointerIntPairInfo<clang::Decl const*, 3u, llvm::PointerLikeTypeTraits<clang::Decl const*>>>::getPointer() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/ADT/PointerIntPair.h:59:58. #25 0x000000000225342d clang::GlobalDecl::getDecl() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/GlobalDecl.h:102:46. #26 0x000000000225342d cling::DeclUnloader::MaybeRemoveDeclFromModule(clang::GlobalDecl&) const /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:862:52. #27 0x00000000022532f6 cling::DeclUnloader::VisitVarDecl(clang::VarDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:0:7. #28 0x0000000002253df2 cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) /home/jhahnfe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7507,integrability,sub,submit,7507,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:77,modifiability,upgrad,upgrade,77,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:0,reliability,Fail,Failing,0,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:141,reliability,fail,fails,141,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:387,reliability,fail,failed,387,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:14,safety,test,test,14,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:107,safety,test,test,107,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7824,safety,test,test,7824,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7889,safety,test,test,7889,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7969,safety,test,test,7969,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:531,security,Sign,Signals,531,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:661,security,Sign,Signals,661,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:702,security,Sign,SignalHandler,702,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:783,security,Sign,Signals,783,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:14,testability,test,test,14,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:107,testability,test,test,107,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:325,testability,Assert,Assertion,325,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7824,testability,test,test,7824,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7889,testability,test,test,7889,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7969,testability,test,test,7969,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:8059,testability,assert,assertion,8059,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:210,usability,tool,tools,210,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:518,usability,Support,Support,518,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:653,usability,Support,Support,653,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:770,usability,Support,Support,770,"Failing Cling test for unloading Lambda in template instantiation; Since the upgrade to LLVM 13, the Cling test `CodeUnloading/RereadFile.C` fails with. ```. cling: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl *getLambdaCallOperatorHelper(const clang::CXXRecordDecl &): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:1323,usability,tool,tools,1323,"ssertion `!Calls.empty() && ""Missing lambda call operator!""' failed. #0 0x00000000023cb663 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Itanium",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:1466,usability,tool,tools,1466,"/home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:13. #1 0x00000000023c9822 llvm::sys::RunSignalHandlers() /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:1632,usability,tool,tools,1632,"eter/llvm/src/lib/Support/Signals.cpp:98:18. #2 0x00000000023cbc6f SignalHandler(int) /home/jhahnfel/ROOT/src/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1. #3 0x00007fdc3a8d4b50 __restore_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:1825,usability,tool,tools,1825,"store_rt (/lib64/libc.so.6+0x4eb50). #4 0x00007fdc3a8d4acf raise (/lib64/libc.so.6+0x4eacf). #5 0x00007fdc3a8a7ea5 abort (/lib64/libc.so.6+0x21ea5). #6 0x00007fdc3a8a7d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x0000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:2020,usability,tool,tools,2020,"/lib64/libc.so.6+0x21d79). #7 0x00007fdc3a8cd426 (/lib64/libc.so.6+0x47426). #8 0x00000000037504a4 (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x37504a4). #9 0x00000000037504b6 clang::CXXRecordDecl::getLambdaCallOperator() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:2299,usability,tool,tools,2299,"interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1513:14. #10 0x0000000003750559 clang::ValueDecl::getType() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/Decl.h:687:37. #11 0x0000000003750559 clang::CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:2537,usability,tool,tools,2537,":CXXRecordDecl::getLambdaStaticInvoker() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1524:28. #12 0x00000000038a67b7 (anonymous namespace)::CXXNameMangler::mangleLambdaSig(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Itani",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:2769,usability,tool,tools,2769,"const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1977:3. #13 0x00000000038a59be (anonymous namespace)::CXXNameMangler::mangleLambda(clang::CXXRecordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:2956,usability,tool,tools,2956,"ordDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1948:3. #14 0x00000000038a38fc (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:3137,usability,tool,tools,3137,"ifiedName(clang::GlobalDecl, clang::DeclarationName, unsigned int, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:3331,usability,tool,tools,3331,"pp:0:9. #15 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleUnqualifiedName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.cpp:102:12. #24 0x000000000225342d llvm::PointerIntPair<clang::Decl const*, 3u, unsigned int, llvm::PointerLikeTypeTraits<clang::Decl const*>, llvm::PointerIntPairInfo<clang::Decl const*, 3u, ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:3515,usability,tool,tools,3515,"terpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #16 0x00000000038a916b (anonymous namespace)::CXXNameMangler::mangleLocalName(clang::GlobalDecl, llvm::SmallVector<llvm::StringRef, 4u> const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.cpp:102:12. #24 0x000000000225342d llvm::PointerIntPair<clang::Decl const*, 3u, unsigned int, llvm::PointerLikeTypeTraits<clang::Decl const*>, llvm::PointerIntPairInfo<clang::Decl const*, 3u, llvm::PointerLikeTypeTraits<clang::Decl const*>>>::getPointer() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/ADT/PointerIntPair.h:59:58. #25 0x000000000225342d clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:3731,usability,tool,tools,3731,"nfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:1787:7. #17 0x00000000038a8acb (anonymous namespace)::CXXNameMangler::mangleType(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.cpp:102:12. #24 0x000000000225342d llvm::PointerIntPair<clang::Decl const*, 3u, unsigned int, llvm::PointerLikeTypeTraits<clang::Decl const*>, llvm::PointerIntPairInfo<clang::Decl const*, 3u, llvm::PointerLikeTypeTraits<clang::Decl const*>>>::getPointer() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/ADT/PointerIntPair.h:59:58. #25 0x000000000225342d clang::GlobalDecl::getDecl() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/GlobalDecl.h:102:46. #26 0x000000000225342d cling::DeclUnloader::MaybeRemoveDeclFromModule(clang::GlobalDecl&) co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:3882,usability,Support,Support,3882,"e(clang::TagType const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:3296:1. #18 0x00000000038957ec (anonymous namespace)::CXXNameMangler::mangleType(clang::QualType) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:5. #19 0x000000000389490b (anonymous namespace)::CXXNameMangler::makeVariableTypeTags(clang::VarDecl const*) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:6147:40. #20 0x000000000389490b (anonymous namespace)::CXXNameMangler::mangleName(clang::GlobalDecl) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:927:38. #21 0x000000000389179f (anonymous namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.cpp:102:12. #24 0x000000000225342d llvm::PointerIntPair<clang::Decl const*, 3u, unsigned int, llvm::PointerLikeTypeTraits<clang::Decl const*>, llvm::PointerIntPairInfo<clang::Decl const*, 3u, llvm::PointerLikeTypeTraits<clang::Decl const*>>>::getPointer() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/ADT/PointerIntPair.h:59:58. #25 0x000000000225342d clang::GlobalDecl::getDecl() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/GlobalDecl.h:102:46. #26 0x000000000225342d cling::DeclUnloader::MaybeRemoveDeclFromModule(clang::GlobalDecl&) const /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:862:52. #27 0x00000000022532f6 cling::DeclUnloader::VisitVarDecl(clang::V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:4591,usability,tool,tools,4591," namespace)::ItaniumMangleContextImpl::mangleCXXName(clang::GlobalDecl, llvm::raw_ostream&) /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/ItaniumMangle.cpp:0:0. #22 0x00000000023221e3 llvm::raw_ostream::flush() /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:187:9. #23 0x00000000023221e3 cling::utils::Analyze::maybeMangleDeclName(clang::GlobalDecl const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/AST.cpp:102:12. #24 0x000000000225342d llvm::PointerIntPair<clang::Decl const*, 3u, unsigned int, llvm::PointerLikeTypeTraits<clang::Decl const*>, llvm::PointerIntPairInfo<clang::Decl const*, 3u, llvm::PointerLikeTypeTraits<clang::Decl const*>>>::getPointer() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/include/llvm/ADT/PointerIntPair.h:59:58. #25 0x000000000225342d clang::GlobalDecl::getDecl() const /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/include/clang/AST/GlobalDecl.h:102:46. #26 0x000000000225342d cling::DeclUnloader::MaybeRemoveDeclFromModule(clang::GlobalDecl&) const /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:862:52. #27 0x00000000022532f6 cling::DeclUnloader::VisitVarDecl(clang::VarDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:0:7. #28 0x0000000002253df2 cling::DeclUnloader::VisitDeclContext(clang::DeclContext*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:696:7. #29 0x00000000022539d1 cling::DeclUnloader::VisitFunctionDecl(clang::FunctionDecl*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:549:23. #30 0x0000000002302591 cling::TransactionUnloader::unloadDeclarations(cling::Transaction*, cling::DeclUnloader&) /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:65:9. #31 0x00000000023029b5 cling::TransactionUnloader::RevertTransaction(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7097,usability,User,UserInterface,7097,"rocessor/MetaSema.cpp:216:14. #35 0x000000000231e62b cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7181,usability,User,UserInterface,7181,"llvm::StringRef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7195,usability,User,UserInterface,7195,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7288,usability,tool,tools,7288,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12457:7760,usability,tool,tools,7760,"ef, cling::Transaction**) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #36 0x000000000231f147 cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:0:9. #37 0x000000000231a569 cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315:20. #38 0x0000000002319e27 cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119:48. #39 0x000000000231c971 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:316:9. #40 0x00000000023cedbb cling::UserInterface::runInteractively(bool) /home/jhahnfel/ROOT/src/interpreter/cling/lib/UserInterface/UserInterface.cpp:0:0. #41 0x000000000232e151 main /home/jhahnfel/ROOT/src/interpreter/cling/tools/driver/cling.cpp:138:12. #42 0x00007fdc3a8c0d85 __libc_start_main (/lib64/libc.so.6+0x3ad85). #43 0x00000000021b9c0e _start (/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling+0x21b9c0e). PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace. Stack dump:. 0. Program arguments: /home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/bin/cling --nologo -I/home/jhahnfel/ROOT/build-cling-clang/interpreter/llvm/src/tools/clang/include -I/home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading. 1. /home/jhahnfel/ROOT/src/interpreter/cling/test/CodeUnloading/templatedfunc.h:4:8: Mangling declaration 'lambda'. ```. The test was added as part of commit cd9d087eea24cb2e1982da06ee15b19ecbffc7b4. Curiously, the assertion is exactly the same as #9850, but to the uneducated eye it looks to be a different reason (and the fix is definitely still present).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12457
https://github.com/root-project/root/issues/12458:458,availability,error,error,458,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:560,availability,error,error,560,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1124,availability,error,error,1124,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1202,availability,error,error,1202,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1276,availability,error,error,1276,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1394,availability,error,error,1394,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1483,availability,error,error,1483,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1601,availability,error,error,1601,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:29,deployability,version,version,29,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:55,deployability,toolchain,toolchain,55,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:193,deployability,build,build,193,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:203,deployability,build,build,203,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:288,deployability,toolchain,toolchains,288,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:567,deployability,modul,module,567,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:581,deployability,build,build,581,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:626,deployability,build,build,626,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:671,deployability,build,build,671,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:700,deployability,modul,module,700,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:782,deployability,modul,module,782,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:832,deployability,releas,releases,832,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:904,deployability,Fail,Failed,904,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:919,deployability,modul,module,919,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:936,deployability,Fail,Failed,936,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:951,deployability,modul,module,951,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:964,deployability,Fail,Failed,964,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:979,deployability,modul,module,979,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1001,deployability,Fail,Failed,1001,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1016,deployability,modul,module,1016,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1031,deployability,Fail,Failed,1031,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1046,deployability,modul,module,1046,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1069,deployability,Fail,Failed,1069,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1084,deployability,modul,module,1084,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1697,deployability,Fail,Failed,1697,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1712,deployability,modul,module,1712,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1777,deployability,Modul,Module,1777,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1796,deployability,modul,modulemap,1796,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1806,deployability,fail,failed,1806,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1857,deployability,build,build,1857,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1907,deployability,build,building,1907,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:914,energy efficiency,load,load,914,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:946,energy efficiency,load,load,946,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:974,energy efficiency,load,load,974,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1011,energy efficiency,load,load,1011,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1041,energy efficiency,load,load,1041,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1079,energy efficiency,load,load,1079,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1707,energy efficiency,load,load,1707,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1816,energy efficiency,load,load,1816,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:29,integrability,version,version,29,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:29,modifiability,version,version,29,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:567,modifiability,modul,module,567,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:700,modifiability,modul,module,700,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:782,modifiability,modul,module,782,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:919,modifiability,modul,module,919,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:951,modifiability,modul,module,951,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:979,modifiability,modul,module,979,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1016,modifiability,modul,module,1016,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1046,modifiability,modul,module,1046,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1084,modifiability,modul,module,1084,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1712,modifiability,modul,module,1712,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1777,modifiability,Modul,Module,1777,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1796,modifiability,modul,modulemap,1796,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:458,performance,error,error,458,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:560,performance,error,error,560,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:914,performance,load,load,914,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:946,performance,load,load,946,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:974,performance,load,load,974,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1011,performance,load,load,1011,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1041,performance,load,load,1041,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1079,performance,load,load,1079,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1124,performance,error,error,1124,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1202,performance,error,error,1202,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1276,performance,error,error,1276,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1394,performance,error,error,1394,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1483,performance,error,error,1483,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1601,performance,error,error,1601,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1707,performance,load,load,1707,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1816,performance,load,load,1816,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:904,reliability,Fail,Failed,904,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:936,reliability,Fail,Failed,936,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:964,reliability,Fail,Failed,964,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1001,reliability,Fail,Failed,1001,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1031,reliability,Fail,Failed,1031,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1069,reliability,Fail,Failed,1069,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1697,reliability,Fail,Failed,1697,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1806,reliability,fail,failed,1806,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1872,reliability,doe,does,1872,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:458,safety,error,error,458,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:560,safety,error,error,560,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:567,safety,modul,module,567,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:700,safety,modul,module,700,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:782,safety,modul,module,782,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:919,safety,modul,module,919,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:951,safety,modul,module,951,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:979,safety,modul,module,979,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1016,safety,modul,module,1016,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1046,safety,modul,module,1046,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1084,safety,modul,module,1084,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1124,safety,error,error,1124,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1202,safety,error,error,1202,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1276,safety,error,error,1276,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1394,safety,error,error,1394,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1483,safety,error,error,1483,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1601,safety,error,error,1601,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1712,safety,modul,module,1712,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1777,safety,Modul,Module,1777,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1796,safety,modul,modulemap,1796,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:76,security,team,team,76,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1091,security,Session,SessionViewer,1091,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:55,usability,tool,toolchain,55,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:142,usability,command,command,142,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:288,usability,tool,toolchains,288,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:458,usability,error,error,458,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:523,usability,interact,interactive,523,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:560,usability,error,error,560,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:733,usability,interact,interactive,733,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1124,usability,error,error,1124,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1202,usability,error,error,1202,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1276,usability,error,error,1276,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1394,usability,error,error,1394,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1483,usability,error,error,1483,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/issues/12458:1601,usability,error,error,1601,"cling includer issue on ROOT version included from lcg toolchain; Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```. mkdir build. cd build. cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja .. ninja. ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```. $ ./Allen --sequence hlt1_pp_default. ... <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found. <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. ... Failed to load module SessionViewer. input_line_4:2:2: error: unknown type name 'include'. #include ""TError.h"". ^. input_line_4:2:1: error: expected unqualified-id. #include ""TError.h"". ^. input_line_4:4:2: error: unknown type name 'define'. #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \. ^. input_line_4:21:7: error: expected ';' after top level declarator. #undef ClassDef. ^. ;. input_line_5:1:2: error: unknown type name 'include'. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. input_line_5:1:1: error: expected unqualified-id. #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h"". ^. Failed to load module MathCore. Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load. ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12458
https://github.com/root-project/root/pull/12459:46,availability,error,errors,46,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:168,availability,error,errors,168,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:243,availability,error,errors,243,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:85,modifiability,variab,variables,85,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:441,modifiability,variab,variables,441,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:46,performance,error,errors,46,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:168,performance,error,errors,168,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:243,performance,error,errors,243,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:46,safety,error,errors,46,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:57,safety,avoid,avoid,57,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:168,safety,error,errors,168,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:221,safety,Avoid,Avoids,221,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:243,safety,error,errors,243,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:319,safety,test,test,319,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:342,safety,test,test-,342,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:405,safety,Avoid,Avoids,405,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:314,testability,unit,unit,314,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:319,testability,test,test,319,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:342,testability,test,test-,342,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:46,usability,error,errors,46,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:119,usability,Close,Closes,119,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:168,usability,error,errors,168,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12459:243,usability,error,errors,243,"[RF] Fix splitting of RooDataSets with weight errors and avoid creating dummy weight variables; This pull request:. 1. Closes #12453, where is was reported that weight errors are lost when splitting weighted datasets. 2. Avoids the associated errors printed when doing the JSON IO of combined RooDataSets (run the unit test `gtest-roofit-hs3-test-testHS3SimultaneousFit` with ROOT master to see them). 3. Avoids the creation of dummy weight variables when constructing RooDataSets in all of RooFit. More detail in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12459
https://github.com/root-project/root/pull/12461:173,interoperability,convers,conversion-functions-for-root-tdatime,173,[skip-ci][windows] Fix TDatime on Windows; Fix a wrong value of `TDatime::GetDateFromGlobalDay()` as reported [on the Forum](https://root-forum.cern.ch/t/correct-global-day-conversion-functions-for-root-tdatime/53938).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12461
https://github.com/root-project/root/issues/12462:200,availability,error,error,200,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:1729,energy efficiency,current,current,1729,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:19,modifiability,variab,variable,19,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:200,performance,error,error,200,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:200,safety,error,error,200,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:62,usability,interact,interactively,62,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:200,usability,error,error,200,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/issues/12462:661,usability,interact,interactively,661,"Value of the errno variable is always 2 (ENOENT) when running interactively; I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```. $ root.exe -l. root [0] #include <errno.h>. root [1] errno. (int) 2. root [2] errno = 0; errno. (int) 0. root [3] errno = 0. (int) 0. root [4] errno. (int) 2. root [5] .q. $ errno 2. ENOENT 2 No such file or directory. ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:. ```. root [1] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory). (int) 2. root [2] errno = 0. newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 0. root [3] errno. newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory). newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory). (int) 2. root [4] . ```. So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12462
https://github.com/root-project/root/pull/12463:372,availability,consist,consistently,372,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:968,integrability,configur,configure,968,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:856,modifiability,deco,decouple,856,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:968,modifiability,configur,configure,968,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:1058,performance,time,time,1058,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:315,reliability,RCa,RCanvas,315,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:968,security,configur,configure,968,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:1077,security,sign,signalling,1077,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:22,usability,Clear,ClearOnClose,22,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:51,usability,custom,custom,51,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:184,usability,clear,cleared,184,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:224,usability,close,closed,224,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:268,usability,widget,widgets,268,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:289,usability,Clear,ClearOnClose,289,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:366,usability,Clear,Clear,366,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:372,usability,consist,consistently,372,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:385,usability,widget,widgets,385,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:416,usability,close,closed,416,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:647,usability,custom,custom,647,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:917,usability,widget,widgets,917,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12463:1135,usability,widget,widgets,1135,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer; 1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets. 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed. 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects. 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes. 5. Let store geometry viewer settings in root macro, which may include geometry itself. 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server. 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time. 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12463
https://github.com/root-project/root/pull/12464:180,interoperability,convers,conversion-functions-for-root-tdatime,180,[v6-28][skip-ci][windows] Fix TDatime on Windows; Fix a wrong value of `TDatime::GetDateFromGlobalDay()` as reported [on the Forum](https://root-forum.cern.ch/t/correct-global-day-conversion-functions-for-root-tdatime/53938),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12464
https://github.com/root-project/root/issues/12465:127,availability,failur,failure,127,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:26,deployability,build,build,26,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:127,deployability,fail,failure,127,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:210,deployability,build,build,210,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:127,performance,failur,failure,127,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:127,reliability,fail,failure,127,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:12,usability,custom,custom,12,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/issues/12465:153,usability,confirm,confirm,153,"CI: trigger custom config build for PRs through comments; E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12465
https://github.com/root-project/root/pull/12466:32,availability,restor,restore,32,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:379,availability,error,error,379,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:435,availability,error,error,435,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:429,deployability,Log,Logic,429,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:152,energy efficiency,model,model,152,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:223,interoperability,prox,proxied,223,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:446,interoperability,prox,proxy,446,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:379,performance,error,error,379,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:435,performance,error,error,435,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:32,reliability,restor,restore,32,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:379,safety,error,error,379,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:429,safety,Log,Logic,429,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:435,safety,error,error,435,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:490,safety,test,tested,490,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:152,security,model,model,152,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:429,security,Log,Logic,429,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:429,testability,Log,Logic,429,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:490,testability,test,tested,490,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:379,usability,error,error,379,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12466:435,usability,error,error,435,"[ntuple] RCollectionClassField: restore missing calls to `PushProxy()`; After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type. This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below. ```. TGenCollectionProxy FATAL Size> Logic error - no proxy object set. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12466
https://github.com/root-project/root/pull/12467:88,deployability,version,version,88,[RF][HS3] Migrate top-level fileds from dicts to lists; To comply with the HS3 standard version 0.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12467
https://github.com/root-project/root/pull/12467:88,integrability,version,version,88,[RF][HS3] Migrate top-level fileds from dicts to lists; To comply with the HS3 standard version 0.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12467
https://github.com/root-project/root/pull/12467:79,interoperability,standard,standard,79,[RF][HS3] Migrate top-level fileds from dicts to lists; To comply with the HS3 standard version 0.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12467
https://github.com/root-project/root/pull/12467:88,modifiability,version,version,88,[RF][HS3] Migrate top-level fileds from dicts to lists; To comply with the HS3 standard version 0.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12467
https://github.com/root-project/root/pull/12467:59,safety,compl,comply,59,[RF][HS3] Migrate top-level fileds from dicts to lists; To comply with the HS3 standard version 0.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12467
https://github.com/root-project/root/pull/12467:59,security,compl,comply,59,[RF][HS3] Migrate top-level fileds from dicts to lists; To comply with the HS3 standard version 0.2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12467
https://github.com/root-project/root/pull/12468:38,deployability,build,builds,38,[ntuple] Fixes for 32bit / non-x86_64 builds; Fixes #12427,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12468
https://github.com/root-project/root/pull/12469:96,availability,error,error,96,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:171,availability,failur,failure,171,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:433,availability,failur,failure,433,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:517,availability,Failur,Failure,517,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:669,availability,Failur,Failure,669,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:977,availability,Error,Error,977,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1388,availability,Error,Error,1388,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1540,availability,Failur,Failure,1540,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1742,availability,Error,Error,1742,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1851,availability,Failur,Failure,1851,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:2005,availability,Error,Error,2005,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:171,deployability,fail,failure,171,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:433,deployability,fail,failure,433,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:517,deployability,Fail,Failure,517,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:526,deployability,Fail,Failed,526,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:669,deployability,Fail,Failure,669,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:678,deployability,Fail,Failed,678,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1540,deployability,Fail,Failure,1540,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1549,deployability,Fail,Failed,1549,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1851,deployability,Fail,Failure,1851,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1860,deployability,Fail,Failed,1860,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1,energy efficiency,core,core,1,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:476,energy efficiency,core,core,476,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:628,energy efficiency,core,core,628,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1499,energy efficiency,core,core,1499,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1809,energy efficiency,core,core,1809,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:47,integrability,messag,messages,47,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:102,integrability,messag,messages,102,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:204,integrability,messag,messages,204,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:282,integrability,messag,messages,282,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:398,integrability,messag,message,398,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:591,integrability,messag,messages,591,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:732,integrability,messag,message,732,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:791,integrability,messag,messages,791,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:832,integrability,sub,subMatch,832,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1057,integrability,sub,subMatch,1057,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1143,integrability,sub,subMatch,1143,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1264,integrability,sub,subMatch,1264,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1322,integrability,messag,messages,1322,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1612,integrability,messag,message,1612,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1733,integrability,messag,message,1733,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1925,integrability,messag,message,1925,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1996,integrability,messag,message,1996,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:47,interoperability,messag,messages,47,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:102,interoperability,messag,messages,102,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:204,interoperability,messag,messages,204,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:282,interoperability,messag,messages,282,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:398,interoperability,messag,message,398,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:591,interoperability,messag,messages,591,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:732,interoperability,messag,message,732,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:791,interoperability,messag,messages,791,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1322,interoperability,messag,messages,1322,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1612,interoperability,messag,message,1612,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1733,interoperability,messag,message,1733,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1925,interoperability,messag,message,1925,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1996,interoperability,messag,message,1996,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:96,performance,error,error,96,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:171,performance,failur,failure,171,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:433,performance,failur,failure,433,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:517,performance,Failur,Failure,517,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:669,performance,Failur,Failure,669,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:977,performance,Error,Error,977,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1388,performance,Error,Error,1388,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1540,performance,Failur,Failure,1540,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1660,performance,time,times,1660,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1742,performance,Error,Error,1742,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1851,performance,Failur,Failure,1851,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:2005,performance,Error,Error,2005,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:171,reliability,fail,failure,171,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:433,reliability,fail,failure,433,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:517,reliability,Fail,Failure,517,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:526,reliability,Fail,Failed,526,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:580,reliability,diagno,diagnostic,580,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:669,reliability,Fail,Failure,669,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:678,reliability,Fail,Failed,678,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:721,reliability,Diagno,Diagnostic,721,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1540,reliability,Fail,Failure,1540,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1549,reliability,Fail,Failed,1549,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1601,reliability,diagno,diagnostic,1601,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1851,reliability,Fail,Failure,1851,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1860,reliability,Fail,Failed,1860,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1914,reliability,diagno,diagnostic,1914,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:34,safety,test,test-support,34,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:64,safety,Test,TestSupport,64,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:96,safety,error,error,96,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:123,safety,test,tests,123,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:428,safety,test,test,428,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:481,safety,test,testsupport,481,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:497,safety,Test,TestSupport,497,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:540,safety,Test,TestSupport,540,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:633,safety,test,testsupport,633,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:649,safety,Test,TestSupport,649,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:692,safety,Test,TestSupport,692,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:949,safety,Input,InputFormulaIntoCling,949,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:977,safety,Error,Error,977,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1360,safety,Input,InputFormulaIntoCling,1360,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1388,safety,Error,Error,1388,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1504,safety,test,testsupport,1504,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1520,safety,Test,TestSupport,1520,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1563,safety,Test,TestSupport,1563,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1709,safety,Input,InputFormulaIntoCling,1709,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1742,safety,Error,Error,1742,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1814,safety,test,testsupport,1814,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1830,safety,Test,TestSupport,1830,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1874,safety,Test,TestSupport,1874,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1972,safety,Input,InputFormulaIntoCling,1972,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:2005,safety,Error,Error,2005,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1298,security,ident,identifier,1298,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:29,testability,unit,unit-test-support,29,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:64,testability,Test,TestSupport,64,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:118,testability,unit,unit,118,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:123,testability,test,tests,123,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:428,testability,test,test,428,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:481,testability,test,testsupport,481,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:497,testability,Test,TestSupport,497,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:540,testability,Test,TestSupport,540,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:580,testability,diagno,diagnostic,580,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:633,testability,test,testsupport,633,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:649,testability,Test,TestSupport,649,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:692,testability,Test,TestSupport,692,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:721,testability,Diagno,Diagnostic,721,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1504,testability,test,testsupport,1504,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1520,testability,Test,TestSupport,1520,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1563,testability,Test,TestSupport,1563,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1601,testability,diagno,diagnostic,1601,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1814,testability,test,testsupport,1814,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1830,testability,Test,TestSupport,1830,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1874,testability,Test,TestSupport,1874,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1914,testability,diagno,diagnostic,1914,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:39,usability,support,support,39,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:96,usability,error,error,96,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:949,usability,Input,InputFormulaIntoCling,949,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:977,usability,Error,Error,977,"[core] Improve readbility of unit-test-support messages.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". mess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1360,usability,Input,InputFormulaIntoCling,1360,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1388,usability,Error,Error,1388,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1709,usability,Input,InputFormulaIntoCling,1709,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1742,usability,Error,Error,1742,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:1972,usability,Input,InputFormulaIntoCling,1972,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12469:2005,usability,Error,Error,2005,"es.; ROOT::TestSupport checks info/warning/error messages during unit tests. Previously, it would generate one global failure irrespective of how many messages have been received, or how many were missing. It would then list all messages that are being checked, irrespective of whether they were received or not. Now, each missing or unexpected message generates a dedicated test failure. ## Before. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:93: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic messages received. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Diagnostic message missing. -------------------------. Pre-registered messages:. kError	1x received	(required, subMatch)	'prepareMethod' msg='Can't compile function TFormula'. kError	0x received	(required, fullMatch)	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling____'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg=' is invalid'. kError	1x received	(required, subMatch)	'TFormula::ProcessFormula' msg='has not been matched in the formula expression'. kError	2x received	(required, subMatch)	'cling' msg='undeclared identifier'. Unexpected messages received:. kError	'TFormula::InputFormulaIntoCling' msg='Error compiling formula expression in Cling'. -------------------------. ```. ## After. ```. ../../../root-src/core/testsupport/src/TestSupport.cxx:96: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Expected diagnostic message missing:. severity: kError. received: 0 times (required, fullMatch)	. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling____. ../../../root-src/core/testsupport/src/TestSupport.cxx:101: Failure. Failed. ROOT::TestSupport::CheckDiagsRAII: Unexpected diagnostic message:. severity: kError. origin: ""TFormula::InputFormulaIntoCling"". message: Error compiling formula expression in Cling. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12469
https://github.com/root-project/root/pull/12471:193,integrability,sub,sub-fields,193,"[RF][HS3] Migrate remaining relevant fileds from dicts to lists; This is a follow-up on #12467, where only the top-level fields got migrated from dicts to lists. This PR migrates the remaining sub-fields that also should be lists according to the HS3 specification. Also, some other improvements and fixes explained in the commit descriptions are applied.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12471
https://github.com/root-project/root/pull/12471:251,interoperability,specif,specification,251,"[RF][HS3] Migrate remaining relevant fileds from dicts to lists; This is a follow-up on #12467, where only the top-level fields got migrated from dicts to lists. This PR migrates the remaining sub-fields that also should be lists according to the HS3 specification. Also, some other improvements and fixes explained in the commit descriptions are applied.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12471
https://github.com/root-project/root/pull/12472:62,deployability,continu,continuation,62,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:231,deployability,updat,updated,231,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:108,interoperability,specif,specify,108,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:201,safety,test,tested,201,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:231,safety,updat,updated,231,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:231,security,updat,updated,231,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12472:201,testability,test,tested,201,[ntuple] Add `RNTupleImporter::SetMaxEntries()`; This PR is a continuation of #12145 and adds the option to specify the maximum number of entries in the original `TTree` to import. ## Checklist. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12472
https://github.com/root-project/root/pull/12473:160,interoperability,platform,platforms,160,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:19,modifiability,variab,variable,19,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:88,modifiability,variab,variable,88,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:175,modifiability,variab,variable,175,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:135,safety,avoid,avoid,135,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:378,safety,prevent,prevents,378,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:936,safety,test,tested,936,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:203,security,hash,hashing,203,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:279,security,hash,hash,279,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:378,security,preven,prevents,378,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:700,security,Hash,Hash,700,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12473:936,testability,test,tested,936,"[ntuple,daos] Cast variable to preclude warning in 32-bit; This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```. In file included from /path/to/src/RPageStorageDaos.cxx:29:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:. /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]. 120 | auto seed = static_cast<uint32_t>(h >> 32);. ```. ## Checklist:. - [x] tested changes locally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12473
https://github.com/root-project/root/pull/12475:282,availability,down,down,282,"[ntuple] Add direct importing of TTree objects; This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:367,deployability,updat,updated,367,"[ntuple] Add direct importing of TTree objects; This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:337,safety,test,tested,337,"[ntuple] Add direct importing of TTree objects; This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:367,safety,updat,updated,367,"[ntuple] Add direct importing of TTree objects; This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:367,security,updat,updated,367,"[ntuple] Add direct importing of TTree objects; This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12475:337,testability,test,tested,337,"[ntuple] Add direct importing of TTree objects; This PR adds an extra factory function for creating an `RNTupleImporter` by directly providing a pointer to the `TTree` to import, rather than the tree name and file name. With this, it should also become possible to import `TChain`s down the road, but this will require another PR. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12475
https://github.com/root-project/root/pull/12476:216,availability,echo,echo,216,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:379,availability,echo,echo,379,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:364,deployability,fail,fails,364,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:756,deployability,updat,updated,756,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:181,modifiability,variab,variable,181,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:364,reliability,fail,fails,364,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:726,safety,test,tested,726,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:756,safety,updat,updated,756,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:418,security,command-lin,command-line,418,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:448,security,token,tokens,448,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:685,security,token,token,685,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:756,security,updat,updated,756,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:726,testability,test,tested,726,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12476:418,usability,command,command-line,418,"Do not remove -Wp, before -D and -U when recording used compiler flags; # This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:. ```. $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -. ```. Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:. ```. $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -. <command-line>: warning: extra tokens at end of #undef directive. ```. Now it will only undefine VAR, but not define it. I.e. instead of. ```. #undef VAR. #define VAR 1. ```. you get. ```. #undef VAR,-DVAR=1. ```. which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12476
https://github.com/root-project/root/pull/12478:17,deployability,build,builds,17,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:77,deployability,build,builds,77,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:157,deployability,updat,updated,157,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:127,safety,test,tested,127,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:157,safety,updat,updated,157,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:157,security,updat,updated,157,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12478:127,testability,test,tested,127,[CI] Fix nightly builds; # This Pull request:. ## Changes or fixes:. Nightly builds crashing immidiately. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12478
https://github.com/root-project/root/pull/12479:241,availability,error,error,241,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:383,availability,error,error,383,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:977,availability,consist,consistently,977,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:291,deployability,version,version,291,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:494,deployability,depend,depending,494,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:60,integrability,interfac,interface,60,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:291,integrability,version,version,291,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:494,integrability,depend,depending,494,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:889,integrability,interfac,interface,889,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:60,interoperability,interfac,interface,60,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:889,interoperability,interfac,interface,889,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:60,modifiability,interfac,interface,60,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:291,modifiability,version,version,291,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:494,modifiability,depend,depending,494,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:889,modifiability,interfac,interface,889,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:241,performance,error,error,241,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:383,performance,error,error,383,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:241,safety,error,error,241,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:383,safety,error,error,383,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:494,safety,depend,depending,494,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:100,security,sign,signature,100,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:924,security,sign,signature,924,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:494,testability,depend,depending,494,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:241,usability,error,error,241,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:383,usability,error,error,383,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12479:977,usability,consist,consistently,977,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface; It was not good to have this signature in RooAbsData, because the. implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but. the RooDataHist version instead took the sum of weights squared, which. is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in. different weight uncertainties depending on which data implementation. you use. This should not happen. It probably didn't happen to many. people, but I was affected by this when implementing. `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,. weightError)` from the virtual RooAbsData interface. The `add(row,. weight)` signature can stay, because this one is implemented. consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12479
https://github.com/root-project/root/pull/12480:419,availability,consist,consistently,419,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:263,deployability,depend,depends,263,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:374,energy efficiency,load,loaded,374,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:263,integrability,depend,depends,263,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:263,modifiability,depend,depends,263,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:374,performance,load,loaded,374,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:263,safety,depend,depends,263,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:291,security,access,accessed,291,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:263,testability,depend,depends,263,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:15,usability,prefer,prefer,15,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:419,usability,consist,consistently,419,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:432,usability,prefer,preferring,432,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/pull/12480:495,usability,ui,uin,495,"[meta] TClass: prefer typeid=>TClass map values with less Double32_t:; Both `Foo<double>` and `Foo<Double32_t>` have the same typeid. Before this commit, TClass::GetClass(typeid(Foo<double>)) would return. whatever was registered *last*. This is not ""stable""; it depends on which. branch is accessed first, or which TClass::GetClass call happens first, or. which library is loaded first. Make this more reporducible by consistently preferring types will less. Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it. really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12480
https://github.com/root-project/root/issues/12481:581,availability,Error,Error,581,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:693,availability,error,error,693,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:860,availability,error,error,860,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:611,deployability,Fail,Failed,611,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:700,deployability,Fail,Failed,700,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:494,energy efficiency,load,loadLibrary,494,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:621,energy efficiency,load,load,621,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:916,integrability,repositor,repository,916,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:534,interoperability,share,shared,534,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:916,interoperability,repositor,repository,916,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:1036,interoperability,bind,bind,1036,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:1036,modifiability,bind,bind,1036,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:494,performance,load,loadLibrary,494,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:581,performance,Error,Error,581,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:621,performance,load,load,621,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:693,performance,error,error,693,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:860,performance,error,error,860,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:611,reliability,Fail,Failed,611,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:700,reliability,Fail,Failed,700,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:581,safety,Error,Error,581,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:693,safety,error,error,693,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:860,safety,error,error,860,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:685,security,session,session,685,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:581,usability,Error,Error,581,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:693,usability,error,error,693,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:860,usability,error,error,860,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/issues/12481:1004,usability,command,command,1004,"PyROOT: problems with Cling; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory. Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to . materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce. Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel). Also run a. make all. command in order to compile and bind the c++ library. ### Setup. ROOT 6.28/00. Windows 11 - WSL2 Ubuntu 22.04.1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12481
https://github.com/root-project/root/pull/12482:21,deployability,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,deployability,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,deployability,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:21,integrability,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,integrability,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:166,integrability,transform,transformation,166,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,integrability,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:21,interoperability,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,interoperability,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:166,interoperability,transform,transformation,166,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,interoperability,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:21,modifiability,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,modifiability,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:186,modifiability,variab,variable,186,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,modifiability,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:21,reliability,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,reliability,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,reliability,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:148,safety,input,input,148,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:21,security,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,security,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,security,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:21,testability,integr,integration,21,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:129,testability,integr,integration,129,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:401,testability,integr,integration,401,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12482:148,usability,input,input,148,"[RF] Enable analytic integration of RooHistPdfs with RooLinearVars; The RooHistPdf and RooHistFunc should be able to do analytic integration if the input is a linear transformation of a variable using RooLinearVar. This makes the fits faster where one wants to shift a template on the x-axis, which is for example talked about in this forum post: https://root-forum.cern.ch/t/roofit-pdf-normalization-integration/53905",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12482
https://github.com/root-project/root/pull/12484:360,deployability,deploy,deployment,360,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:436,deployability,build,build,436,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:48,energy efficiency,load,load,48,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:607,energy efficiency,load,load,607,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:48,performance,load,load,48,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:328,performance,perform,performance,328,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:573,performance,Network,NetworkDesigner,573,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:607,performance,load,load,607,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:117,security,access,accessed,117,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:573,security,Network,NetworkDesigner,573,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:328,usability,perform,performance,328,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:752,usability,user,user-images,752,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12484:879,usability,usab,usable,879,"JsMVA: use latest JSROOT, use `/static` path to load code; 1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` . 2. Remove minified scripts - no real gain in performance, only extra step in deployment. 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. . 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well. 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: . 1. Fix more problems with `python3` - see attached image from my notebook. ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png). 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12484
https://github.com/root-project/root/pull/12485:0,integrability,Batch,Batch,0,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:77,integrability,Batch,BatchGenerator,77,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:93,integrability,Batch,BatchLoader,93,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:152,integrability,batch,batches,152,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:260,integrability,Batch,BatchGenerator,260,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:0,performance,Batch,Batch,0,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:77,performance,Batch,BatchGenerator,77,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:93,performance,Batch,BatchLoader,93,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:152,performance,batch,batches,152,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:260,performance,Batch,BatchGenerator,260,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:188,usability,Learn,Learning,188,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12485:242,usability,interact,interact,242,"Batch generator c++; # This Pull request:. ## Changes or fixes:. - Added the BatchGenerator, BatchLoader, and ChunkLoader C++ classes. Used to generate batches from a RDataset for Machine Learning purposes. - Added _batchgenerator.py used to interact with the BatchGenerator class from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12485
https://github.com/root-project/root/pull/12486:871,deployability,updat,updated,871,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:699,modifiability,paramet,parameter,699,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:331,performance,time,time,331,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:630,performance,time,time,630,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:569,safety,except,exception,569,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:841,safety,test,tested,841,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:871,safety,updat,updated,871,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:871,security,updat,updated,871,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12486:841,testability,test,tested,841,"[ntuple] Add importing of entire `TFile`s; This PR introduces the possibility of converting all `TTree`s that are present in a `TFile` to `RNTuple`s at once. Concretely, it implements an additional factory method that requires only the source file path and the destination path. Because we now deal with multiple trees at the same time, `SetNTupleName` has been replaced by `SetNTupleNames`, which takes the name of the original tree and the name of the corresponding ntuple. Optionally, we could keep `SetNTupleName` as well in case there's only one tree and throw an exception when multiple trees are being imported at the same time. The `Create` factory method could be expanded with an optional parameter that takes a list of tree names (or regexes) to import, in case it is not desired that every tree is imported. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12486
https://github.com/root-project/root/pull/12488:466,energy efficiency,load,loaded,466,[meta] GetClass better handling of typedef autoloading.; Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12488
https://github.com/root-project/root/pull/12488:618,energy efficiency,load,load,618,[meta] GetClass better handling of typedef autoloading.; Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12488
https://github.com/root-project/root/pull/12488:466,performance,load,loaded,466,[meta] GetClass better handling of typedef autoloading.; Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12488
https://github.com/root-project/root/pull/12488:618,performance,load,load,618,[meta] GetClass better handling of typedef autoloading.; Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12488
https://github.com/root-project/root/pull/12489:148,deployability,version,version,148,"[ntuple] Avoid gtest warnings about deprecated `TYPED_TEST_CASE`; Use the replacement `TYPED_TEST_SUITE`, and have a compatibility define for gtest version < 1.10.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12489
https://github.com/root-project/root/pull/12489:148,integrability,version,version,148,"[ntuple] Avoid gtest warnings about deprecated `TYPED_TEST_CASE`; Use the replacement `TYPED_TEST_SUITE`, and have a compatibility define for gtest version < 1.10.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12489
https://github.com/root-project/root/pull/12489:117,interoperability,compatib,compatibility,117,"[ntuple] Avoid gtest warnings about deprecated `TYPED_TEST_CASE`; Use the replacement `TYPED_TEST_SUITE`, and have a compatibility define for gtest version < 1.10.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12489
https://github.com/root-project/root/pull/12489:148,modifiability,version,version,148,"[ntuple] Avoid gtest warnings about deprecated `TYPED_TEST_CASE`; Use the replacement `TYPED_TEST_SUITE`, and have a compatibility define for gtest version < 1.10.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12489
https://github.com/root-project/root/pull/12489:9,safety,Avoid,Avoid,9,"[ntuple] Avoid gtest warnings about deprecated `TYPED_TEST_CASE`; Use the replacement `TYPED_TEST_SUITE`, and have a compatibility define for gtest version < 1.10.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12489
https://github.com/root-project/root/pull/12490:162,deployability,updat,updated,162,[RF][HS3] Bugfixes; # This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:42,modifiability,Exten,Extends,42,[RF][HS3] Bugfixes; # This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:132,safety,test,tested,132,[RF][HS3] Bugfixes; # This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:162,safety,updat,updated,162,[RF][HS3] Bugfixes; # This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:162,security,updat,updated,162,[RF][HS3] Bugfixes; # This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12490:132,testability,test,tested,132,[RF][HS3] Bugfixes; # This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12490
https://github.com/root-project/root/pull/12491:905,availability,sli,slightly,905,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:224,deployability,updat,updated,224,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:372,energy efficiency,draw,drawing,372,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:484,energy efficiency,draw,drawn,484,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:545,integrability,translat,translate,545,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:545,interoperability,translat,translate,545,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:361,performance,time,times,361,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:905,reliability,sli,slightly,905,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:194,safety,test,tested,194,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:224,safety,updat,updated,224,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:917,safety,avoid,avoid,917,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:224,security,updat,updated,224,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:194,testability,test,tested,194,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:757,usability,user,user-images,757,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/pull/12491:967,usability,user,user-images,967,"Add option to change exponent offset for z-axis (within GAxis); # This Pull request:. ## Changes or fixes:. Add option to change exponent offset for z-axis (within GAxis) . ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary) (technically the doc already even says ""xz"", though the ""z"" was not being used). This PR fixes # . Often times when drawing 2D histograms (with the SURF option), the 10^n exponent on the z-axis will intersect the ""height"" lines drawn for the z-axis. To fix this, I've added the option to ""translate"" the exponent label (shifting x, y) for the z-axis, which was previously only possible to do with x and y-axes. . Here is the 10^n exponent intersecting with the height-lines:. ![before_offset](https://user-images.githubusercontent.com/32146461/225423544-92800949-b355-4382-83a6-1a2e2595d1d6.png). Here is the 10^n exponent shifted upwards in y very slightly to avoid this intersection:. ![after_offset](https://user-images.githubusercontent.com/32146461/225423842-b27bdd15-c62e-4a20-83b4-1202fa75c767.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12491
https://github.com/root-project/root/issues/12492:262,availability,error,error,262,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:426,availability,error,error,426,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:597,availability,error,errors,597,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:17,deployability,build,building,17,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:105,deployability,build,build,105,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:826,deployability,instal,install,826,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:910,deployability,instal,installed,910,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:942,deployability,version,version,942,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:999,deployability,version,version,999,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:1018,deployability,releas,release,1018,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:1064,deployability,build,build,1064,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:503,energy efficiency,Alloc,AllocatorType,503,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:942,integrability,version,version,942,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:999,integrability,version,version,999,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:942,modifiability,version,version,942,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:999,modifiability,version,version,999,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:262,performance,error,error,262,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:426,performance,error,error,426,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:597,performance,error,errors,597,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:262,safety,error,error,262,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:426,safety,error,error,426,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:597,safety,error,errors,597,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:163,usability,custom,custom,163,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:262,usability,error,error,262,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:426,usability,error,error,426,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:597,usability,error,errors,597,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12492:1053,usability,help,help,1053,"The problem with building ROOT v6-26-10 in debug mode on ubuntu 20.04; Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```. In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:. /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0). 2149 | AllocatorType, JSONSerializer, BinaryType>. | ^. ```. After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used. ```. cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src. ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please? With best regards,. Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12492
https://github.com/root-project/root/issues/12493:309,energy efficiency,Draw,Draw,309,"""TEXT90 COLZ"" does not work; ```. {. auto c01 = new TCanvas(""c01"",""c01"",800,800);. auto htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);. float px, py;. for (Int_t i = 0; i < 25000; i++) {. gRandom->Rannor(px,py);. htext2->Fill(px,5*py);. }. htext2->SetMarkerSize(1.8);. htext2->Draw(""TEXT90 COLZ"");. }. ```. See: https://root-forum.cern.ch/t/how-to-rotate-bin-labels-on-thf2/54008/10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12493
https://github.com/root-project/root/issues/12493:14,reliability,doe,does,14,"""TEXT90 COLZ"" does not work; ```. {. auto c01 = new TCanvas(""c01"",""c01"",800,800);. auto htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);. float px, py;. for (Int_t i = 0; i < 25000; i++) {. gRandom->Rannor(px,py);. htext2->Fill(px,5*py);. }. htext2->SetMarkerSize(1.8);. htext2->Draw(""TEXT90 COLZ"");. }. ```. See: https://root-forum.cern.ch/t/how-to-rotate-bin-labels-on-thf2/54008/10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12493
https://github.com/root-project/root/issues/12493:380,security,rotat,rotate-bin-labels-on-,380,"""TEXT90 COLZ"" does not work; ```. {. auto c01 = new TCanvas(""c01"",""c01"",800,800);. auto htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);. float px, py;. for (Int_t i = 0; i < 25000; i++) {. gRandom->Rannor(px,py);. htext2->Fill(px,5*py);. }. htext2->SetMarkerSize(1.8);. htext2->Draw(""TEXT90 COLZ"");. }. ```. See: https://root-forum.cern.ch/t/how-to-rotate-bin-labels-on-thf2/54008/10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12493
https://github.com/root-project/root/issues/12495:37,deployability,fail,fails,37,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:48,deployability,modul,module-based,48,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:496,deployability,fail,fails,496,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:524,deployability,build,build,524,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:746,deployability,build,build,746,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:762,deployability,modul,module,762,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:1027,deployability,build,build,1027,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:48,modifiability,modul,module-based,48,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:762,modifiability,modul,module,762,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:37,reliability,fail,fails,37,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:496,reliability,fail,fails,496,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:48,safety,modul,module-based,48,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:762,safety,modul,module,762,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:791,safety,test,testtypedef,791,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:849,safety,test,testtypedef,849,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:1055,safety,test,testtypedef,1055,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:791,testability,test,testtypedef,791,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:849,testability,test,testtypedef,849,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12495:1055,testability,test,testtypedef,1055,"Library autoloading based on typedef fails with module-based dictionary (but works with rootmap files); With:. ```. using name_of_typedef = name_of_class;. ```. and requesting a dictionary entry for both `name_of_typedef` and `name_of_class` (possibly in 2 distinct libraries). when doing:. ```. auto cl = TClass::GetClass(""name_of_typedef"");. ```. we should have the library/libraries corresponding for both the typedef and the class being autooaded. This works properly in the rootmap case. It fails in the dictionary are build requesting the 'cxxmodule'. With [typedef02.tgz](https://github.com/root-project/root/files/10993384/typedef02.tgz). you can reproduce the problem:. ```. tar xfz typedef02.tgz. cd typedef02. cd run_withmodule. sh ../build.rootcling.module. root.exe -b -l -q ../testtypedef.C. ```. and you will get:. ```. Processing ../testtypedef.C... The TClass for the typedef has IsLoaded: 0. ```. where the last line should not be printed. you can see the rootmap in action with:. ```. cd run_nomodule. sh ../build. root.exe -b -l -q ../testtypedef.C. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12495
https://github.com/root-project/root/issues/12496:1257,availability,fault,faults-with-python-for-loops,1257,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:927,deployability,Updat,Update,927,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1013,deployability,version,version,1013,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:93,energy efficiency,Draw,Drawing,93,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:912,energy efficiency,Draw,Draw,912,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1257,energy efficiency,fault,faults-with-python-for-loops,1257,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:734,integrability,event,event,734,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1013,integrability,version,version,1013,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1177,integrability,sub,submitted,1177,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:657,interoperability,format,format,657,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:681,interoperability,format,format,681,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:896,interoperability,format,format,896,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1013,modifiability,version,version,1013,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1070,modifiability,pac,package,1070,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1257,performance,fault,faults-with-python-for-loops,1257,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1257,reliability,fault,faults-with-python-for-loops,1257,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:282,safety,avoid,avoided,282,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:327,safety,except,exception,327,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:927,safety,Updat,Update,927,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:937,safety,input,input,937,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1257,safety,fault,faults-with-python-for-loops,1257,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:927,security,Updat,Update,927,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:1158,testability,context,context,1158,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:197,usability,behavi,behavior,197,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12496:937,usability,input,input,937,"Graphics crash when using EnableImplicitMT() with a python for loop; . ### Describe the bug. Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior. Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well. If not, exception still would be better. ### To Reproduce. ```python. import ROOT. # comment next line and everything works. ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():. df = ROOT.RDataFrame(10)\. .Define(""x"", ""rdfentry_"")\. .Define(""x2"", ""rdfentry_*rdfentry_""). . histos = []. for var in vars:. h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var). histos.append(h). # event loop runs here. histos = [h.GetValue() for h in histos]. return histos. histos = get_histos(). for var, h in zip(vars, histos):. canvas = ROOT.TCanvas(""{}"".format(var)). h.Draw(). canvas.Update(). input(""Press something to get the next histogram""). ```. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7. 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`. 4. Python: 3.9.10. ### Additional context. Initially submitted on forum:. https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12496
https://github.com/root-project/root/issues/12497:61,deployability,log,logarithmic,61,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:326,deployability,log,logarithmic,326,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:559,deployability,scale,scale,559,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:987,deployability,version,versions,987,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1102,deployability,version,version,1102,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1353,deployability,log,logarithmic-axis,1353,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:559,energy efficiency,scale,scale,559,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:827,energy efficiency,Draw,Draw,827,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:987,integrability,version,versions,987,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1102,integrability,version,version,1102,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1251,integrability,sub,submited,1251,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:559,modifiability,scal,scale,559,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:987,modifiability,version,versions,987,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1102,modifiability,version,version,1102,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:559,performance,scale,scale,559,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:61,safety,log,logarithmic,61,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:326,safety,log,logarithmic,326,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:597,safety,test,test,597,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:957,safety,test,test,957,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1072,safety,test,test,1072,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1353,safety,log,logarithmic-axis,1353,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:61,security,log,logarithmic,61,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:326,security,log,logarithmic,326,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1353,security,log,logarithmic-axis,1353,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:61,testability,log,logarithmic,61,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:326,testability,log,logarithmic,326,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:597,testability,test,test,597,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:957,testability,test,test,957,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1072,testability,test,test,1072,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1229,testability,context,context,1229,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1353,testability,log,logarithmic-axis,1353,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:358,usability,mous,mouse,358,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:454,usability,behavi,behavior,454,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:505,usability,mous,mouse,505,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12497:1147,usability,user,users,1147,"SetShowProjection highlights wrong bins on 2d histogram with logarithmic axis; ### Describe the bug. See -> [concise video showcase of the bug](https://drive.google.com/file/d/1tRHdUNdXSxzGJhdSPX6aYDn3Ecg95h_E/view?usp=share_link). Wrong bin is being highlighted, when using `SetShowProjection()` with 2D histogram being with logarithmic axis. Even when the mouse hovers over the far left bin, the bin with the value 1 is being highlighted. ### Expected behavior. Only the bin should be highlighted where mouse coursor hovers, as it happens when using linear scale. ### To Reproduce. ```cpp. void test() {. auto h = new TH2F(""h"", ""title;x;y"", 100, 0.001, 5, 100, 0., 5);. for(int i=0; i < 100000; i++){. double x = gRandom->Uniform(0., 5.);. double y = gRandom->Uniform(0., 5.);. h->Fill(x, y);. }. auto c = new TCanvas();. h->Draw(""colz"");. h->SetStats(0);. c->SetLogx();. // right-click on the histogram and SetShowProjectionY afterwards. }. ```. `$ root test.cpp`. EDIT: In the newer versions of ROOT with the web-based `TBrowser` to reproduce, run:. `$ root --web=off test.cpp`. ### Setup. 1. ROOT version: 6.26/06. 2. OS: Centos 7 (NOTE: Mac users are unaffected, as there seem to be no highlighting at all). ### Additional context. 1. Initially submited on forum:. https://root-forum.cern.ch/t/setshowprojection-highlights-the-wrong-position-with-logarithmic-axis/53965/3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12497
https://github.com/root-project/root/issues/12498:155,deployability,automat,automatically,155,TTime class is not splitable; See https://root-forum.cern.ch/t/ttime-saved-to-a-ttree-in-root5-and-root6/54031. This is because `TTime` is still using the automatically generated but streamer-function based I/O.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12498
https://github.com/root-project/root/issues/12498:207,performance,I/O,I/O,207,TTime class is not splitable; See https://root-forum.cern.ch/t/ttime-saved-to-a-ttree-in-root5-and-root6/54031. This is because `TTime` is still using the automatically generated but streamer-function based I/O.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12498
https://github.com/root-project/root/issues/12498:155,testability,automat,automatically,155,TTime class is not splitable; See https://root-forum.cern.ch/t/ttime-saved-to-a-ttree-in-root5-and-root6/54031. This is because `TTime` is still using the automatically generated but streamer-function based I/O.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12498
https://github.com/root-project/root/pull/12499:125,deployability,automat,automatically,125,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12499:222,deployability,upgrad,upgraded,222,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12499:222,modifiability,upgrad,upgraded,222,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12499:177,performance,I/O,I/O,177,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12499:125,testability,automat,automatically,125,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12499:197,usability,stop,stopped,197,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12499:242,usability,custom,custom,242,Allow splitting of TTime objects; This fixes #12498. TTime objects were not (anymore) split because TTime is still using the automatically generated but streamer-function based I/O. (The splitting stopped when `TTree` was upgraded to respect custom streamers).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12499
https://github.com/root-project/root/pull/12500:213,deployability,toggl,toggle,213,"[webgeom] physical nodes visibility, separate hieararchy from GL; 1. Let change physical nodes visibility in hierarchy and in GL. Data stored in special structure on server side. 2. In hierarchy browser allows to toggle visibility via special checkbox. 3. In geometry GL drawing via context menu single node of several nodes can be hidden. 4. Provide special browsing methods for TGeo classes in RBrowser. 5. Fully split `RGeomViewer` from `RGeomHierarchy` widget. 6. Provide in `web_cms.cxx` tutorial example how it can be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12500
https://github.com/root-project/root/pull/12500:271,energy efficiency,draw,drawing,271,"[webgeom] physical nodes visibility, separate hieararchy from GL; 1. Let change physical nodes visibility in hierarchy and in GL. Data stored in special structure on server side. 2. In hierarchy browser allows to toggle visibility via special checkbox. 3. In geometry GL drawing via context menu single node of several nodes can be hidden. 4. Provide special browsing methods for TGeo classes in RBrowser. 5. Fully split `RGeomViewer` from `RGeomHierarchy` widget. 6. Provide in `web_cms.cxx` tutorial example how it can be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12500
https://github.com/root-project/root/pull/12500:283,testability,context,context,283,"[webgeom] physical nodes visibility, separate hieararchy from GL; 1. Let change physical nodes visibility in hierarchy and in GL. Data stored in special structure on server side. 2. In hierarchy browser allows to toggle visibility via special checkbox. 3. In geometry GL drawing via context menu single node of several nodes can be hidden. 4. Provide special browsing methods for TGeo classes in RBrowser. 5. Fully split `RGeomViewer` from `RGeomHierarchy` widget. 6. Provide in `web_cms.cxx` tutorial example how it can be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12500
https://github.com/root-project/root/pull/12500:291,usability,menu,menu,291,"[webgeom] physical nodes visibility, separate hieararchy from GL; 1. Let change physical nodes visibility in hierarchy and in GL. Data stored in special structure on server side. 2. In hierarchy browser allows to toggle visibility via special checkbox. 3. In geometry GL drawing via context menu single node of several nodes can be hidden. 4. Provide special browsing methods for TGeo classes in RBrowser. 5. Fully split `RGeomViewer` from `RGeomHierarchy` widget. 6. Provide in `web_cms.cxx` tutorial example how it can be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12500
https://github.com/root-project/root/pull/12500:457,usability,widget,widget,457,"[webgeom] physical nodes visibility, separate hieararchy from GL; 1. Let change physical nodes visibility in hierarchy and in GL. Data stored in special structure on server side. 2. In hierarchy browser allows to toggle visibility via special checkbox. 3. In geometry GL drawing via context menu single node of several nodes can be hidden. 4. Provide special browsing methods for TGeo classes in RBrowser. 5. Fully split `RGeomViewer` from `RGeomHierarchy` widget. 6. Provide in `web_cms.cxx` tutorial example how it can be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12500
https://github.com/root-project/root/pull/12502:251,integrability,rout,routines,251,"[ntuple] Add support for `SplitIndex32` columns; This is the first column with the delta+split encoding. Having now cast, split, and delta+split encoding and the byte swap on big-endian machines, it required some streamlining of the packing/unpacking routines in RColumnElement. Still missing and for a follow-up PR: (Split)Index64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12502
https://github.com/root-project/root/pull/12502:233,modifiability,pac,packing,233,"[ntuple] Add support for `SplitIndex32` columns; This is the first column with the delta+split encoding. Having now cast, split, and delta+split encoding and the byte swap on big-endian machines, it required some streamlining of the packing/unpacking routines in RColumnElement. Still missing and for a follow-up PR: (Split)Index64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12502
https://github.com/root-project/root/pull/12502:13,usability,support,support,13,"[ntuple] Add support for `SplitIndex32` columns; This is the first column with the delta+split encoding. Having now cast, split, and delta+split encoding and the byte swap on big-endian machines, it required some streamlining of the packing/unpacking routines in RColumnElement. Still missing and for a follow-up PR: (Split)Index64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12502
https://github.com/root-project/root/pull/12503:493,availability,error,errors,493,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:557,availability,error,errors,557,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:373,deployability,version,version,373,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:444,deployability,version,version,444,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:486,deployability,log,logged,486,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:603,deployability,Build,BuildOld,603,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:768,deployability,Build,BuildOld,768,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:934,deployability,Build,BuildOld,934,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1498,deployability,version,version,1498,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1607,deployability,version,version,1607,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1624,deployability,releas,released,1624,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:373,integrability,version,version,373,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:444,integrability,version,version,444,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1498,integrability,version,version,1498,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1607,integrability,version,version,1607,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:373,modifiability,version,version,373,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:444,modifiability,version,version,444,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1498,modifiability,version,version,1498,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1607,modifiability,version,version,1607,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:493,performance,error,errors,493,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:557,performance,error,errors,557,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:486,safety,log,logged,486,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:493,safety,error,errors,493,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:557,safety,error,errors,557,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:486,security,log,logged,486,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:486,testability,log,logged,486,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1329,testability,simpl,simpler,1329,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:493,usability,error,errors,493,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:557,usability,error,errors,557,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1329,usability,simpl,simpler,1329,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12503:1439,usability,clear,clear,1439,"[RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; This follows up on a previous commit 92fbd0db47 with the title:. ```. [RF] Modernize `RooVectorDataStore::RealFullVector` class. ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element. TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element. ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12503
https://github.com/root-project/root/pull/12504:275,deployability,updat,updated,275,[HS3][RF] Bugfixes and improvements; # This Pull request:. Fixes some bugs to HS3 implementation. - round numbers for Barlow-Beeston reverse-engineering. - sort normalization factors. - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/pull/12504:245,safety,test,tested,245,[HS3][RF] Bugfixes and improvements; # This Pull request:. Fixes some bugs to HS3 implementation. - round numbers for Barlow-Beeston reverse-engineering. - sort normalization factors. - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/pull/12504:275,safety,updat,updated,275,[HS3][RF] Bugfixes and improvements; # This Pull request:. Fixes some bugs to HS3 implementation. - round numbers for Barlow-Beeston reverse-engineering. - sort normalization factors. - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/pull/12504:275,security,updat,updated,275,[HS3][RF] Bugfixes and improvements; # This Pull request:. Fixes some bugs to HS3 implementation. - round numbers for Barlow-Beeston reverse-engineering. - sort normalization factors. - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/pull/12504:245,testability,test,tested,245,[HS3][RF] Bugfixes and improvements; # This Pull request:. Fixes some bugs to HS3 implementation. - round numbers for Barlow-Beeston reverse-engineering. - sort normalization factors. - harmonize names of shape systematics. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12504
https://github.com/root-project/root/issues/12505:15,deployability,fail,fail,15,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:220,deployability,fail,fails,220,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:42,energy efficiency,Current,Currently,42,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:15,reliability,fail,fail,15,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:220,reliability,fail,fails,220,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:162,safety,prevent,prevent,162,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:170,safety,test,tests,170,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:162,security,preven,prevent,162,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12505:170,testability,test,tests,170,"CI: PR should ""fail"" in case of warnings; Currently, with the new CI, warnings are only visible in the diff or action view. We don't want `-Werror` as that would prevent tests from being run. Maybe add a new action that fails if there is a problem matcher match?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12505
https://github.com/root-project/root/issues/12509:1169,performance,memor,memory,1169,"for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 4 :fCoordinates.fM : Double32_t *. *Entries : 1 : Total Size= 623 bytes File Size = 94 *. *Baskets : 1 : Basket Size= 32000 bytes Compress",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:2482,performance,memor,memory,2482,....................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 4 :fCoordinates.fM : Double32_t *. *Entries : 1 : Total Size= 623 bytes File Size = 94 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Branch :lvd *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 5 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 6 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 7 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 8 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 9 :fCoordinates.fM : Double32_t *. *Entries : 1 : Total Size= 623 bytes File Size = 94 *. *Baskets : 1 : Basket Size= 32000 bytes Compress,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:162,safety,test,test,162,"TClass prefers `<Double32_t`> over `<double>` specialization; ```c++. auto f = new TFile(""branchobject.root"", ""RECREATE"");. TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *.................................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:743,safety,test,test,743,"TClass prefers `<Double32_t`> over `<double>` specialization; ```c++. auto f = new TFile(""branchobject.root"", ""RECREATE"");. TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *.................................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:162,testability,test,test,162,"TClass prefers `<Double32_t`> over `<double>` specialization; ```c++. auto f = new TFile(""branchobject.root"", ""RECREATE"");. TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *.................................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:743,testability,test,test,743,"TClass prefers `<Double32_t`> over `<double>` specialization; ```c++. auto f = new TFile(""branchobject.root"", ""RECREATE"");. TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *.................................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:7,usability,prefer,prefers,7,"TClass prefers `<Double32_t`> over `<double>` specialization; ```c++. auto f = new TFile(""branchobject.root"", ""RECREATE"");. TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *.................................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:1169,usability,memor,memory,1169,"for branchobject.cxx"");. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);. ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>> lvd(11., 12., 13., 14.);. t->Branch(""lv32"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>>"", &lv);. t->Branch(""lvd"", ""ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double>>"", &lvd);. t->Fill();. t->Write();. ```. yields. ```. $ root -l -b branchobject.root. branchobject->Print(). ******************************************************************************. *Tree :branchobject: test tree for branchobject.cxx *. *Entries : 1 : Total = 8657 bytes File Size = 2085 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Branch :lv32 *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 0 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 1 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 4 :fCoordinates.fM : Double32_t *. *Entries : 1 : Total Size= 623 bytes File Size = 94 *. *Baskets : 1 : Basket Size= 32000 bytes Compress",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12509:2482,usability,memor,memory,2482,....................................................................*. *Br 2 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 3 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 4 :fCoordinates.fM : Double32_t *. *Entries : 1 : Total Size= 623 bytes File Size = 94 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Branch :lvd *. *Entries : 1 : BranchElement (see below) *. *............................................................................*. *Br 5 :fCoordinates : *. *Entries : 1 : Total Size= 2996 bytes One basket in memory *. *Baskets : 0 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 6 :fCoordinates.fPt : Double32_t *. *Entries : 1 : Total Size= 628 bytes File Size = 95 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 7 :fCoordinates.fEta : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 8 :fCoordinates.fPhi : Double32_t *. *Entries : 1 : Total Size= 633 bytes File Size = 96 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. *Br 9 :fCoordinates.fM : Double32_t *. *Entries : 1 : Total Size= 623 bytes File Size = 94 *. *Baskets : 1 : Basket Size= 32000 bytes Compress,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12509
https://github.com/root-project/root/issues/12510:1172,availability,Operat,Operating,1172,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:1151,deployability,version,version,1151,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:248,integrability,event,events,248,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:692,integrability,event,event,692,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:747,integrability,EVENT,EVENT,747,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:1081,integrability,EVENT,EVENT,1081,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:1151,integrability,version,version,1151,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:982,modifiability,variab,variable,982,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:1151,modifiability,version,version,1151,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/issues/12510:1029,usability,behavi,behavior,1029,"Issue with `hadd` when first file has empty tree; ### Describe the bug. It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like. ```. hadd dummyFile01.root dummyFile0.root dummyFile1.root. ``` . Everything is okay. While if you do like. ```. hadd dummyFile10.root dummyFile1.root dummyFile0.root. ```. And you open the merged `dummyFile10.root` to get entries like. ```. root [1] dummyTree->GetEntries(). (long long) 1000. ```. It looks okay. But if you show the first event, like. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 2.13654e-306. ```. The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior. ```. root [1] dummyTree->Show(0). ======> EVENT:0. index = 0. dummyVariable = 0.261287. ```. ### Setup. 1. ROOT version: 6.26/06. 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12510
https://github.com/root-project/root/pull/12511:210,availability,state,stateless,210,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,deployability,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,deployability,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,integrability,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,integrability,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:210,integrability,state,stateless,210,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,interoperability,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,interoperability,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,modifiability,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,modifiability,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,reliability,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,reliability,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:157,safety,test,test,157,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,security,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,security,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:46,testability,integr,integrals,46,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:118,testability,integr,integrals,118,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:137,testability,mock,mock,137,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:157,testability,test,test,157,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:9,usability,support,support,9,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12511:85,usability,support,support,85,[RF] Add support for differentiating Gaussian integrals using AD.; This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12511
https://github.com/root-project/root/pull/12512:178,performance,disk,disk,178,"[ntuple] Add support for std::bitset<N>; Adds a type-erased `RBitsetField` and a templated `RField<std::bitset<N>>`. Compilers implement bitsets as arrays of `unsigned long`. On disk, bitsets get stored as `Bit` column. Bit sets occur in the CMS EDM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12512
https://github.com/root-project/root/pull/12512:13,usability,support,support,13,"[ntuple] Add support for std::bitset<N>; Adds a type-erased `RBitsetField` and a templated `RField<std::bitset<N>>`. Compilers implement bitsets as arrays of `unsigned long`. On disk, bitsets get stored as `Bit` column. Bit sets occur in the CMS EDM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12512
https://github.com/root-project/root/pull/12513:164,deployability,configurat,configurations,164,"Move to `TStyle` static members from `TGaxis`; Redirect calls to:. * TGaxis::SetMaxDigits(). * TGaxis::GetMaxDigits(). * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to. gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12513:164,integrability,configur,configurations,164,"Move to `TStyle` static members from `TGaxis`; Redirect calls to:. * TGaxis::SetMaxDigits(). * TGaxis::GetMaxDigits(). * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to. gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12513:164,modifiability,configur,configurations,164,"Move to `TStyle` static members from `TGaxis`; Redirect calls to:. * TGaxis::SetMaxDigits(). * TGaxis::GetMaxDigits(). * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to. gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12513:164,security,configur,configurations,164,"Move to `TStyle` static members from `TGaxis`; Redirect calls to:. * TGaxis::SetMaxDigits(). * TGaxis::GetMaxDigits(). * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to. gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12513:209,security,access,access,209,"Move to `TStyle` static members from `TGaxis`; Redirect calls to:. * TGaxis::SetMaxDigits(). * TGaxis::GetMaxDigits(). * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to. gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12513
https://github.com/root-project/root/pull/12514:166,availability,avail,available,166,[v6-24][PyROOT] Py_TYPE is changed to an inline static function in Py3.11; As mentioned in the Python docs:. https://docs.python.org/3.11/whatsnew/3.11.html. Already available upstream in:. https://github.com/wlav/CPyCppyy/commit/a8f41df0618f40ecc9a2a0b5a51fd12ddf2e6673.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12514
https://github.com/root-project/root/pull/12514:166,reliability,availab,available,166,[v6-24][PyROOT] Py_TYPE is changed to an inline static function in Py3.11; As mentioned in the Python docs:. https://docs.python.org/3.11/whatsnew/3.11.html. Already available upstream in:. https://github.com/wlav/CPyCppyy/commit/a8f41df0618f40ecc9a2a0b5a51fd12ddf2e6673.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12514
https://github.com/root-project/root/pull/12514:166,safety,avail,available,166,[v6-24][PyROOT] Py_TYPE is changed to an inline static function in Py3.11; As mentioned in the Python docs:. https://docs.python.org/3.11/whatsnew/3.11.html. Already available upstream in:. https://github.com/wlav/CPyCppyy/commit/a8f41df0618f40ecc9a2a0b5a51fd12ddf2e6673.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12514
https://github.com/root-project/root/pull/12514:166,security,availab,available,166,[v6-24][PyROOT] Py_TYPE is changed to an inline static function in Py3.11; As mentioned in the Python docs:. https://docs.python.org/3.11/whatsnew/3.11.html. Already available upstream in:. https://github.com/wlav/CPyCppyy/commit/a8f41df0618f40ecc9a2a0b5a51fd12ddf2e6673.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12514
https://github.com/root-project/root/pull/12516:63,availability,failur,failures,63,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:259,availability,error,error,259,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:593,availability,error,error,593,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:28,deployability,modul,modulemap,28,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:57,deployability,build,build,57,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:63,deployability,fail,failures,63,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:206,deployability,build,build,206,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:509,deployability,modul,module,509,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:732,deployability,build,build,732,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1208,deployability,updat,updated,1208,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:143,energy efficiency,Core,Core,143,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:28,modifiability,modul,modulemap,28,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:509,modifiability,modul,module,509,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:63,performance,failur,failures,63,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:259,performance,error,error,259,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:593,performance,error,error,593,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:63,reliability,fail,failures,63,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:28,safety,modul,modulemap,28,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:259,safety,error,error,259,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:509,safety,modul,module,509,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:593,safety,error,error,593,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1178,safety,test,tested,1178,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1208,safety,updat,updated,1208,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1208,security,updat,updated,1208,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:1178,testability,test,tested,1178,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:259,usability,error,error,259,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12516:593,usability,error,error,593,"Revert recent C++20 related modulemap commits; It causes build failures on GCC 12.2.1 / c++17 with. ```. [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. In file included from input_line_7:111:. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used. using clock_t = std::chrono::system_clock;. ^. /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible. struct system_clock. ^. In module 'std' imported from input_line_1:1:. /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used. _Tp __tmp = _GLIBCXX_MOVE(__a);. ^. /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here. swap(fDate, other.fDate);. ^. /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable. struct time_point. ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12516
https://github.com/root-project/root/pull/12517:58,deployability,build,building,58,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:77,deployability,instal,installing,77,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:232,deployability,updat,updated,232,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:112,modifiability,pac,packages,112,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:202,safety,test,tested,202,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:232,safety,updat,updated,232,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:232,security,updat,updated,232,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12517:202,testability,test,tested,202,[req.txt] dask needs modern Python: [skip-ci]; This fixes building ROOT (and installing the prerequisite python packages) e.g. on Alma9. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12517
https://github.com/root-project/root/pull/12518:221,deployability,updat,updated,221,[RF][HS3][HF] ShapeSys bugfixes; # This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12518:191,safety,test,tested,191,[RF][HS3][HF] ShapeSys bugfixes; # This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12518:221,safety,updat,updated,221,[RF][HS3][HF] ShapeSys bugfixes; # This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12518:221,security,updat,updated,221,[RF][HS3][HF] ShapeSys bugfixes; # This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12518:191,testability,test,tested,191,[RF][HS3][HF] ShapeSys bugfixes; # This Pull request:. Fixes more bugs with the HS3 implementation. ## Changes or fixes:. Shape systematics are finally treated properly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12518
https://github.com/root-project/root/pull/12519:48,availability,failur,failures,48,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:42,deployability,build,build,42,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:48,deployability,fail,failures,48,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:69,deployability,modul,modules,69,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:85,deployability,modul,modules,85,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:69,modifiability,modul,modules,69,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:85,modifiability,modul,modules,85,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:48,performance,failur,failures,48,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:48,reliability,fail,failures,48,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:159,reliability,doe,does,159,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:69,safety,modul,modules,69,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/pull/12519:85,safety,modul,modules,85,Enable C++20; This PR fixes the remaining build failures with C++20 (modules and non-modules related). It might still leave something broken in C++20 - but it does not break C++14 or 17.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12519
https://github.com/root-project/root/issues/12520:1932,availability,Operat,Operating,1932,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2007,availability,down,download,2007,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2072,availability,Operat,Operating,2072,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1018,deployability,build,build,1018,"ong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1920,deployability,version,version,1920,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1989,deployability,instal,install,1989,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2052,deployability,Version,Version,2052,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1920,integrability,version,version,1920,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2052,integrability,Version,Version,2052,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:46,interoperability,specif,specified,46,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:513,interoperability,Specif,Specifying,513,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1920,modifiability,version,version,1920,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2052,modifiability,Version,Version,2052,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:972,safety,input,input,972,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2157,testability,context,context,2157,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:2186,testability,context,context,2186,"to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. First posted on the ROOT forum here https://root-forum.cern.ch/t/how-to-use-coltype-in-rdf-fromcsv/54155.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:447,usability,clear,clear,447,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:495,usability,behavi,behavior,495,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:634,usability,behavi,behavior,634,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:652,usability,clear,clear,652,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:827,usability,behavi,behavior,827,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:972,usability,input,input,972,"RDF::FromCSV gives wrong output with colTypes specified; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/issues/12520:1216,usability,close,close,1216,"ira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Specifying `colTypes` as `'D'` in `RDF::FromCSV` results in columns of type `double` with all values `0.0`. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Columns of type `double` with values read from the csv file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Run the following macro with `root`. ```. {. std::ofstream outfile;. outfile.open(""./toydata.csv"");. outfile << ""5,3\n7,8.1\n4.1,4.67\n-1.3,5.01"";. outfile.close();. auto df1 = ROOT::RDF::FromCSV(""./toydata.csv"", false);. auto df2 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'}});. auto df3 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col1"", 'D'}});. auto df4 = ROOT::RDF::FromCSV(""./toydata.csv"", false, ',', -1, {{""Col0"", 'D'},{""Col1"", 'D'}});. std::cout << ""colTypes = {}"" << std::endl;. df1.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'}}"" << std::endl;. df2.Display()->Print();. std::cout << ""colTypes = {{\""Col1\"", \'D\'}}"" << std::endl;. df3.Display()->Print();. std::cout << ""colTypes = {{\""Col0\"", \'D\'},{\""Col1\"", \'D\'}}"" << std::endl;. df4.Display()->Print();. }. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. *ROOT Version:* 6.28/00. *Operating system:* macosx 10.15.7. *ROOT obtained from:* conda-forge. ### Additional context. <!--. Add any other context about the problem here. -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12520
https://github.com/root-project/root/pull/12521:114,integrability,interfac,interfaces,114,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:229,integrability,interfac,interface,229,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:415,integrability,wrap,wraps,415,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:114,interoperability,interfac,interfaces,114,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:229,interoperability,interfac,interface,229,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:114,modifiability,interfac,interfaces,114,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:229,modifiability,interfac,interface,229,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:251,modifiability,evolv,evolve,251,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:104,usability,minim,minimizer,104,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:167,usability,custom,custom,167,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12521:382,usability,minim,minimizing,382,"[RF] Enable passing of gradient function directly to RooMinimizer; After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12521
https://github.com/root-project/root/pull/12522:37,deployability,build,build,37,[ci] Print CMake cache vars for incr build. [skip-ci]; Makes it easier to understand what's enabled etc when no `cmake` config happens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12522
https://github.com/root-project/root/pull/12522:17,performance,cach,cache,17,[ci] Print CMake cache vars for incr build. [skip-ci]; Makes it easier to understand what's enabled etc when no `cmake` config happens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12522
https://github.com/root-project/root/pull/12522:74,testability,understand,understand,74,[ci] Print CMake cache vars for incr build. [skip-ci]; Makes it easier to understand what's enabled etc when no `cmake` config happens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12522
https://github.com/root-project/root/pull/12523:23,availability,error,errors,23,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:88,availability,error,errors,88,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:201,availability,error,error,201,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6171,availability,error,error,6171,"leGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:295,deployability,build,build,295,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:305,deployability,releas,release,305,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:818,deployability,build,build,818,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:828,deployability,releas,release,828,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1398,deployability,depend,dependent,1398,"r\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1435,deployability,build,build,1435,"mat.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\be",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1445,deployability,releas,release,1445,"9): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2156,deployability,build,build,2156,"td::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2166,deployability,releas,release,2166,"ormat_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2445,deployability,build,build,2445,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2455,deployability,releas,release,2455,"reter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3021,deployability,depend,dependent,3021,"mat_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3058,deployability,build,build,3058,"e_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3068,deployability,releas,release,3068,":GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3426,deployability,build,build,3426,"\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3436,deployability,releas,release,3436,"enot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3701,deployability,build,build,3701,"e_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3711,deployability,releas,release,3711,":GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\Tabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3966,deployability,build,build,3966,"llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3976,deployability,releas,release,3976,"chDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4222,deployability,build,build,4222,"\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4232,deployability,releas,release,4232,"5\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4586,deployability,build,build,4586,"18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4596,deployability,releas,release,4596,"e : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4861,deployability,build,build,4861,"18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\G",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4871,deployability,releas,release,4871,"e : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\G",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5126,deployability,build,build,5126,"18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5136,deployability,releas,release,5136,"e : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\Glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5382,deployability,build,build,5382,"MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5392,deployability,releas,release,5392,"32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5729,deployability,build,build,5729,"IMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5739,deployability,releas,release,5739,"pp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::defa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6003,deployability,build,build,6003,"GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6013,deployability,releas,release,6013,"cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6265,deployability,build,build,6265,"el\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::G",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6275,deployability,releas,release,6275,"ag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6812,deployability,build,build,6812,"l.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6822,deployability,releas,release,6822," interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7416,deployability,depend,dependent,7416,": message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7453,deployability,build,build,7453,"object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resol",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7463,deployability,releas,release,7463,"t std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8206,deployability,build,build,8206,"e_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8216,deployability,releas,release,8216,":GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8495,deployability,build,build,8495,"TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8505,deployability,releas,release,8505,"obalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9094,deployability,depend,dependent,9094,"nique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9131,deployability,build,build,9131,",std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9141,deployability,releas,release,9141,"lt_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9499,deployability,build,build,9499,"64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9509,deployability,releas,release,9509,"interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9774,deployability,build,build,9774,"redicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9784,deployability,releas,release,9784,"d::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\Tabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10039,deployability,build,build,10039,"m::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10049,deployability,releas,release,10049,"agPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10295,deployability,build,build,10295,"\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10305,deployability,releas,release,10305,"5\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10659,deployability,build,build,10659,"18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10669,deployability,releas,release,10669,"e : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10934,deployability,build,build,10934,"18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\Ta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10944,deployability,releas,release,10944,"e : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\Glob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11199,deployability,build,build,11199,"18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11209,deployability,releas,release,11209,"e : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11455,deployability,build,build,11455,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11465,deployability,releas,release,11465,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11810,deployability,build,build,11810,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11820,deployability,releas,release,11820,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:12084,deployability,build,build,12084,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:12094,deployability,releas,release,12094,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:453,integrability,messag,message,453,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1023,integrability,messag,message,1023,"rs with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_form",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1398,integrability,depend,dependent,1398,"r\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1603,integrability,messag,message,1603,":unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2324,integrability,messag,message,2324,"d::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2650,integrability,messag,message,2650,"ue_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3021,integrability,depend,dependent,3021,"mat_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3263,integrability,messag,message,3263,"lvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3594,integrability,messag,message,3594,"\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3869,integrability,messag,message,3869,"lete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4134,integrability,messag,message,4134,"balISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4427,integrability,messag,message,4427,"\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\Tabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4754,integrability,messag,message,4754,"balISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5029,integrability,messag,message,5029,"VMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5294,integrability,messag,message,5294,"nGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5550,integrability,messag,message,5550,"ypes &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredica",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5897,integrability,messag,message,5897,"tils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6423,integrability,messag,message,6423,"TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7017,integrability,messag,message,7017,"interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7416,integrability,depend,dependent,7416,": message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7621,integrability,messag,message,7621,"d::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visua",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8374,integrability,messag,message,8374,"edicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8700,integrability,messag,message,8700,",std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot conv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9094,integrability,depend,dependent,9094,"nique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9336,integrability,messag,message,9336,"GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9667,integrability,messag,message,9667,"215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9942,integrability,messag,message,9942,"GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10207,integrability,messag,message,10207,"balISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10500,integrability,messag,message,10500,"\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\Tabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10827,integrability,messag,message,10827,"balISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11102,integrability,messag,message,11102,"VMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11367,integrability,messag,message,11367,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11623,integrability,messag,message,11623,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11978,integrability,messag,message,11978,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:221,interoperability,format,format,221,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:264,interoperability,convers,conversions,264,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:435,interoperability,Format,Format,435,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:453,interoperability,messag,message,453,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:590,interoperability,format,format,590,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1006,interoperability,format,format,1006,"x compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1023,interoperability,messag,message,1023,"rs with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_form",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1055,interoperability,format,format,1055,"Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::un",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1603,interoperability,messag,message,1603,":unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1632,interoperability,format,format,1632,"Instr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2324,interoperability,messag,message,2324,"d::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2633,interoperability,format,format,2633,"at<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2650,interoperability,messag,message,2650,"ue_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2681,interoperability,format,format,2681,"td::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3246,interoperability,format,format,3246,"oj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3263,interoperability,messag,message,3263,"lvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3295,interoperability,format,format,3295,"el\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3594,interoperability,messag,message,3594,"\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3869,interoperability,messag,message,3869,"lete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4134,interoperability,messag,message,4134,"balISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4410,interoperability,format,format,4410,"ers\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4427,interoperability,messag,message,4427,"\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\Tabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4458,interoperability,format,format,4458,"src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4754,interoperability,messag,message,4754,"balISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5029,interoperability,messag,message,5029,"VMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5294,interoperability,messag,message,5294,"nGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5550,interoperability,messag,message,5550,"ypes &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredica",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5897,interoperability,messag,message,5897,"tils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6191,interoperability,format,format,6191,"MTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6234,interoperability,convers,conversions,6234,"\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6405,interoperability,Format,Format,6405,"ter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6423,interoperability,messag,message,6423,"TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6568,interoperability,format,format,6568,"g to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7000,interoperability,format,format,7000,"build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7017,interoperability,messag,message,7017,"interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7049,interoperability,format,format,7049,"eGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7621,interoperability,messag,message,7621,"d::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visua",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7650,interoperability,format,format,7650,"tchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8374,interoperability,messag,message,8374,"edicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8683,interoperability,format,format,8683,"IMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initiali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8700,interoperability,messag,message,8700,",std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot conv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8731,interoperability,format,format,8731,"atchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9319,interoperability,format,format,9319,"rc\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9336,interoperability,messag,message,9336,"GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9368,interoperability,format,format,9368,"): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9667,interoperability,messag,message,9667,"215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9942,interoperability,messag,message,9942,"GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10207,interoperability,messag,message,10207,"balISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10483,interoperability,format,format,10483,"ers\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10500,interoperability,messag,message,10500,"\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\Tabl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10531,interoperability,format,format,10531,"src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10827,interoperability,messag,message,10827,"balISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11102,interoperability,messag,message,11102,"VMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11367,interoperability,messag,message,11367,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11623,interoperability,messag,message,11623,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11978,interoperability,messag,message,11978,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1398,modifiability,depend,dependent,1398,"r\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3021,modifiability,depend,dependent,3021,"mat_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7416,modifiability,depend,dependent,7416,": message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9094,modifiability,depend,dependent,9094,"nique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:23,performance,error,errors,23,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:88,performance,error,errors,88,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:201,performance,error,error,201,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6171,performance,error,error,6171,"leGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:23,safety,error,errors,23,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:88,safety,error,errors,88,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:201,safety,error,error,201,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1398,safety,depend,dependent,1398,"r\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3021,safety,depend,dependent,3021,"mat_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6171,safety,error,error,6171,"leGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7416,safety,depend,dependent,7416,": message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9094,safety,depend,dependent,9094,"nique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1398,testability,depend,dependent,1398,"r\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3021,testability,depend,dependent,3021,"mat_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7416,testability,depend,dependent,7416,": message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9094,testability,depend,dependent,9094,"nique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Global",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:23,usability,error,errors,23,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:88,usability,error,errors,88,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:201,usability,error,error,201,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:280,usability,User,Users,280,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:427,usability,Support,Support,427,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:803,usability,User,Users,803,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:943,usability,Visual,Visual,943,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:975,usability,Tool,Tools,975,"[llvm] Fix compilation errors with -std:c++20 on Windows; Fix the following compilation errors with `-std:c++20` on Windows:. ```. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:1420,usability,User,Users,1420,"lvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2141,usability,User,Users,2141,"str>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2430,usability,User,Users,2430,"t\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2570,usability,Visual,Visual,2570,"alISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:2602,usability,Tool,Tools,2602,"ssage : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3043,usability,User,Users,3043,"onst std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3183,usability,Visual,Visual,3183,"llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is dec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3215,usability,Tool,Tools,3215,"el\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\belle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3411,usability,User,Users,3411,"s ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\form",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3686,usability,User,Users,3686,"onst std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:3951,usability,User,Users,3951,"default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4207,usability,User,Users,4207,"y\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4347,usability,Visual,Visual,4347,"ng<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declare",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4379,usability,Tool,Tools,4379,":type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4571,usability,User,Users,4571,"atchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:4846,usability,User,Users,4846,"atchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5111,usability,User,Users,5111,"atchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5367,usability,User,Users,5367,"unity\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5714,usability,User,Users,5714,"en\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:5988,usability,User,Users,5988,"Gen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6171,usability,error,error,6171,"leGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6250,usability,User,Users,6250,"bleGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6397,usability,Support,Support,6397,"nterpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6797,usability,User,Users,6797,"bleGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6937,usability,Visual,Visual,6937,"onst/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:6969,usability,Tool,Tools,6969,"e ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:7438,usability,User,Users,7438," 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8191,usability,User,Users,8191,"onst std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8480,usability,User,Users,8480,"llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8620,usability,Visual,Visual,8620,"ssage : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:8652,usability,Tool,Tools,8652,"t<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9116,usability,User,Users,9116,"tchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9256,usability,Visual,Visual,9256,"\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is dec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9288,usability,Tool,Tools,9288,"el.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\belle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9484,usability,User,Users,9484,"ellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\form",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:9759,usability,User,Users,9759,"vm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10024,usability,User,Users,10024,"ault_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10280,usability,User,Users,10280,"y\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10420,usability,Visual,Visual,10420,"ng<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declare",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10452,usability,Tool,Tools,10452,":type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10644,usability,User,Users,10644,"atchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:10919,usability,User,Users,10919,"atchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11184,usability,User,Users,11184,"atchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11440,usability,User,Users,11440,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:11795,usability,User,Users,11795,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12523:12069,usability,User,Users,12069,"ease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]. ```. This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12523
https://github.com/root-project/root/pull/12525:22,availability,operat,operator,22,"[c++20] Add spaceship operator <=> in TString; In the following code (from `TFormula.cxx`):. ```. map< std::pair<TString,Int_t>, pair<TString,TString> > functions;. pair<TString, Int_t> key = make_pair(funName, dim);. if (functions.find(key) == functions.end()) {. ```. `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:347,availability,operat,operator,347,"[c++20] Add spaceship operator <=> in TString; In the following code (from `TFormula.cxx`):. ```. map< std::pair<TString,Int_t>, pair<TString,TString> > functions;. pair<TString, Int_t> key = make_pair(funName, dim);. if (functions.find(key) == functions.end()) {. ```. `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:411,deployability,fail,failing,411,"[c++20] Add spaceship operator <=> in TString; In the following code (from `TFormula.cxx`):. ```. map< std::pair<TString,Int_t>, pair<TString,TString> > functions;. pair<TString, Int_t> key = make_pair(funName, dim);. if (functions.find(key) == functions.end()) {. ```. `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:411,reliability,fail,failing,411,"[c++20] Add spaceship operator <=> in TString; In the following code (from `TFormula.cxx`):. ```. map< std::pair<TString,Int_t>, pair<TString,TString> > functions;. pair<TString, Int_t> key = make_pair(funName, dim);. if (functions.find(key) == functions.end()) {. ```. `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:419,safety,test,tests,419,"[c++20] Add spaceship operator <=> in TString; In the following code (from `TFormula.cxx`):. ```. map< std::pair<TString,Int_t>, pair<TString,TString> > functions;. pair<TString, Int_t> key = make_pair(funName, dim);. if (functions.find(key) == functions.end()) {. ```. `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/pull/12525:419,testability,test,tests,419,"[c++20] Add spaceship operator <=> in TString; In the following code (from `TFormula.cxx`):. ```. map< std::pair<TString,Int_t>, pair<TString,TString> > functions;. pair<TString, Int_t> key = make_pair(funName, dim);. if (functions.find(key) == functions.end()) {. ```. `functions.find(key)` always returns `functions.end()`. Adding the spaceship operator `<=>` in TString fixes the issue. This fixes also many failing tests with `std:c++20`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12525
https://github.com/root-project/root/issues/12527:713,availability,error,error,713,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:817,availability,Error,Error,817,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:870,availability,Error,Error,870,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:895,availability,Error,Error,895,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:6,deployability,build,build,6,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:12,deployability,fail,fails,12,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:86,deployability,build,build,86,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:95,deployability,fail,fail,95,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:735,deployability,fail,failed,735,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:840,energy efficiency,core,core,840,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:856,energy efficiency,Core,Core,856,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:21,integrability,configur,configured,21,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:130,interoperability,share,shared,130,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:186,interoperability,architectur,architecture,186,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:686,interoperability,architectur,architecture,686,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:21,modifiability,configur,configured,21,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:713,performance,error,error,713,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:817,performance,Error,Error,817,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:870,performance,Error,Error,870,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:895,performance,Error,Error,895,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:12,reliability,fail,fails,12,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:95,reliability,fail,fail,95,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:735,reliability,fail,failed,735,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:713,safety,error,error,713,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:817,safety,Error,Error,817,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:870,safety,Error,Error,870,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:895,safety,Error,Error,895,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:21,security,configur,configured,21,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:713,usability,error,error,713,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:727,usability,command,command,727,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:817,usability,Error,Error,817,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:870,usability,Error,Error,870,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/issues/12527:895,usability,Error,Error,895,"MacOS build fails if configured without cocoa; On macOS, `-Dcocoa=Off` will cause the build to fail with. ```. [ 77%] Linking CXX shared library ../lib/libCore.so. Undefined symbols for architecture arm64:. ""TMacOSXSystem::TMacOSXSystem()"", referenced from:. ROOT::new_TMacOSXSystem(void*) in G__Core.cxx.o. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ""TMacOSXSystem::~TMacOSXSystem()"", referenced from:. ROOT::newArray_TMacOSXSystem(long, void*) in G__Core.cxx.o. ROOT::deleteArray_TMacOSXSystem(void*) in G__Core.cxx.o. ""typeinfo for TMacOSXSystem"", referenced from:. ROOT::GenerateInitInstanceLocal(TMacOSXSystem const*) in G__Core.cxx.o. ld: symbol(s) not found for architecture arm64. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[2]: *** [lib/libCore.so] Error 1. make[1]: *** [core/CMakeFiles/Core.dir/all] Error 2. make: *** [all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12527
https://github.com/root-project/root/pull/12528:0,deployability,Build,Build,0,Build core/macosx only when cocoa=ON; Fixes #12527.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
https://github.com/root-project/root/pull/12528:6,energy efficiency,core,core,6,Build core/macosx only when cocoa=ON; Fixes #12527.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12528
