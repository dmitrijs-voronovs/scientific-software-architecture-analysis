id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/9381:525,security,log,logs,525,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:525,testability,log,logs,525,"[RF] RooFit HS3 JSonParsers fails to build with external nlohmann-json; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1741,testability,test,testrootjson,1741,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1758,testability,test,testrootjson,1758,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1186,usability,error,error,1186,"ssue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/issues/9381:1549,usability,behavi,behavior,1549,"). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Building root in the LCG stack dev3 slot (HEAD of master branch), full logs http://cdash.cern.ch/viewFiles.php?buildid=134296. ```. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONParser.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/HistFactoryJSONTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/RooJSONFactoryWSTool.cxx.o. [100%] Building CXX object roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o. /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/hs3/src/JSONParser.cxx:5:10: fatal error: nlohmann/json.hpp: No such file or directory. #include ""nlohmann/json.hpp"". ^~~~~~~~~~~~~~~~~~~. ```. I think introduced here #8944. I guess something like what is done in Eve needs to be added to the other CMakeLists.txt. cf. https://github.com/root-project/root/blob/94f518c380d9c7c00d92f1fecf29806b8105ce9f/graf3d/eve7/CMakeLists.txt#L139. ### Expected behavior. Successful compilation using the external json header. ### To Reproduce. ```. source /cvmfs/sft.cern.ch/lcg/releases/LCG_101/ROOT/6.24.06/x86_64-centos7-gcc10-opt/ROOT-env.sh. mkdir testrootjson. cd testrootjson. mkdir build. git clone --depth=1 https://github.com/root-project/root.git. cd build. cmake -Dbuiltin_nlohmannjson=OFF -Dnlohmann_json_ROOT=${JSONMCPP__HOME} ../root/. make RooFitHS3. ```. * these steps require centos7, cvmfs, cmake and probably hep_oslibs installed on the machine. * using the LCG view hides the problem, because the needed header is part if the generic include directory of the view. ### Setup. ROOT master. cmake ... -Dbuiltin_nlohmannjson=OFF .... centos7 centos 8, ubuntu .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9381
https://github.com/root-project/root/pull/9382:13,deployability,depend,dependency,13,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt; The way this is done was copy-pasted from `graf3d/eve7/CMakeLists.txt`. This PR fixes #9381.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9382
https://github.com/root-project/root/pull/9382:13,integrability,depend,dependency,13,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt; The way this is done was copy-pasted from `graf3d/eve7/CMakeLists.txt`. This PR fixes #9381.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9382
https://github.com/root-project/root/pull/9382:13,modifiability,depend,dependency,13,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt; The way this is done was copy-pasted from `graf3d/eve7/CMakeLists.txt`. This PR fixes #9381.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9382
https://github.com/root-project/root/pull/9382:13,safety,depend,dependency,13,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt; The way this is done was copy-pasted from `graf3d/eve7/CMakeLists.txt`. This PR fixes #9381.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9382
https://github.com/root-project/root/pull/9382:13,testability,depend,dependency,13,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt; The way this is done was copy-pasted from `graf3d/eve7/CMakeLists.txt`. This PR fixes #9381.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9382
https://github.com/root-project/root/issues/9383:391,security,session,session,391,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:724,security,session,session,724,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:7,testability,Regress,Regression,7,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:70,testability,unit,unit,70,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:1065,testability,context,context,1065,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:1102,testability,unit,unit,1102,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9383:1253,usability,behavi,behaviour,1253,"[TGeo][Regression] RadLen and IntLen changed by factor of 10 (default unit system); - [x] Checked for duplicates. ### Describe the bug. `TGeoMaterial::RadLen` and `TGeoMaterial::IntLen` are off by a factor of 10 since commit:. https://github.com/root-project/root/commit/69ecafae96c17de621f68966f6cb4af213734e6c#diff-d30f058e18d96b0e287376ae81abec13a0acabeff56793ceafdeaa258925fa1d. Example session with ROOT 6.14/02:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=9.35362 intlen=45.7729 index=0. ```. Example session with ROOT 6.24/06:. ```. root [0] new TGeoManager();. root [1] gGeoManager->Material(""Silicon"", 28.0855, 14, 2.329, 1);. root [2] gGeoManager->GetListOfMaterials()->Print();. Collection name='THashList', class='THashList', size=1. Material Silicon A=28.0855 Z=14 rho=2.329 radlen=0.935361 intlen=4.57729 index=0. ```. ### Additional context. This is using the ""default"" unit system, i.e. `cm`. Checking [PDG data](https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/silicon_Si.html), it seems that `9.37`, i.e. the old behaviour, was correct. . Reading through the code, it seems the `cm2` factor was added to the denominator of the expression for the radiation length calculation and the `cm` factor was added multiplicatively, yielding a change by a factor of 10. I could not find the original Geant3 code, but it seems likely that the factors were absorbed in the constants there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9383
https://github.com/root-project/root/issues/9384:285,availability,state,statements,285,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:370,availability,state,statements,370,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:681,availability,echo,echo,681,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:534,energy efficiency,current,current,534,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:285,integrability,state,statements,285,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:370,integrability,state,statements,370,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:646,security,modif,modifies,646,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:793,testability,context,context,793,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:170,usability,document,document,170,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:333,usability,behavi,behaviour,333,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:417,usability,document,documentclass,417,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:507,usability,document,document,507,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/issues/9384:555,usability,document,document,555,"TPad::SaveAs .tex Standalone option; ### Is your feature request related to a problem? Please describe. When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like. - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:. - Default behaviour without arguments adds the statements below as comment (prepend %). ```. \documentclass{standalone}. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the current output. \end{document}. ```. ### Describe alternatives you've considered. To develop a bash script that modifies the text file using cat / echo. Or a c++ macro. https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context. https://github.com/root-project/root/pull/9147.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9384
https://github.com/root-project/root/pull/9385:223,availability,error,errors,223,"[candle] Keep wired output for low stat; As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output. of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9385
https://github.com/root-project/root/pull/9385:267,modifiability,scal,scaling,267,"[candle] Keep wired output for low stat; As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output. of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9385
https://github.com/root-project/root/pull/9385:223,performance,error,errors,223,"[candle] Keep wired output for low stat; As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output. of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9385
https://github.com/root-project/root/pull/9385:223,safety,error,errors,223,"[candle] Keep wired output for low stat; As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output. of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9385
https://github.com/root-project/root/pull/9385:208,usability,indicat,indicate,208,"[candle] Keep wired output for low stat; As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output. of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9385
https://github.com/root-project/root/pull/9385:223,usability,error,errors,223,"[candle] Keep wired output for low stat; As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output. of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9385
https://github.com/root-project/root/pull/9386:13,performance,memor,memory,13,[PyROOT] Fix memory leak in iterators; Fixes #9315 . From upstream:. https://bitbucket.org/wlav/cpycppyy/commits/8428544a46d29dad43feb8f85f0b7d4bddf062e0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9386
https://github.com/root-project/root/pull/9386:13,usability,memor,memory,13,[PyROOT] Fix memory leak in iterators; Fixes #9315 . From upstream:. https://bitbucket.org/wlav/cpycppyy/commits/8428544a46d29dad43feb8f85f0b7d4bddf062e0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9386
https://github.com/root-project/root/pull/9387:25,availability,error,error,25,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:71,availability,error,error,71,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:382,availability,error,error,382,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1032,availability,error,error,1032,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1107,availability,failur,failure,1107,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1399,availability,error,error,1399,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:271,deployability,build,build,271,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:281,deployability,releas,release,281,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:333,deployability,build,build,333,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:343,deployability,releas,release,343,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:541,deployability,build,build,541,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:551,deployability,releas,release,551,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:752,deployability,build,build,752,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:762,deployability,releas,release,762,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1058,deployability,build,build,1058,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1068,deployability,releas,release,1068,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1107,deployability,fail,failure,1107,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1134,deployability,build,build,1134,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1144,deployability,releas,release,1144,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1215,deployability,build,build,1215,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1225,deployability,releas,release,1225,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1421,deployability,build,build,1421,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1450,deployability,build,build,1450,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1460,deployability,releas,release,1460,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1575,deployability,build,build,1575,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1585,deployability,releas,release,1585,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:678,energy efficiency,Current,Current,678,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:931,energy efficiency,Current,Current,931,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:25,performance,error,error,25,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:71,performance,error,error,71,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:382,performance,error,error,382,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1032,performance,error,error,1032,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1107,performance,failur,failure,1107,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1399,performance,error,error,1399,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1107,reliability,fail,failure,1107,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:25,safety,error,error,25,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:71,safety,error,error,71,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:382,safety,error,error,382,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1032,safety,error,error,1032,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1399,safety,error,error,1399,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:25,usability,error,error,25,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:71,usability,error,error,71,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:256,usability,User,Users,256,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:318,usability,User,Users,318,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:382,usability,error,error,382,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:526,usability,User,Users,526,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:737,usability,User,Users,737,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1018,usability,CUSTOM,CUSTOMBUILD,1018,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1032,usability,error,error,1032,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1043,usability,User,Users,1043,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1119,usability,User,Users,1119,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1200,usability,User,Users,1200,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1308,usability,Visual,Visual,1308,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1399,usability,error,error,1399,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1414,usability,Custom,Custom,1414,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1435,usability,User,Users,1435,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9387:1560,usability,User,Users,1560,"[roofit] Fix compilation error on Win64; Fix the following compilation error on Win64:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9387
https://github.com/root-project/root/pull/9388:171,deployability,updat,updated,171,Fix doxygen warning; # This Pull request:. ## Changes or fixes:. warning: reached end of file while inside a ~~~ block! ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9388
https://github.com/root-project/root/pull/9388:141,safety,test,tested,141,Fix doxygen warning; # This Pull request:. ## Changes or fixes:. warning: reached end of file while inside a ~~~ block! ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9388
https://github.com/root-project/root/pull/9388:171,safety,updat,updated,171,Fix doxygen warning; # This Pull request:. ## Changes or fixes:. warning: reached end of file while inside a ~~~ block! ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9388
https://github.com/root-project/root/pull/9388:171,security,updat,updated,171,Fix doxygen warning; # This Pull request:. ## Changes or fixes:. warning: reached end of file while inside a ~~~ block! ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9388
https://github.com/root-project/root/pull/9388:141,testability,test,tested,141,Fix doxygen warning; # This Pull request:. ## Changes or fixes:. warning: reached end of file while inside a ~~~ block! ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9388
https://github.com/root-project/root/issues/9389:331,availability,error,error,331,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:754,availability,error,error,754,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:837,availability,error,error,837,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:63,deployability,releas,release,63,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:102,deployability,releas,releases,102,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:111,deployability,releas,release-,111,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:250,deployability,build,build,250,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:718,deployability,build,build,718,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:735,deployability,Releas,Release,735,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:765,deployability,build,build,765,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:30,interoperability,platform,platform,30,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:331,performance,error,error,331,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:754,performance,error,error,754,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:837,performance,error,error,837,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:0,reliability,Doe,Does,0,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:331,safety,error,error,331,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:754,safety,error,error,754,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:837,safety,error,error,837,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:10,usability,support,support,10,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:331,usability,error,error,331,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:358,usability,support,support,358,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:415,usability,help,help,415,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:468,usability,Tool,Tools,468,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:474,usability,Command,Command,474,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:638,usability,Visual,Visual,638,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:754,usability,error,error,754,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/issues/9389:837,usability,error,error,837,"Does ROOT support windows x64 platform?; Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot! 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 3. mkdir build_amd64 && cd build_amd64. 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 .. 5. cmake --build . --config Release. Hit below error when build:. F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9389
https://github.com/root-project/root/pull/9390:22,availability,operat,operator,22,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:92,availability,operat,operator,92,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:224,availability,operat,operator,224,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:175,performance,network,network,175,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:183,safety,test,test,183,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:175,security,network,network,175,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9390:183,testability,test,test,183,[TMVA][SOFIE] Add GRU operator; This Pull request replaces #8847 from @axmat adding the GRU operator to TMVA SOFIE. In addition to the original code from Axmat it adds a full network test of a GRU and fix some issues in the operator. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9390
https://github.com/root-project/root/pull/9391:142,usability,document,document,142,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9391:157,usability,visual,visualized,157,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9391:304,usability,command,command,304,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9391:325,usability,visual,visualise,325,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9391:360,usability,command,command,360,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9391:529,usability,document,document,529,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9391:578,usability,document,document,578,"Add the ""Standalone""option for tex output.; The `.tex` file produced when saving canvas as `.tex`, needed to be included in an existing LateX document to be visualized. The new `Standalone` option allows to generate a `.tex` file which can be directly processed by LateX (for example with the `pdflatex` command) in order to visualise it. This is done via the command:. ```. canvas->Print("".tex"", ""Standalone""); . ```. The generated `.tex` file has the form: . ```. \usepackage{tikz}. \usetikzlibrary{patterns,plotmarks}. \begin{document}. <----- here the graphics output. \end{document}. ```. This was requested here: https://github.com/root-project/root/issues/9384.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9391
https://github.com/root-project/root/pull/9392:33,integrability,wrap,wrapper,33,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:180,integrability,interfac,interface,180,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:210,integrability,wrap,wrap,210,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:265,integrability,wrap,wrapper,265,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:482,integrability,wrap,wrapped,482,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:33,interoperability,wrapper,wrapper,33,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:180,interoperability,interfac,interface,180,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:265,interoperability,wrapper,wrapper,265,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:180,modifiability,interfac,interface,180,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:379,performance,memor,memory,379,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1050,performance,memor,memory,1050,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1370,performance,memor,memory,1370,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:361,safety,detect,detect,361,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:942,safety,test,test,942,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1231,safety,test,test,1231,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:361,security,detect,detect,361,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:937,testability,unit,unit,937,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:942,testability,test,test,942,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1231,testability,test,test,1231,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1236,testability,coverag,coverage,1236,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:330,usability,help,helps,330,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:379,usability,memor,memory,379,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1050,usability,memor,memory,1050,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1370,usability,memor,memory,1370,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9392:1393,usability,user,user,1393,"[RF] New `RooFit::Owner` pointer wrapper to flag owning return values; In RooFit, there are many functions that return pointers that are owned. by the caller. We can't change this interface anymore, but we can wrap. the return values transparently in a raw pointer wrapper that is called. a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential. memory leaks. On the Python side, we can tell cppyy to take ownership. of the object if the pointer is wrapped in a owning pointer such as the. `RooFit::Owner`. This is more flexible and convenient than the existing. cppyy way of flagging the CPPOverloads on the Python side with the. `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++. overloads. 2. It's only on the Python side, so if you want to flag these functions. in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in. Python as expected, and that there is no memory leaking when using. functions that return them. As a first example, the `RooFit::Owner` is used in the highly used. function `RooAbsPdf::generate`, so we also get quite some test coverage. from the tutorials. In the future after this initial effort, the remaining RooFit functions. should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9392
https://github.com/root-project/root/pull/9393:159,deployability,version,versions,159,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:286,deployability,updat,updated,286,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:159,integrability,version,versions,159,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:159,modifiability,version,versions,159,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:256,safety,test,tested,256,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:286,safety,updat,updated,286,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:286,security,updat,updated,286,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:28,testability,unit,units,28,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:130,testability,unit,units,130,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:256,testability,test,tested,256,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9393:218,usability,User,User,218,"Advertise change of default units affecting material properties.; # This Pull request:. Advertises the change of default geometry units affecting several ROOT versions, and how to address this. . ## Changes or fixes:. User information. ## Checklist:. - [] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #9383.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9393
https://github.com/root-project/root/pull/9394:376,deployability,instal,installed,376,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:552,deployability,Instal,Installed,552,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:899,deployability,instal,installing,899,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:1090,deployability,instal,installed,1090,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:625,integrability,sub,subdirectory,625,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:1183,integrability,compon,components,1183,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:431,interoperability,distribut,distributions,431,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:1183,interoperability,compon,components,1183,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:1183,modifiability,compon,components,1183,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:1163,performance,time,time,1163,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:717,reliability,doe,doesn,717,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:450,safety,prevent,prevent,450,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:893,safety,avoid,avoid,893,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:450,security,preven,prevent,450,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/pull/9394:120,usability,help,helper,120,"[RF] Move RooFit headers not starting with `Roo` in RooFit directory; In the v6.26 development cycle cycle, some RooFit helper header files. whose names don't start with the `Roo` prefix sneaked into the. RooFitCore library. These headers have the overly generic names. `Floats.h` and `UniqueId.h`, which calls for trouble in environments. where the ROOT headers are directly installed in the main system include. path (most Linux distributions). To prevent any possible issues, this commit proposes and follows new. conventions for RooFit headers:. * Installed RooFit headers must start with `Roo*` or must be located. in a subdirectory starting with `Roo*` (e.g. RooFit or RooStats). * Similarly, if the class name doesn't start with Roo, it has to go in. a `Roo*` namespace (usually `RooFit`). * Free functions always need to go in this namespace. * For implmentation details that we can't avoid installing, we can use. a `Roo*::Detail` namespace like we have with `ROOT::Detail` (same. with `Experimental`). We should also keep in mind what we established in PR #9078:. * `inc/` is for installed headers. * `res/` is for headers that are only used at compile time of other. ROOT components. * Headers only used within a library go to `src/`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9394
https://github.com/root-project/root/issues/9395:376,modifiability,variab,variable,376,"Why there is not a TFormula::Eval(Double_t* values) but I have to call TFormula::EvalPar()?; Hi, . I was trying to evaluate a N-dimensional function but found that the `TFormula::Eval()` method only accept `Double_t x, y, z, t` as arguments, and later passes them to a private method `DoEval()` as an array. I was wondering why there is not a `Eval()` methods which require a variable dimension array. . Its implementation would be quite easy, for example could be:. ```. Double_t TFormula::Eval(Double_t *x) const. {. return EvalPar(x, nullptr);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/issues/9395:285,reliability,DoE,DoEval,285,"Why there is not a TFormula::Eval(Double_t* values) but I have to call TFormula::EvalPar()?; Hi, . I was trying to evaluate a N-dimensional function but found that the `TFormula::Eval()` method only accept `Double_t x, y, z, t` as arguments, and later passes them to a private method `DoEval()` as an array. I was wondering why there is not a `Eval()` methods which require a variable dimension array. . Its implementation would be quite easy, for example could be:. ```. Double_t TFormula::Eval(Double_t *x) const. {. return EvalPar(x, nullptr);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9395
https://github.com/root-project/root/pull/9398:7,availability,Restor,Restore,7,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:64,deployability,patch,patch,64,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:7,reliability,Restor,Restore,7,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:64,safety,patch,patch,64,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:97,safety,review,reviews,97,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:138,safety,review,reviews,138,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:64,security,patch,patch,64,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:97,testability,review,reviews,97,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:138,testability,review,reviews,138,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9398:27,usability,support,support,27,[llvm] Restore the ppc64le support that we lost in llvm8.; This patch is backported from https://reviews.llvm.org/D91983. also in https://reviews.llvm.org/D94183. For more discussion see https://github.com/numba/numba/issues/4026. Fixes root-project/root#8072 and root-project/root#9297.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9398
https://github.com/root-project/root/pull/9399:1259,availability,state,state,1259,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:716,deployability,build,build,716,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:755,deployability,depend,dependent,755,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1435,deployability,updat,updated,1435,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:755,integrability,depend,dependent,755,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1259,integrability,state,state,1259,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1363,integrability,discover,discovering,1363,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1363,interoperability,discover,discovering,1363,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:755,modifiability,depend,dependent,755,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:755,safety,depend,dependent,755,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:824,safety,test,tests,824,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1405,safety,test,tested,1405,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1435,safety,updat,updated,1435,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1435,security,updat,updated,1435,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:39,testability,context,context,39,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:755,testability,depend,dependent,755,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:824,testability,test,tests,824,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1405,testability,test,tested,1405,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:26,usability,close,close,26,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:722,usability,command,command,722,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9399:1363,usability,discov,discovering,1363,"[RF] MultiProcess bugfix: close ZeroMQ context correctly; # This Pull request:. Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:. As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9399
https://github.com/root-project/root/pull/9400:534,energy efficiency,Draw,Draw,534,"Implement ChangeLabel with SetMoreLogLabels; In case ""MoreLogLabels"" was ON `ChangeLabel` didn't work. This problem was reported by this forum post:. https://root-forum.cern.ch/t/setmoreloglabels-changelabel-not-working/47961. A easy small reproducer is:. ```. {. auto c = new TCanvas();. c->SetLogx();. auto h = new TH1F(""h"",""h"",100,1.,10);. TAxis* a = h->GetXaxis();. a->SetMoreLogLabels();. a->ChangeLabel(1,-1,-1,-1,-1,-1,""#1 Changed"");. a->ChangeLabel(3,-1,-1,-1,-1,-1,""#3 Changed"");. a->ChangeLabel(10,-1,-1,-1,kRed,-1,"""");. h->Draw();. } . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9400
https://github.com/root-project/root/pull/9401:723,deployability,updat,updated,723,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:302,safety,Test,Test,302,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:693,safety,test,tested,693,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:723,safety,updat,updated,723,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:723,security,updat,updated,723,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:109,testability,unit,units,109,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:302,testability,Test,Test,302,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9401:693,testability,test,tested,693,"Fix computation of radiation lengh in TGeoMaterial; # This Pull request:. ## Changes or fixes:. When default units (TGeoManager::kG4Units) are used, the computed radiation length in TGeoMaterial is smaller by factor 100 than the value computed in Geant3. The problem was found in the ALICE O2 project. Test code:. ```c++. auto matLead = new TGeoMaterial(""Lead"", a = 207.19, z = 82., density = 11.35);. cout << ""matLead->GetRadLen(): "" << matLead->GetRadLen() << endl;. ``` . Output:. ```. matLead->GetRadLen(): 0.561683 # cm, agrees with value computed by G3. matLead->GetRadLen(): 0.0561683 # mm, before this fix. matLead->GetRadLen(): 5.61683 # mm, after this fix. ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9401
https://github.com/root-project/root/pull/9402:274,deployability,contain,contains,274,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:430,deployability,contain,contained,430,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:592,deployability,updat,updated,592,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:344,interoperability,prox,proxy,344,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:292,modifiability,variab,variables,292,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:350,modifiability,variab,variables,350,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:401,modifiability,variab,variables,401,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:125,safety,Test,TestStatistics,125,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:562,safety,test,tested,562,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:592,safety,updat,updated,592,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:592,security,updat,updated,592,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:125,testability,Test,TestStatistics,125,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:562,testability,test,tested,562,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9402:521,usability,help,help,521,Fixes evaluate() function in rooRealL; # This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9402
https://github.com/root-project/root/pull/9403:169,availability,operat,operations,169,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:354,availability,operat,operations,354,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:210,energy efficiency,model,models,210,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:394,energy efficiency,model,models,394,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:904,energy efficiency,draw,drawbacks,904,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1081,energy efficiency,draw,drawbacks,1081," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1247,energy efficiency,profil,profile,1247," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1450,energy efficiency,CPU,CPU,1450," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1640,energy efficiency,profil,profile,1640," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1845,energy efficiency,CPU,CPU,1845," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:126,integrability,interfac,interface,126,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:311,integrability,interfac,interface,311,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:549,integrability,Sub,Subsequently,549,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:126,interoperability,interfac,interface,126,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:311,interoperability,interfac,interface,311,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:126,modifiability,interfac,interface,126,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:311,modifiability,interfac,interface,311,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:941,performance,memor,memory,941,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1119,performance,memor,memory,1119," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1247,performance,profil,profile,1247," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1445,performance,Time,Time,1445," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1450,performance,CPU,CPU,1450," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1640,performance,profil,profile,1640," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1840,performance,Time,Time,1840," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1845,performance,CPU,CPU,1845," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:740,safety,test,test,740,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:210,security,model,models,210,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:394,security,model,models,394,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:735,testability,unit,unit,735,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:740,testability,test,test,740,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:717,usability,document,documentation,717,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:941,usability,memor,memory,941,"[RF] Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1007,usability,user,user,1007," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1119,usability,memor,memory,1119," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1186,usability,user,user,1186," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1309,usability,navigat,navigator,1309," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9403:1702,usability,navigat,navigator,1702," Faster name pointer lookup for `RooSTLRefCountList`; The `RooSTLRefCountList` is used in the `RooAbsArg` client server . interface, which is why speeding up lookup operations is very important . for large models. . . With this commit: . . The `RooSTLRefCountList` is used in the `RooAbsArg` client server. interface, which is why speeding up lookup operations is very important. for large models. With this commit:. * A `RooSTLRefCountList` has an additinal member that tracks the. ordering of the elements by `RooAbsArg::namePtr()` address. * Subsequently, looking up elements by name pointer is much faster. * Care was taken to handle the case where elements already in the. collection get renamed (see inline documentation and unit test). * The `RooSTLRefCountList` can notice if it was read from IO and. determine the ordering before doing any lookups. As far as I can tell, this change has now drawbacks other than some. increased memory usage. The order of the elements is still the same, so. no user code should be affected. . As far as I can tell, this change has now drawbacks other than some . increased memory usage. The order of the elements is still the same, so . no user code should be affected. Benchmark before this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 14.1 s 14.0 s 1. ```. Benchmark after this commit ([profile](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/VHbb-STXS_mu__createNLL_2)):. ```. ---------------------------------------------------------------------------------. Benchmark Time CPU Iterations. ---------------------------------------------------------------------------------. VHbb-STXS_mu__createNLL/0/iterations:1 5.13 s 5.13 s 1. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9403
https://github.com/root-project/root/pull/9404:238,availability,reliab,reliable,238,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:525,deployability,stack,stackoverflow,525,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:675,deployability,Patch,Patch,675,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:209,interoperability,share,shared,209,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:491,interoperability,share,shared,491,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:584,interoperability,share,shared-object-instead-of-an-executable-binary-according-to,584,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:238,reliability,reliab,reliable,238,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:566,reliability,doe,does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to,566,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:675,safety,Patch,Patch,675,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9404:675,security,Patch,Patch,675,[dyld] Do not resolve symbols from executables compiled with -fPIE. ; Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:. ```. if DT_FLAGS_1 dynamic section entry is present. if DF_1_PIE is set in DT_FLAGS_1:. print pie executable. else. print shared object. ```. . See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9404
https://github.com/root-project/root/pull/9405:107,deployability,build,build,107,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:186,deployability,Patch,Patch,186,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:46,performance,time,timeout,46,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:69,performance,time,timeout,69,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:41,safety,test,test,41,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:46,safety,timeout,timeout,46,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:69,safety,timeout,timeout,69,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:186,safety,Patch,Patch,186,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:186,security,Patch,Patch,186,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/pull/9405:41,testability,test,test,41,[cmake] Increase the internet connection test timeout.; The 5 second timeout was not enough when trying to build ROOT in docker. Possibly the issue was due to lag on the server as well. Patch by Alexander Penev (@alexander-penev).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9405
https://github.com/root-project/root/issues/9406:556,availability,slo,slope,556,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:563,availability,slo,slope,563,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:572,availability,slo,slope,572,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:661,availability,slo,slope,661,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:926,availability,RELIAB,RELIABILITY,926,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3104,availability,ERROR,ERROR,3104,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:93,deployability,observ,observed,93,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3210,energy efficiency,reduc,reducing,3210,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3243,energy efficiency,CPU,CPU,3243,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3247,energy efficiency,core,cores,3247,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:40,integrability,Batch,BatchMode,40,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:171,integrability,event,events,171,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:220,integrability,Batch,BatchMode,220,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:763,integrability,Batch,BatchMode,763,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:829,integrability,event,events,829,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3122,integrability,messag,message,3122,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3193,integrability,Batch,BatchMode,3193,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3362,integrability,Batch,BatchMode,3362,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3122,interoperability,messag,message,3122,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:40,performance,Batch,BatchMode,40,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:220,performance,Batch,BatchMode,220,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:763,performance,Batch,BatchMode,763,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3104,performance,ERROR,ERROR,3104,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3171,performance,time,time,3171,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3193,performance,Batch,BatchMode,3193,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3243,performance,CPU,CPU,3243,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3362,performance,Batch,BatchMode,3362,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:556,reliability,slo,slope,556,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:563,reliability,slo,slope,563,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:572,reliability,slo,slope,572,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:661,reliability,slo,slope,661,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:926,reliability,RELIAB,RELIABILITY,926,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:926,safety,RELIABIL,RELIABILITY,926,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3104,safety,ERROR,ERROR,3104,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3263,safety,avoid,avoid,3263,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3326,safety,compl,complex,3326,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3515,safety,avoid,avoid,3515,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3326,security,compl,complex,3326,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:93,testability,observ,observed,93,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:329,testability,simul,simultaneous,329,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3334,testability,simul,simultanous,3334,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:393,usability,minim,minimal,393,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:998,usability,USER,USER,998,"[RF] Low-statistics fits terminate with BatchMode and NumCPU arguments; ROOT 6.24/06. I have observed in multiple circumstances that the fits of very small datasets (< 50 events) occasionally terminate if the arguments `BatchMode(1)` and `NumCPU(X)` are used, especially if X is a sufficiently large number. This also happens in simultaneous fits where at least one dataset is very small. . A minimal reproducible example is the following:. ```. void test_crash(){. using namespace RooFit;. Int_t to_gen = 10;. RooRealVar m(""m"",""m"",5000,5500);. RooRealVar slope(""slope"", ""slope"", -0.001, -1., 1.);. RooExponential* exp_pdf = new RooExponential(""exp"", ""exp"", m, slope);. RooDataSet* ds = (RooDataSet*) exp_pdf->generate(RooArgSet(m), to_gen);. exp_pdf->fitTo(*ds, BatchMode(1), NumCPU(20));. }. ```. Here I fit to a dataset of 10 events and it causes the following . ```. ... NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 6 **MIGRAD 500 1. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. std::length_error what(): '. what(): what(): vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/issues/9406:3104,usability,ERROR,ERROR,3104,"rt. terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '. what(): what(): vector::_M_fill_insert. vector::_M_fill_insert. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. '. '. what(): vector::_M_fill_insert what(): . vector::_M_fill_insert. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. what(): vector::_M_fill_insert. terminate called after throwing an instance of 'std::length_error'. terminate called after throwing an instance of ' what(): vector::_M_fill_insert. std::length_error'. terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''. terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error. '. std::length_error'. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. what(): vector::_M_fill_insert. RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8. ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even without any NumCPU request. . I believe this can be handled by RooFit in a more careful manner to avoid such terminates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9406
https://github.com/root-project/root/pull/9407:87,availability,error,erroring,87,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:43,energy efficiency,model,model,43,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:87,performance,error,erroring,87,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:87,safety,error,erroring,87,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:43,security,model,model,43,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:108,testability,assert,assert,108,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9407:87,usability,error,erroring,87,Actually request the use of the large code model for ppc64/ppc64le [v6.24]; Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9407
https://github.com/root-project/root/pull/9408:50,security,session,session,50,macOS: handle the case of GUI without interactive session [v6.24]; Backport of PR #9314,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9408
https://github.com/root-project/root/pull/9408:38,usability,interact,interactive,38,macOS: handle the case of GUI without interactive session [v6.24]; Backport of PR #9314,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9408
https://github.com/root-project/root/pull/9409:514,deployability,updat,updated,514,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:269,integrability,pub,public,269,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:484,safety,test,tested,484,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:514,safety,updat,updated,514,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:157,security,access,accessible,157,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:318,security,expos,expose,318,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:514,security,updat,updated,514,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:484,testability,test,tested,484,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:152,usability,user,user-accessible,152,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9409:351,usability,user,users,351,"[RF] add MultiProcess::Config for setting number of workers; # This Pull request:. ## Changes or fixes:. This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9409
https://github.com/root-project/root/pull/9410:11,deployability,fail,failed,11,"SaveAs png failed in batch mode with two canvases, one divided.; This PR fixes this Jira report:. https://sft.its.cern.ch/jira/browse/ROOT-7969. In `TCanvas::SetCanvasSize`, `ResizePad();` acts on `gPad`. This PR makes sure . `gPad` is properly defined before calling `ResizePad();`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9410
https://github.com/root-project/root/pull/9410:21,integrability,batch,batch,21,"SaveAs png failed in batch mode with two canvases, one divided.; This PR fixes this Jira report:. https://sft.its.cern.ch/jira/browse/ROOT-7969. In `TCanvas::SetCanvasSize`, `ResizePad();` acts on `gPad`. This PR makes sure . `gPad` is properly defined before calling `ResizePad();`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9410
https://github.com/root-project/root/pull/9410:21,performance,batch,batch,21,"SaveAs png failed in batch mode with two canvases, one divided.; This PR fixes this Jira report:. https://sft.its.cern.ch/jira/browse/ROOT-7969. In `TCanvas::SetCanvasSize`, `ResizePad();` acts on `gPad`. This PR makes sure . `gPad` is properly defined before calling `ResizePad();`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9410
https://github.com/root-project/root/pull/9410:11,reliability,fail,failed,11,"SaveAs png failed in batch mode with two canvases, one divided.; This PR fixes this Jira report:. https://sft.its.cern.ch/jira/browse/ROOT-7969. In `TCanvas::SetCanvasSize`, `ResizePad();` acts on `gPad`. This PR makes sure . `gPad` is properly defined before calling `ResizePad();`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9410
https://github.com/root-project/root/pull/9411:258,deployability,Build,Build,258,[RF] Speed improvements; - Two important things: Dramatically speed up hash-assisted finds in `RooArgSet`. - Reduce `dynamic_cast` in RooAbsArg::setProxyNormSet. Here are some timings on a random machine with a dummy ATLAS Higgs->gamma gamma workspace:. | | Build | Fit |. | ------------------------------ | ----- | ---- |. | HGam old | 3:33 | 3:30 |. | HGam new | 0:40 | 2:12 |,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9411
https://github.com/root-project/root/pull/9411:109,energy efficiency,Reduc,Reduce,109,[RF] Speed improvements; - Two important things: Dramatically speed up hash-assisted finds in `RooArgSet`. - Reduce `dynamic_cast` in RooAbsArg::setProxyNormSet. Here are some timings on a random machine with a dummy ATLAS Higgs->gamma gamma workspace:. | | Build | Fit |. | ------------------------------ | ----- | ---- |. | HGam old | 3:33 | 3:30 |. | HGam new | 0:40 | 2:12 |,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9411
https://github.com/root-project/root/pull/9411:71,security,hash,hash-assisted,71,[RF] Speed improvements; - Two important things: Dramatically speed up hash-assisted finds in `RooArgSet`. - Reduce `dynamic_cast` in RooAbsArg::setProxyNormSet. Here are some timings on a random machine with a dummy ATLAS Higgs->gamma gamma workspace:. | | Build | Fit |. | ------------------------------ | ----- | ---- |. | HGam old | 3:33 | 3:30 |. | HGam new | 0:40 | 2:12 |,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9411
https://github.com/root-project/root/pull/9412:149,deployability,observ,observables,149,[RF] RooFit speed improvements; - Remove `dynamic_cast` for cross casts in a multiple inheritance setting. - Reduce the size of datasets by removing observables that are not in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9412
https://github.com/root-project/root/pull/9412:109,energy efficiency,Reduc,Reduce,109,[RF] RooFit speed improvements; - Remove `dynamic_cast` for cross casts in a multiple inheritance setting. - Reduce the size of datasets by removing observables that are not in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9412
https://github.com/root-project/root/pull/9412:86,modifiability,inherit,inheritance,86,[RF] RooFit speed improvements; - Remove `dynamic_cast` for cross casts in a multiple inheritance setting. - Reduce the size of datasets by removing observables that are not in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9412
https://github.com/root-project/root/pull/9412:149,testability,observ,observables,149,[RF] RooFit speed improvements; - Remove `dynamic_cast` for cross casts in a multiple inheritance setting. - Reduce the size of datasets by removing observables that are not in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9412
https://github.com/root-project/root/pull/9413:423,modifiability,paramet,parameter,423,"[ntuple] RNTupleSerialize: do not use `abs()` in feature flags deserialization; Follow-up from PR #8897. It seems that system headers for Clang 10.0.1 in EL 8.3 x86_64 do not provide an overload for `abs(std::uint64_t)`, triggering the diagnostic below. Using `(f < 0) ? -f : f` instead. ```. RNTupleSerialize.cxx:734:26: warning: absolute value function 'abs' given an argument of type 'std::int64_t' (aka 'long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]. flags.emplace_back(abs(f));. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:236,reliability,diagno,diagnostic,236,"[ntuple] RNTupleSerialize: do not use `abs()` in feature flags deserialization; Follow-up from PR #8897. It seems that system headers for Clang 10.0.1 in EL 8.3 x86_64 do not provide an overload for `abs(std::uint64_t)`, triggering the diagnostic below. Using `(f < 0) ? -f : f` instead. ```. RNTupleSerialize.cxx:734:26: warning: absolute value function 'abs' given an argument of type 'std::int64_t' (aka 'long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]. flags.emplace_back(abs(f));. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:558,safety,test,tested,558,"[ntuple] RNTupleSerialize: do not use `abs()` in feature flags deserialization; Follow-up from PR #8897. It seems that system headers for Clang 10.0.1 in EL 8.3 x86_64 do not provide an overload for `abs(std::uint64_t)`, triggering the diagnostic below. Using `(f < 0) ? -f : f` instead. ```. RNTupleSerialize.cxx:734:26: warning: absolute value function 'abs' given an argument of type 'std::int64_t' (aka 'long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]. flags.emplace_back(abs(f));. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:236,testability,diagno,diagnostic,236,"[ntuple] RNTupleSerialize: do not use `abs()` in feature flags deserialization; Follow-up from PR #8897. It seems that system headers for Clang 10.0.1 in EL 8.3 x86_64 do not provide an overload for `abs(std::uint64_t)`, triggering the diagnostic below. Using `(f < 0) ? -f : f` instead. ```. RNTupleSerialize.cxx:734:26: warning: absolute value function 'abs' given an argument of type 'std::int64_t' (aka 'long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]. flags.emplace_back(abs(f));. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9413:558,testability,test,tested,558,"[ntuple] RNTupleSerialize: do not use `abs()` in feature flags deserialization; Follow-up from PR #8897. It seems that system headers for Clang 10.0.1 in EL 8.3 x86_64 do not provide an overload for `abs(std::uint64_t)`, triggering the diagnostic below. Using `(f < 0) ? -f : f` instead. ```. RNTupleSerialize.cxx:734:26: warning: absolute value function 'abs' given an argument of type 'std::int64_t' (aka 'long') but has parameter of type 'int' which may cause truncation of value [-Wabsolute-value]. flags.emplace_back(abs(f));. ```. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9413
https://github.com/root-project/root/pull/9414:311,modifiability,paramet,parameters,311,"[RF] Add utility function to reserve memory for addParameters; Calling `addParamaters` for large functions (such as NLL creation or RooMinimizer creation for large workspaces) can cause many reallocations of `params` due to the recursive behaviour. This utility function aims to pre-compute the total number of parameters, so that enough memory is reserved. This is then used in `getParameters` so that the `params` passed to `addParameters` do not need to be resized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9414:37,performance,memor,memory,37,"[RF] Add utility function to reserve memory for addParameters; Calling `addParamaters` for large functions (such as NLL creation or RooMinimizer creation for large workspaces) can cause many reallocations of `params` due to the recursive behaviour. This utility function aims to pre-compute the total number of parameters, so that enough memory is reserved. This is then used in `getParameters` so that the `params` passed to `addParameters` do not need to be resized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9414:338,performance,memor,memory,338,"[RF] Add utility function to reserve memory for addParameters; Calling `addParamaters` for large functions (such as NLL creation or RooMinimizer creation for large workspaces) can cause many reallocations of `params` due to the recursive behaviour. This utility function aims to pre-compute the total number of parameters, so that enough memory is reserved. This is then used in `getParameters` so that the `params` passed to `addParameters` do not need to be resized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9414:37,usability,memor,memory,37,"[RF] Add utility function to reserve memory for addParameters; Calling `addParamaters` for large functions (such as NLL creation or RooMinimizer creation for large workspaces) can cause many reallocations of `params` due to the recursive behaviour. This utility function aims to pre-compute the total number of parameters, so that enough memory is reserved. This is then used in `getParameters` so that the `params` passed to `addParameters` do not need to be resized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9414:238,usability,behavi,behaviour,238,"[RF] Add utility function to reserve memory for addParameters; Calling `addParamaters` for large functions (such as NLL creation or RooMinimizer creation for large workspaces) can cause many reallocations of `params` due to the recursive behaviour. This utility function aims to pre-compute the total number of parameters, so that enough memory is reserved. This is then used in `getParameters` so that the `params` passed to `addParameters` do not need to be resized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9414:338,usability,memor,memory,338,"[RF] Add utility function to reserve memory for addParameters; Calling `addParamaters` for large functions (such as NLL creation or RooMinimizer creation for large workspaces) can cause many reallocations of `params` due to the recursive behaviour. This utility function aims to pre-compute the total number of parameters, so that enough memory is reserved. This is then used in `getParameters` so that the `params` passed to `addParameters` do not need to be resized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9414
https://github.com/root-project/root/pull/9415:82,availability,failur,failures,82,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:82,deployability,fail,failures,82,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:82,performance,failur,failures,82,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:82,reliability,fail,failures,82,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:40,safety,test,tests,40,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:141,safety,test,tests,141,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:40,testability,test,tests,40,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9415:141,testability,test,tests,141,Give more unique filenames in entrylist tests; This should hopefully fix sporadic failures happening when deleting the files create in these tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9415
https://github.com/root-project/root/pull/9417:27,deployability,contain,containsInstance,27,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:180,deployability,contain,containsInstance,180,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:0,energy efficiency,Optim,Optimize,0,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:170,energy efficiency,optim,optimize,170,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:270,energy efficiency,reduc,reduces,270,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:391,energy efficiency,measur,measured,391,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:235,modifiability,paramet,parameter,235,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:0,performance,Optimiz,Optimize,0,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:170,performance,optimiz,optimize,170,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:89,security,hash,hash-assisted,89,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:357,security,sign,significant,357,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9417:79,usability,efficien,efficient,79,"Optimize RooAbsCollection::containsInstance for RooArgSet; Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9417
https://github.com/root-project/root/pull/9418:109,availability,state,states,109,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:109,integrability,state,states,109,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:99,interoperability,format,format,99,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:570,interoperability,format,format,570,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:649,interoperability,specif,specifications,649,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:668,interoperability,specif,specification,668,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:810,interoperability,specif,specify,810,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:855,interoperability,specif,specific,855,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:44,safety,compl,complement,44,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:429,safety,avoid,avoids,429,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:453,safety,compl,complement,453,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:756,safety,compl,complement,756,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:958,safety,test,tested,958,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:44,security,compl,complement,44,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:453,security,compl,complement,453,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:756,security,compl,complement,756,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:958,testability,test,tested,958,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9418:203,usability,indicat,indicates,203,"[ntuple] RNTupleSerialize: do not use two's complement to encode feature flags; The RNTuple binary format v1 states that feature flags bitmap is encoded as a sequence of 64-bit integers in which the MSb indicates that another 64-bit block follows. If more than one 64-bit integer is serialized, the MSb of all but the last integer should be `1` and the rest of the bits should preserve their original meaning. Therefore, this PR avoids the use of two's complement in this case in favour of manually setting the MSb. According to my interpretation of the [RNTuple binary format v1](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) specification, this is the only case in which this happens. All the other uses of two's complement are correct, e.g. in frames or locators we specify that negative sizes have a different/specific meaning. ## Changes or fixes:. - Fix feature flags bitmap serialization. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9418
https://github.com/root-project/root/pull/9419:177,deployability,contain,contains,177,"[RF] Better implementation of RooAbsCollection::remove(RooAbsCollection); Instead of N passes of `RooAbsCollection::remove(RooAbsArg)`, do single pass over the `_list` and use `contains`. That algorithm is much faster when the collection to remove is large and therefore has the hash-assisted find.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9419
https://github.com/root-project/root/pull/9419:279,security,hash,hash-assisted,279,"[RF] Better implementation of RooAbsCollection::remove(RooAbsCollection); Instead of N passes of `RooAbsCollection::remove(RooAbsArg)`, do single pass over the `_list` and use `contains`. That algorithm is much faster when the collection to remove is large and therefore has the hash-assisted find.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9419
https://github.com/root-project/root/pull/9420:19,integrability,interfac,interface,19,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/pull/9420:36,integrability,batch,batch,36,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/pull/9420:215,integrability,messag,messages,215,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/pull/9420:19,interoperability,interfac,interface,19,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/pull/9420:215,interoperability,messag,messages,215,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/pull/9420:19,modifiability,interfac,interface,19,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/pull/9420:36,performance,batch,batch,36,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`; This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9420
https://github.com/root-project/root/issues/9421:947,interoperability,standard,standard,947,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:415,modifiability,reu,reused,415,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:21,reliability,doe,does,21,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:37,security,iso,isotopes,37,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:105,security,iso,isotope,105,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:225,security,iso,isotope,225,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:355,security,iso,isotopes,355,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:691,security,iso,isotope,691,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9421:1084,security,iso,isotope,1084,"GDML geometry import does not handle isotopes properly (6.24.6); GDML files exported from Geant4 include isotope information with correct abundances where appropriate. When such a file is imported by TGeoManager::Import, the isotope information is not properly associated with the elements in question. The problem seems to arise due to the attachment of isotopes being skipped when one of the default elements is ""reused"":. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1129. https://github.com/root-project/root/blob/dbfc076925ca25cee3033c795150e8f0e8c2d5f1/geom/gdml/src/TGDMLParse.cxx#L1192. When a default element with isotope information in the GDML is found, it should be checked whether it has Nisotopes() == 0, and if so, the loop ""for (fractions f = ..."" should run. The attached GDML file exhibits the issue when imported. There are a few elements in the file with non-standard names (e.g. ""Lead_elm"") which due to the name not being matched were created as ""new"" elements, and only these have the correct isotope information. [FaserNu2.gdml.gz](https://github.com/root-project/root/files/7698415/FaserNu2.gdml.gz).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9421
https://github.com/root-project/root/issues/9422:692,deployability,fail,fail,692,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1054,deployability,stack,stackoverflow,1054,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1146,deployability,stack,stackoverflow,1146,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:523,energy efficiency,current,current,523,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:496,interoperability,compatib,compatibility,496,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:692,reliability,fail,fail,692,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:1188,reliability,doe,does-it-mean-to-odr-use-something,1188,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:961,testability,context,context,961,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:990,testability,context,context,990,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/issues/9422:600,usability,support,support,600,"`undefined reference to 'TChain::kBigNumber'` when ROOT is built without C++17; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT seems to claim (some?) C++14 compatibility. However the current use of `static constexpr` member values are missing external linking support. ### To Reproduce. ```c++. std::vector<int> v;. v.push_back(TChain::kBigNumber); // fail. v.push_back(1 + TChain::kBigNumber); // fine. ```. Also can play with a toy example in https://godbolt.org/z/frn4e8KPd. ### Setup. Seen in production with ROOT 6.16 + GCC 4.8.5, but can be also demonstrated with modern GCC running with -std=c++14. ### Additional context. <!--. Add any other context about the problem here. -->. See references:. - https://stackoverflow.com/questions/8016780/undefined-reference-to-static-constexpr-char. - https://stackoverflow.com/questions/19630570/what-does-it-mean-to-odr-use-something",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9422
https://github.com/root-project/root/pull/9423:26,energy efficiency,optim,optimization,26,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:62,energy efficiency,optim,optimizations,62,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:214,energy efficiency,model,models,214,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:42,integrability,Batch,BatchMode,42,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:26,performance,optimiz,optimization,26,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:42,performance,Batch,BatchMode,42,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:62,performance,optimiz,optimizations,62,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:149,performance,time,time,149,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/pull/9423:214,security,model,models,214,"[RF] Implement binned fit optimization in BatchMode and other optimizations; Before, this was done by recursing throught the computation graph each. time a node was evaluated, which was way too expensive for large models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9423
https://github.com/root-project/root/issues/9424:260,availability,error,errors,260,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:294,availability,avail,available,294,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5201,availability,error,error,5201,"-std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5337,availability,Sla,Slashes,5337,"lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5573,availability,error,error,5573,"ot/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5681,availability,Sla,Slashes,5681,"/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5916,availability,error,error,5916,"ang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6167,availability,error,error,6167,"ang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6769,availability,Sla,Slashes,6769,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7009,availability,error,error,7009,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:10,deployability,fail,failed,10,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:20,deployability,build,build,20,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:92,deployability,build,build,92,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:210,deployability,build,build,210,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:254,deployability,build,build,254,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:281,deployability,build,build,281,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:287,deployability,log,log,287,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:342,deployability,artifact,artifacts,342,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,deployability,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:443,deployability,log,log,443,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:913,deployability,BUILD,BUILD,913,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1111,deployability,BUILD,BUILD,1111,le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1544,deployability,BUILD,BUILD,1544,``. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2476,deployability,BUILD,BUILD,2476,cratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2994,deployability,BUILD,BUILD,2994,verloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3192,deployability,BUILD,BUILD,3192,bj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3625,deployability,BUILD,BUILD,3625,40] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4545,deployability,BUILD,BUILD,4545,"include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4752,deployability,BUILD,BUILD,4752,"BANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5053,deployability,BUILD,BUILD,5053,"ctions -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5425,deployability,BUILD,BUILD,5425,"ib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5768,deployability,BUILD,BUILD,5768,"gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Sl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6019,deployability,BUILD,BUILD,6019,"e/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6326,deployability,BUILD,BUILD,6326,"CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | whi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6539,deployability,BUILD,BUILD,6539,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6861,deployability,BUILD,BUILD,6861,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7146,deployability,BUILD,BUILD,7146,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,integrability,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7346,integrability,Buffer,BufferEnd,7346,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,interoperability,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1837,interoperability,semant,semantic-interposition,1837,cratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FO,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3918,interoperability,semant,semantic-interposition,3918,cratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,modifiability,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:260,performance,error,errors,260,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1907,performance,time,time,1907,Dir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tool,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3988,performance,time,time,3988,"Dir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5201,performance,error,error,5201,"-std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5573,performance,error,error,5573,"ot/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5916,performance,error,error,5916,"ang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6167,performance,error,error,6167,"ang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7009,performance,error,error,7009,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:10,reliability,fail,failed,10,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:294,reliability,availab,available,294,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,reliability,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5337,reliability,Sla,Slashes,5337,"lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5681,reliability,Sla,Slashes,5681,"/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6769,reliability,Sla,Slashes,6769,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:260,safety,error,errors,260,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:287,safety,log,log,287,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:294,safety,avail,available,294,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:443,safety,log,log,443,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:599,safety,test,tests,599,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:605,safety,test,testBuildDir,605,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:894,safety,test,tests,894,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:900,safety,test,testBuildDir,900,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1092,safety,test,tests,1092,ld issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1098,safety,test,testBuildDir,1098, for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1333,safety,test,tests,1333,nkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llv,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1339,safety,test,testBuildDir,1339,ifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/too,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1525,safety,test,tests,1525,omment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5db,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1531,safety,test,testBuildDir,1531,2272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2102,safety,except,exceptions,2102,Dir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tool,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2457,safety,test,tests,2457,vm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2463,safety,test,testBuildDir,2463,clude -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2680,safety,test,tests,2680,diagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2686,safety,test,testBuildDir,2686,cs-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2975,safety,test,tests,2975,ons -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -We,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2981,safety,test,testBuildDir,2981,common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3173,safety,test,tests,3173,ib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3179,safety,test,testBuildDir,3179,akeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3414,safety,test,tests,3414,/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3420,safety,test,testBuildDir,3420,/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3606,safety,test,tests,3606,ching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3612,safety,test,testBuildDir,3612,. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4183,safety,except,exceptions,4183,"Dir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4526,safety,test,tests,4526,"terpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4532,safety,test,testBuildDir,4532,"/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4733,safety,test,tests,4733,"clude -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4739,safety,test,testBuildDir,4739,"_ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5034,safety,test,tests,5034,"-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5040,safety,test,testBuildDir,5040," -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5201,safety,error,error,5201,"-std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5406,safety,test,tests,5406,"m/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5412,safety,test,testBuildDir,5412,"ls/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5573,safety,error,error,5573,"ot/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5749,safety,test,tests,5749,"BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5755,safety,test,testBuildDir,5755,"7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5916,safety,error,error,5916,"ang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6000,safety,test,tests,6000,"/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:255",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6006,safety,test,testBuildDir,6006,"b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6167,safety,error,error,6167,"ang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6307,safety,test,tests,6307,"tor unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6313,safety,test,testBuildDir,6313,"ned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6520,safety,test,tests,6520,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6526,safety,test,testBuildDir,6526,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6842,safety,test,tests,6842,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6848,safety,test,testBuildDir,6848,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7009,safety,error,error,7009,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7127,safety,test,tests,7127,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7133,safety,test,testBuildDir,7133,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:287,security,log,log,287,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:294,security,availab,available,294,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,security,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:443,security,log,log,443,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4955,security,Token,Token,4955,"y-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5208,security,ISO,ISO,5208,"++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6198,security,token,token,6198,"error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7040,security,token,token,7040,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:287,testability,log,log,287,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:365,testability,integr,integration,365,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:443,testability,log,log,443,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:599,testability,test,tests,599,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:605,testability,test,testBuildDir,605,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:894,testability,test,tests,894,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:900,testability,test,testBuildDir,900,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1092,testability,test,tests,1092,ld issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1098,testability,test,testBuildDir,1098, for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1333,testability,test,tests,1333,nkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llv,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1339,testability,test,testBuildDir,1339,ifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/too,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1525,testability,test,tests,1525,omment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5db,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1531,testability,test,testBuildDir,1531,2272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2457,testability,test,tests,2457,vm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2463,testability,test,testBuildDir,2463,clude -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2680,testability,test,tests,2680,diagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2686,testability,test,testBuildDir,2686,cs-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef9,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2975,testability,test,tests,2975,ons -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -We,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2981,testability,test,testBuildDir,2981,common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3173,testability,test,tests,3173,ib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3179,testability,test,testBuildDir,3179,akeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3414,testability,test,tests,3414,/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3420,testability,test,testBuildDir,3420,/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3606,testability,test,tests,3606,ching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3612,testability,test,testBuildDir,3612,. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4526,testability,test,tests,4526,"terpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4532,testability,test,testBuildDir,4532,"/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4733,testability,test,tests,4733,"clude -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4739,testability,test,testBuildDir,4739,"_ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5034,testability,test,tests,5034,"-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5040,testability,test,testBuildDir,5040," -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5406,testability,test,tests,5406,"m/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5412,testability,test,testBuildDir,5412,"ls/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5749,testability,test,tests,5749,"BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5755,testability,test,testBuildDir,5755,"7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6000,testability,test,tests,6000,"/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:255",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6006,testability,test,testBuildDir,6006,"b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6307,testability,test,tests,6307,"tor unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6313,testability,test,testBuildDir,6313,"ned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6520,testability,test,tests,6520,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6526,testability,test,testBuildDir,6526,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6842,testability,test,tests,6842,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6848,testability,test,testBuildDir,6848,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7127,testability,test,tests,7127,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7133,testability,test,testBuildDir,7133,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:260,usability,error,errors,260,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:824,usability,tool,tools,824,ROOT 6.24 failed to build with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Wover,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1022,usability,tool,tools,1022, with GCC10 or 11 on ppc64le arch; Thanks for fixing the root 6.24 build issues for ppc64le with gcc9.3 ( https://github.com/root-project/root/issues/9297) but looks like we still have build issues with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-stric,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1220,usability,tool,tools,1220,with GCC 10.3 and 11.2. We get build errors like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:1263,usability,tool,tools,1263, like [a] full build log is available at https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-8678b1/21211/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/log . FYI @vgvassilev @hahnjo. [a] https://github.com/cms-sw/cmsdist/pull/7500#issuecomment-992272002. ```. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2163,usability,tool,tools,2163,d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2252,usability,tool,tools,2252,lvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2342,usability,tool,tools,2342,ildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2585,usability,tool,tools,2585,a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/wo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:2905,usability,tool,tools,2905,ime -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pth,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3103,usability,tool,tools,3103,ptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-stric,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3301,usability,tool,tools,3301,ching.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:3344,usability,tool,tools,3344,/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/PPCaching.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/PPCaching.cpp. [6494/9540] /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/bin/g++ -DGTEST_HAS_RTTI=0 -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iinterpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Le,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4244,usability,tool,tools,4244,"d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/include -Iinterpreter/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type na",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4329,usability,tool,tools,4329,"er/llvm/src/tools/clang/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)Cur",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4415,usability,tool,tools,4415,"s/testBuildDir/slc7_ppc64le_gcc10/external/libxml2/2.9.10-32fb6ccc7a5c1482269c150e9287ec24/include/libxml2 -Iinterpreter/llvm/src/include -I/scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4654,usability,tool,tools,4654,"t/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/include -D__ROOFIT_NOBANNER -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:4861,usability,tool,tools,4861,"l -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++1z -w -fdiagnostics-color -ffunction-sections -fdata-sections -fno-common -Woverloaded-virtual -fno-strict-aliasing -O3 -DNDEBUG -fvisibility=hidden -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5162,usability,tool,tools,5162,"lines-hidden -fno-exceptions -fno-rtti -std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5201,usability,error,error,5201,"-std=c++17 -MD -MT interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -MF interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5534,usability,tool,tools,5534,"uildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5573,usability,error,error,5573,"ot/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5877,usability,tool,tools,5877,"/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:5916,usability,error,error,5916,"ang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6128,usability,tool,tools,6128,"t-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6167,usability,error,error,6167,"ang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6435,usability,tool,tools,6435,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6648,usability,tool,tools,6648,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:6970,usability,tool,tools,6970,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7009,usability,error,error,7009,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9424:7255,usability,tool,tools,7255,"msbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('. 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)). | ^~~~~~~~~~. /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token. 2550 | CurPtr += 16;. | ^. | ). /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2548:13: note: to match this '('. 2548 | while (CurPtr+16 <= BufferEnd &&. | ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9424
https://github.com/root-project/root/issues/9425:537,reliability,doe,doesn,537,"[RF] Figure out how to handle RooArgList with duplicates and hash-assisted find; Indeed, if you have a RooArgList, and two elements with the same name, you might remove the first one from the hash map. The find function will now report that there's no element by that name if the hash map is active. If it's inactive, it will report the element. It's something we have to think about. @guitargeek . This is anyway a bit shaky, since it will only ever find the first element by that name if you ask for this in a list with duplicates. It doesn't seem to be a big issue in RF so far, as nobody seems to use the hash map with ArgLists and duplicates, but it might lead to surprises. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/9419#discussion_r767570121_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9425
https://github.com/root-project/root/issues/9425:61,security,hash,hash-assisted,61,"[RF] Figure out how to handle RooArgList with duplicates and hash-assisted find; Indeed, if you have a RooArgList, and two elements with the same name, you might remove the first one from the hash map. The find function will now report that there's no element by that name if the hash map is active. If it's inactive, it will report the element. It's something we have to think about. @guitargeek . This is anyway a bit shaky, since it will only ever find the first element by that name if you ask for this in a list with duplicates. It doesn't seem to be a big issue in RF so far, as nobody seems to use the hash map with ArgLists and duplicates, but it might lead to surprises. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/9419#discussion_r767570121_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9425
https://github.com/root-project/root/issues/9425:192,security,hash,hash,192,"[RF] Figure out how to handle RooArgList with duplicates and hash-assisted find; Indeed, if you have a RooArgList, and two elements with the same name, you might remove the first one from the hash map. The find function will now report that there's no element by that name if the hash map is active. If it's inactive, it will report the element. It's something we have to think about. @guitargeek . This is anyway a bit shaky, since it will only ever find the first element by that name if you ask for this in a list with duplicates. It doesn't seem to be a big issue in RF so far, as nobody seems to use the hash map with ArgLists and duplicates, but it might lead to surprises. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/9419#discussion_r767570121_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9425
https://github.com/root-project/root/issues/9425:280,security,hash,hash,280,"[RF] Figure out how to handle RooArgList with duplicates and hash-assisted find; Indeed, if you have a RooArgList, and two elements with the same name, you might remove the first one from the hash map. The find function will now report that there's no element by that name if the hash map is active. If it's inactive, it will report the element. It's something we have to think about. @guitargeek . This is anyway a bit shaky, since it will only ever find the first element by that name if you ask for this in a list with duplicates. It doesn't seem to be a big issue in RF so far, as nobody seems to use the hash map with ArgLists and duplicates, but it might lead to surprises. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/9419#discussion_r767570121_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9425
https://github.com/root-project/root/issues/9425:609,security,hash,hash,609,"[RF] Figure out how to handle RooArgList with duplicates and hash-assisted find; Indeed, if you have a RooArgList, and two elements with the same name, you might remove the first one from the hash map. The find function will now report that there's no element by that name if the hash map is active. If it's inactive, it will report the element. It's something we have to think about. @guitargeek . This is anyway a bit shaky, since it will only ever find the first element by that name if you ask for this in a list with duplicates. It doesn't seem to be a big issue in RF so far, as nobody seems to use the hash map with ArgLists and duplicates, but it might lead to surprises. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/9419#discussion_r767570121_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9425
https://github.com/root-project/root/pull/9426:76,deployability,upgrad,upgrade,76,Fix ppc64le compilation with gcc 10 [v6.24]; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129. (cherry picked from commit 01e3a904179f0ebb88edff3783708cf7215cb18b). Closes #9424,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9426
https://github.com/root-project/root/pull/9426:76,modifiability,upgrad,upgrade,76,Fix ppc64le compilation with gcc 10 [v6.24]; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129. (cherry picked from commit 01e3a904179f0ebb88edff3783708cf7215cb18b). Closes #9424,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9426
https://github.com/root-project/root/pull/9426:148,safety,review,reviews,148,Fix ppc64le compilation with gcc 10 [v6.24]; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129. (cherry picked from commit 01e3a904179f0ebb88edff3783708cf7215cb18b). Closes #9424,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9426
https://github.com/root-project/root/pull/9426:148,testability,review,reviews,148,Fix ppc64le compilation with gcc 10 [v6.24]; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129. (cherry picked from commit 01e3a904179f0ebb88edff3783708cf7215cb18b). Closes #9424,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9426
https://github.com/root-project/root/pull/9426:243,usability,Close,Closes,243,Fix ppc64le compilation with gcc 10 [v6.24]; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129. (cherry picked from commit 01e3a904179f0ebb88edff3783708cf7215cb18b). Closes #9424,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9426
https://github.com/root-project/root/issues/9428:596,energy efficiency,Draw,Draw,596,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:607,energy efficiency,Draw,Draw,607,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:791,energy efficiency,Draw,Draw,791,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:17,reliability,doe,does,17,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:44,security,sign,signatures,44,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:871,security,sign,signatures,871,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:26,usability,support,support,26,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:73,usability,document,documentation,73,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:242,usability,support,supported,242,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9428:850,usability,support,supports,850,"[DF] Fill method does not support arbitrary signatures; According to the documentation of RDataFrame's [Fill method](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#ac1b7fe6b530c21f7917d55afe059ae08), the following should be supported:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TApplication.h>. #include <TH2D.h>. struct Jet {. double a, b;. };. struct Boo {. TH2D h{"""", """", 10, 0, 10, 10, 0, 10};. void Fill(const Jet &j) { h.Fill(j.a, j.b); }. void Merge(const std::vector<Boo *> &others) {. TList l;. for (auto *o : others) {. l.Add(&o->h);. h.Merge(&l);. }. }. void Draw() { h.Draw(); }. };. int main() {. TApplication app(""app"", nullptr, nullptr);. auto res = ROOT::RDataFrame(10). .Define(""Jet"", [] { return Jet{1., 2.}; }). .Fill<Jet>(Boo{}, {""Jet""});. res->Draw();. app.Run();. }. ```. Instead, `FillParHelper` only supports `Boo::Fill` signatures that take combinations of doubles and collections thereof. https://github.com/root-project/root/pull/7499 goes in the right direction in generalizing `FillParHelper::Exec` but it still needs a fix to allow this general case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9428
https://github.com/root-project/root/issues/9429:288,availability,cluster,cluster,288,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:374,availability,cluster,cluster,374,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1812,availability,cluster,cluster,1812," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1927,availability,cluster,cluster,1927," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1972,availability,cluster,cluster,1972," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:2047,availability,cluster,cluster,2047," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:288,deployability,cluster,cluster,288,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:349,deployability,fail,fails,349,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:374,deployability,cluster,cluster,374,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:572,deployability,modul,module,572,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1501,deployability,modul,modulo,1501," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1812,deployability,cluster,cluster,1812," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1927,deployability,cluster,cluster,1927," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1935,deployability,scale,scale,1935," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1972,deployability,cluster,cluster,1972," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:2047,deployability,cluster,cluster,2047," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:2332,deployability,instal,install,2332," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1838,energy efficiency,core,cores,1838," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1935,energy efficiency,scale,scale,1935," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:368,integrability,batch,batch,368,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:16,interoperability,distribut,distributed,16,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:166,interoperability,Distribut,Distributed,166,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:314,interoperability,distribut,distributed,314,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:695,interoperability,Prox,Proxy,695,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:842,interoperability,Prox,Proxy,842,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1640,interoperability,Distribut,Distributed,1640," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1669,interoperability,distribut,distributed,1669," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1705,interoperability,Distribut,Distributed,1705," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1728,interoperability,distribut,distributed,1728," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:572,modifiability,modul,module,572,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1501,modifiability,modul,modulo,1501," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1935,modifiability,scal,scale,1935," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:368,performance,batch,batch,368,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1860,performance,memor,memory,1860," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1874,performance,disk,disk,1874," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1935,performance,scale,scale,1935," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:349,reliability,fail,fails,349,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:531,safety,test,testDistRDF,531,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:543,safety,test,testCondor,543,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:572,safety,modul,module,572,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1501,safety,modul,modulo,1501," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:462,testability,Trace,Traceback,462,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:531,testability,test,testDistRDF,531,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:543,testability,test,testCondor,543,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:517,usability,user,user,517,"[DF] Crash with distributed RDataFrame on dask with dask_jobqueue; - [x] Checked for duplicates. ### Describe the bug. I've been trying out the new `RDF.Experimental.Distributed.Dask.RDataFrame` in ROOT master, which is a great addition. It seems to work fine when using a single-machine cluster of workers (`dask.distributed.LocalCluster`), but it fails when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1540,usability,Minim,Minimal,1540," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9429:1860,usability,memor,memory,1860," when using a batch cluster (either `dask_jobqueue.HTCondorCluster` or `dask_jobqueue.SLURMCluster`):. ```. Traceback (most recent call last):. File ""/afs/cern.ch/user/s/swertz/testDistRDF/testCondor.py"", line 81, in <module>. val = prod.GetValue(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 130, in GetValue. self.execute_graph(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Proxy.py"", line 121, in execute_graph. headnode.backend.execute(generator). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Backends/Base.py"", line 134, in execute. ranges = headnode.build_ranges(). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/HeadNode.py"", line 91, in build_ranges. return Ranges.get_balanced_ranges(self.nentries, self.npartitions). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Sat/x86_64-centos7-gcc11-opt/lib/DistRDF/Ranges.py"", line 276, in get_balanced_ranges. partition_size = nentries // npartitions. ZeroDivisionError: integer division or modulo by zero. ```. ### To Reproduce. Minimal example, ran on lxplus/lxbatch:. ```python. import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. distributed = ROOT.RDF.Experimental.Distributed. from dask.distributed import Client, LocalCluster. from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}). cluster.scale(jobs=1). # Works fine with:. # cluster = LocalCluster(n_workers=1, threads_per_worker=1). client = Client(cluster). df = RDataFrame(100, daskclient=client). df = df.Define(""myCol"", ""10""). prod = df.Mean(""myCol""). val = prod.GetValue(). print(f""Value: {val}""). ```. ### Setup. - ROOT from LCG dev3: `/cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-opt/setup.sh`. - need to `pip install dask-jobqueue`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9429
https://github.com/root-project/root/issues/9430:30,deployability,build,build,30,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:127,deployability,build,build,127,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:157,deployability,build,builds,157,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:334,deployability,build,build,334,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:440,deployability,build,builds,440,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:478,deployability,build,build,478,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:639,deployability,build,build,639,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:672,deployability,build,build,672,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:784,deployability,build,build,784,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:848,deployability,build,build,848,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:947,deployability,instal,install,947,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:984,deployability,depend,dependency,984,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:1015,deployability,fail,fail-on-missing,1015,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:111,energy efficiency,current,current,111,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:202,energy efficiency,current,currently,202,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:525,energy efficiency,current,currently,525,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:1057,energy efficiency,current,currently,1057,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:984,integrability,depend,dependency,984,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:395,interoperability,share,share,395,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:984,modifiability,depend,dependency,984,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:809,performance,perform,performance-,809,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:140,reliability,doe,doesn,140,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:1015,reliability,fail,fail-on-missing,1015,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:448,safety,except,except,448,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:653,safety,except,except,653,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:931,safety,avoid,avoid,931,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:984,safety,depend,dependency,984,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:875,testability,context,context,875,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:984,testability,depend,dependency,984,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:709,usability,support,supported,709,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:739,usability,minim,minimalistic,739,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/issues/9430:809,usability,perform,performance-,809,"[RF] Add RooFit::MultiProcess build to default CI matrix; ### Explain what you would like to see improved. The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved. Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context. Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9430
https://github.com/root-project/root/pull/9431:532,availability,avail,available,532,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:720,availability,cluster,cluster,720,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:720,deployability,cluster,cluster,720,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:972,deployability,contain,contains,972,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:24,energy efficiency,schedul,scheduler,24,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:73,energy efficiency,current,current,73,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:669,energy efficiency,schedul,scheduler,669,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:505,integrability,batch,batch,505,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:462,modifiability,scenario,scenarios,462,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:24,performance,schedul,scheduler,24,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:505,performance,batch,batch,505,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:669,performance,schedul,scheduler,669,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:532,reliability,availab,available,532,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:679,reliability,doe,doesn,679,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:532,safety,avail,available,532,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9431:532,security,availab,available,532,"[DF] Make sure the Dask scheduler has information about the workers; The current implementation of `optimize_npartitions` of the Dask backend. queries information about the workers from the Dask client object. The. information is stored in the `client.scheduler_info()` return value. which is a dictionary that can have the key `workers`. Supposedly, when this key exists it means the Dask client has the needed. information. This is not always true. In certain scenarios, for example. when waiting for a batch system to return the available workers to the. dask client, the `workers` key will be present but its value will be an. empty dictionary. This is because the scheduler doesn't already know. which nodes of the cluster will become workers (this can be mitigated by. calling the `client.wait_for_workers` function beforehand). This commit makes the check a bit stronger, getting the value of the. dictionary key `workers` and then checking if that value actually. contains something. fixes #9429 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9431
https://github.com/root-project/root/pull/9432:147,deployability,instal,installed,147,"[RF] Catch general plotting exception in rf409_NumPyPandasToRooFit.py; Plotting with matplotlib doesn't work on the CI nodes even if matplotib. is installed because there is not `DISPLAY` variable. Hence we should. catch a general exception to cover also that case, not only an. `ImportError`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9432
https://github.com/root-project/root/pull/9432:188,modifiability,variab,variable,188,"[RF] Catch general plotting exception in rf409_NumPyPandasToRooFit.py; Plotting with matplotlib doesn't work on the CI nodes even if matplotib. is installed because there is not `DISPLAY` variable. Hence we should. catch a general exception to cover also that case, not only an. `ImportError`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9432
https://github.com/root-project/root/pull/9432:96,reliability,doe,doesn,96,"[RF] Catch general plotting exception in rf409_NumPyPandasToRooFit.py; Plotting with matplotlib doesn't work on the CI nodes even if matplotib. is installed because there is not `DISPLAY` variable. Hence we should. catch a general exception to cover also that case, not only an. `ImportError`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9432
https://github.com/root-project/root/pull/9432:28,safety,except,exception,28,"[RF] Catch general plotting exception in rf409_NumPyPandasToRooFit.py; Plotting with matplotlib doesn't work on the CI nodes even if matplotib. is installed because there is not `DISPLAY` variable. Hence we should. catch a general exception to cover also that case, not only an. `ImportError`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9432
https://github.com/root-project/root/pull/9432:231,safety,except,exception,231,"[RF] Catch general plotting exception in rf409_NumPyPandasToRooFit.py; Plotting with matplotlib doesn't work on the CI nodes even if matplotib. is installed because there is not `DISPLAY` variable. Hence we should. catch a general exception to cover also that case, not only an. `ImportError`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9432
https://github.com/root-project/root/pull/9433:16,deployability,version,version,16,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:56,energy efficiency,draw,drawing,56,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:16,integrability,version,version,16,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:96,integrability,configur,configured,96,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:16,modifiability,version,version,16,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:96,modifiability,configur,configured,96,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:96,security,configur,configured,96,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9433:69,usability,minim,minimum,69,[jsroot] bugfix version 6.3.2 [skip-ci]; Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9433
https://github.com/root-project/root/pull/9434:204,performance,memor,memory,204,"[DF] Give more meaningful user-visible names to Fill actions; In particular, point out when we are doing something ""special"", i.e. filling histograms with unkown axes. This requires extra care and. extra memory usage in multi-thread runs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9434
https://github.com/root-project/root/pull/9434:220,performance,multi-thread,multi-thread,220,"[DF] Give more meaningful user-visible names to Fill actions; In particular, point out when we are doing something ""special"", i.e. filling histograms with unkown axes. This requires extra care and. extra memory usage in multi-thread runs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9434
https://github.com/root-project/root/pull/9434:26,usability,user,user-visible,26,"[DF] Give more meaningful user-visible names to Fill actions; In particular, point out when we are doing something ""special"", i.e. filling histograms with unkown axes. This requires extra care and. extra memory usage in multi-thread runs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9434
https://github.com/root-project/root/pull/9434:204,usability,memor,memory,204,"[DF] Give more meaningful user-visible names to Fill actions; In particular, point out when we are doing something ""special"", i.e. filling histograms with unkown axes. This requires extra care and. extra memory usage in multi-thread runs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9434
https://github.com/root-project/root/pull/9435:48,availability,operat,operators,48,"[TMVA][SOFIE] Improvements in RNN, LSTM and GRU operators; This Pull request fixes an issue with the LSTM operator and provides some performance improvement for all recurrent operators .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9435
https://github.com/root-project/root/pull/9435:106,availability,operat,operator,106,"[TMVA][SOFIE] Improvements in RNN, LSTM and GRU operators; This Pull request fixes an issue with the LSTM operator and provides some performance improvement for all recurrent operators .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9435
https://github.com/root-project/root/pull/9435:175,availability,operat,operators,175,"[TMVA][SOFIE] Improvements in RNN, LSTM and GRU operators; This Pull request fixes an issue with the LSTM operator and provides some performance improvement for all recurrent operators .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9435
https://github.com/root-project/root/pull/9435:133,performance,perform,performance,133,"[TMVA][SOFIE] Improvements in RNN, LSTM and GRU operators; This Pull request fixes an issue with the LSTM operator and provides some performance improvement for all recurrent operators .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9435
https://github.com/root-project/root/pull/9435:133,usability,perform,performance,133,"[TMVA][SOFIE] Improvements in RNN, LSTM and GRU operators; This Pull request fixes an issue with the LSTM operator and provides some performance improvement for all recurrent operators .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9435
https://github.com/root-project/root/issues/9436:156,availability,failur,failures,156,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2216,availability,failur,failures,2216,"ng (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2316,availability,toler,tolerances,2316,"eclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2331,availability,error,errors,2331,"un). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2941,availability,failur,failures,2941,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3027,availability,error,errors,3027,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:0,deployability,Fail,Failing,0,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:156,deployability,fail,failures,156,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:172,deployability,observ,observe,172,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:218,deployability,configurat,configuration,218,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:715,deployability,configurat,configuration,715,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:794,deployability,log,log,794,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:895,deployability,build,build,895,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:901,deployability,log,log,901,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:957,deployability,build,build,957,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:963,deployability,log,log,963,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:978,deployability,log,log,978,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:986,deployability,fail,failed,986,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1057,deployability,fail,failed,1057,"o check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1064,deployability,log,log,1064,"k the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1154,deployability,fail,fail,1154,"failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1186,deployability,FAIL,FAILED,1186," command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1224,deployability,Fail,Failed,1224,"tion is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1259,deployability,depend,dependency-versions,1259,"AGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1280,deployability,Fail,Failed,1280,"h=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1365,deployability,Fail,Failed,1365,"rrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1426,deployability,Fail,Failed,1426,"=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1463,deployability,Fail,Failed,1463,"fail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1499,deployability,Fail,Failed,1499,"monalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1546,deployability,Fail,Failed,1546,"""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1643,deployability,Fail,Failed,1643,"ecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1685,deployability,build,build,1685," attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1692,deployability,Fail,Failed,1692,"ing here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1762,deployability,Fail,Failed,1762,"ect/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1822,deployability,Fail,Failed,1822,"github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but ha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1886,deployability,Fail,Failed,1886,"full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1941,deployability,Fail,Failed,1941,"iles/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2002,deployability,Fail,Failed,2002,"://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2054,deployability,Fail,Failed,2054,"failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2118,deployability,build,build,2118,"e is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2125,deployability,Fail,Failed,2125,"e full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2181,deployability,Fail,Failed,2181,"s FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` sho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2216,deployability,fail,failures,2216,"ng (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2257,deployability,instal,installed,2257,"endency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2293,deployability,fail,fail,2293," pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2479,deployability,build,builds,2479,"t-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2600,deployability,build,build,2600,"y (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2623,deployability,fail,fail,2623,"est-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2641,deployability,build,build,2641,"ailed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2748,deployability,configurat,configuration,2748,"esses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2795,deployability,build,build,2795,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2891,deployability,build,build,2891,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2941,deployability,fail,failures,2941,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2988,deployability,fail,fail,2988,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3128,deployability,fail,fail,3128,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3229,deployability,instal,installed,3229,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3283,deployability,instal,installed,3283,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3319,deployability,fail,fail,3319,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3390,deployability,build,build,3390,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3552,deployability,instal,installed,3552,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3594,deployability,build,build,3594,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:633,energy efficiency,gpu,gpu,633,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3112,energy efficiency,load,loadAllLibs,3112,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3137,energy efficiency,Load,Loading,3137,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3351,energy efficiency,load,load,3351,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:218,integrability,configur,configuration,218,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:715,integrability,configur,configuration,715,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1259,integrability,depend,dependency-versions,1259,"AGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2748,integrability,configur,configuration,2748,"esses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:218,modifiability,configur,configuration,218,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:715,modifiability,configur,configuration,715,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1259,modifiability,depend,dependency-versions,1259,"AGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2748,modifiability,configur,configuration,2748,"esses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3253,modifiability,pac,package,3253,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:156,performance,failur,failures,156,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:633,performance,gpu,gpu,633,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1087,performance,time,time,1087,"E` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2090,performance,cach,cache-perfstattest-libevent-build,2090,"ese files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2161,performance,cach,cache-perfstattest,2161,"following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2216,performance,failur,failures,2216,"ng (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2331,performance,error,errors,2331,"un). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2572,performance,cach,cache-perfstattest-libevent-build,2572,"NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2941,performance,failur,failures,2941,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3027,performance,error,errors,3027,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3112,performance,load,loadAllLibs,3112,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3137,performance,Load,Loading,3137,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3351,performance,load,load,3351,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:0,reliability,Fail,Failing,0,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:156,reliability,fail,failures,156,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:986,reliability,fail,failed,986,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1057,reliability,fail,failed,1057,"o check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1154,reliability,fail,fail,1154,"failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1186,reliability,FAIL,FAILED,1186," command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1224,reliability,Fail,Failed,1224,"tion is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1280,reliability,Fail,Failed,1280,"h=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1365,reliability,Fail,Failed,1365,"rrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1426,reliability,Fail,Failed,1426,"=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1463,reliability,Fail,Failed,1463,"fail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1499,reliability,Fail,Failed,1499,"monalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1546,reliability,Fail,Failed,1546,"""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1643,reliability,Fail,Failed,1643,"ecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1692,reliability,Fail,Failed,1692,"ing here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1762,reliability,Fail,Failed,1762,"ect/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1822,reliability,Fail,Failed,1822,"github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but ha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1886,reliability,Fail,Failed,1886,"full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1941,reliability,Fail,Failed,1941,"iles/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2002,reliability,Fail,Failed,2002,"://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2054,reliability,Fail,Failed,2054,"failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2125,reliability,Fail,Failed,2125,"e full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2181,reliability,Fail,Failed,2181,"s FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` sho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2216,reliability,fail,failures,2216,"ng (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2293,reliability,fail,fail,2293," pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2316,reliability,toleran,tolerances,2316,"eclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2623,reliability,fail,fail,2623,"est-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2941,reliability,fail,failures,2941,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2988,reliability,fail,fail,2988,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3128,reliability,fail,fail,3128,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3319,reliability,fail,fail,3319,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3637,reliability,doe,doesn,3637,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:8,safety,test,tests,8,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:53,safety,test,tests,53,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:151,safety,test,test,151,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:794,safety,log,log,794,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:901,safety,log,log,901,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:963,safety,log,log,963,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:978,safety,log,log,978,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:993,safety,test,tests,993,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1064,safety,log,log,1064,"k the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1143,safety,test,tests,1143,"ther test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1180,safety,test,tests,1180,"e full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1259,safety,depend,dependency-versions,1259,"AGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1346,safety,test,test-import-numba,1346,"Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1401,safety,test,test-stressMathCoreUnit,1401,"da=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1442,safety,test,test-stressmathcore,1442,"cache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1479,safety,test,test-TFormulaTests,1479,"Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1624,safety,test,test-import-numba,1624,"gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail becau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2279,safety,test,tests,2279,"iled). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2331,safety,error,errors,2331,"un). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2547,safety,test,test,2547,"led). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2742,safety,valid,valid,2742,"t_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2810,safety,test,testing,2810,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2982,safety,test,tests,2982,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3027,safety,error,errors,3027,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3107,safety,test,test,3107,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3313,safety,test,tests,3313,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3470,safety,test,tests,3470,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:218,security,configur,configuration,218,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:715,security,configur,configuration,715,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:794,security,log,log,794,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:901,security,log,log,901,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:963,security,log,log,963,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:978,security,log,log,978,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1064,security,log,log,1064,"k the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2748,security,configur,configuration,2748,"esses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:8,testability,test,tests,8,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:53,testability,test,tests,53,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:151,testability,test,test,151,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:172,testability,observ,observe,172,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:794,testability,log,log,794,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:901,testability,log,log,901,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:963,testability,log,log,963,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:978,testability,log,log,978,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:993,testability,test,tests,993,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1064,testability,log,log,1064,"k the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1143,testability,test,tests,1143,"ther test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1180,testability,test,tests,1180,"e full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1259,testability,depend,dependency-versions,1259,"AGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1346,testability,test,test-import-numba,1346,"Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1401,testability,test,test-stressMathCoreUnit,1401,"da=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1442,testability,test,test-stressmathcore,1442,"cache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1479,testability,test,test-TFormulaTests,1479,"Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:1624,testability,test,test-import-numba,1624,"gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail becau",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2279,testability,test,tests,2279,"iled). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2547,testability,test,test,2547,"led). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2810,testability,test,testing,2810,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2982,testability,test,tests,2982,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3107,testability,test,test,3107,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3313,testability,test,tests,3313,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3470,testability,test,tests,3470,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:190,usability,command,command,190,"Failing tests in the master branch; I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below. ```. $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root. ```. I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```. The following tests FAILED:. 	 1 - clingtest-check-cling (Failed). 	 13 - pyunittests-pyroot-dependency-versions (Failed). 	 68 - pyunittests-pyroot-numbadeclare (Not Run). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2331,usability,error,errors,2331,"un). 	 69 - test-import-numba (Failed). 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:2419,usability,support,support,2419,"t (Failed). 	282 - test-stressmathcore (Failed). 	307 - test-TFormulaTests (Failed). 	800 - tutorial-pythia-pythiaExample (Failed). 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run). 	1143 - test-import-numba (Failed). 	1358 - roottest-cling-stl-dicts-build (Failed). 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed). 	1753 - roottest-root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/issues/9436:3027,usability,error,errors,3027,"root-io-transient-base-WriteFile (Failed). 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed). 	1799 - roottest-root-meta-countIncludePaths (Failed). 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed). 	1852 - roottest-root-meta-ROOT-7462-make (Failed). 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed). 	2230 - roottest-root-tree-cache-perfstattest (Failed). ```. * You can ignore the failures for numba, as I don't have that installed. * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. . * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins. * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes. * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9436
https://github.com/root-project/root/pull/9437:141,availability,error,error,141,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:152,deployability,build,building,152,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:173,interoperability,platform,platform,173,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:141,performance,error,error,141,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:141,safety,error,error,141,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:141,usability,error,error,141,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9437:195,usability,support,support,195,"[cmake] Fix setting cuda off when it is not found; When cuda is not found, if the cmake cuda flag was ON it was not switched off, causing an error when building RooFit on a platform without cuda support. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9437
https://github.com/root-project/root/pull/9438:15,energy efficiency,draw,drawing,15,"Fix in THStack drawing option ""pads""; The Paint method of THStack always redrew the histograms in the sub-pads defined by the THStack drawing option ""pads"". Like the ""pad dividing"" the ""histograms' drawing"" should be done only the first time the THStack is painted otherwise any additional graphics objects added in one of the pads (created by the ""pads"" option) will be removed as seen in the forum report:. https://root-forum.cern.ch/t/tline-not-shown/48028",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9438
https://github.com/root-project/root/pull/9438:134,energy efficiency,draw,drawing,134,"Fix in THStack drawing option ""pads""; The Paint method of THStack always redrew the histograms in the sub-pads defined by the THStack drawing option ""pads"". Like the ""pad dividing"" the ""histograms' drawing"" should be done only the first time the THStack is painted otherwise any additional graphics objects added in one of the pads (created by the ""pads"" option) will be removed as seen in the forum report:. https://root-forum.cern.ch/t/tline-not-shown/48028",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9438
https://github.com/root-project/root/pull/9438:198,energy efficiency,draw,drawing,198,"Fix in THStack drawing option ""pads""; The Paint method of THStack always redrew the histograms in the sub-pads defined by the THStack drawing option ""pads"". Like the ""pad dividing"" the ""histograms' drawing"" should be done only the first time the THStack is painted otherwise any additional graphics objects added in one of the pads (created by the ""pads"" option) will be removed as seen in the forum report:. https://root-forum.cern.ch/t/tline-not-shown/48028",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9438
https://github.com/root-project/root/pull/9438:102,integrability,sub,sub-pads,102,"Fix in THStack drawing option ""pads""; The Paint method of THStack always redrew the histograms in the sub-pads defined by the THStack drawing option ""pads"". Like the ""pad dividing"" the ""histograms' drawing"" should be done only the first time the THStack is painted otherwise any additional graphics objects added in one of the pads (created by the ""pads"" option) will be removed as seen in the forum report:. https://root-forum.cern.ch/t/tline-not-shown/48028",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9438
https://github.com/root-project/root/pull/9438:237,performance,time,time,237,"Fix in THStack drawing option ""pads""; The Paint method of THStack always redrew the histograms in the sub-pads defined by the THStack drawing option ""pads"". Like the ""pad dividing"" the ""histograms' drawing"" should be done only the first time the THStack is painted otherwise any additional graphics objects added in one of the pads (created by the ""pads"" option) will be removed as seen in the forum report:. https://root-forum.cern.ch/t/tline-not-shown/48028",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9438
https://github.com/root-project/root/pull/9439:61,deployability,build,builds,61,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:316,reliability,pra,pragma,316,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:592,reliability,pra,pragma,592,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:111,safety,test,tests,111,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:676,safety,test,test,676,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:748,safety,test,tested,748,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:111,testability,test,tests,111,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:676,testability,test,test,676,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:748,testability,test,tested,748,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:132,usability,user,user-defined,132,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9439:700,usability,Custom,CustomStruct,700,"[ntuple] Remove `Warning: Unused class rule: SG::sgkey_t` in builds with `-Dtesting=ON`; In one of the RNTuple tests that exercises user-defined types, `SG::sgkey_t` is a typedef for a fundamental type, which causes rootcling to print a warning:. ```. Warning: Unused class rule: SG::sgkey_t. ```. This is because `#pragma link C++ typedef foo` is only used by rootcling to generate a dictionary for `foo` if it is a typedef for a class/struct. For other typedefs, either _(1)_ cxxmodules have to be enabled, or _(2)_ cling has to parse the header. ## Changes or fixes:. - Remove the no-op `#pragma link C++ typedef ...`. - We do not rely on cxxmodules to be enabled for this test; make cling parse `CustomStruct.hxx` instead. ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9439
https://github.com/root-project/root/pull/9440:11,deployability,Updat,Update,11,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:18,deployability,releas,release,18,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:51,deployability,updat,updated,51,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:65,deployability,releas,release,65,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:11,safety,Updat,Update,11,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:51,safety,updat,updated,51,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:11,security,Updat,Update,11,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9440:51,security,updat,updated,51,[relnotes] Update release notes for v6.26; Provide updated v6.26 release notes for the Interpreter and RNTuple sections. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9440
https://github.com/root-project/root/pull/9441:21,deployability,depend,dependency,21,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:115,deployability,depend,dependency,115,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:21,integrability,depend,dependency,21,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:43,integrability,Batch,BatchCompute,43,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:115,integrability,depend,dependency,115,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:21,modifiability,depend,dependency,21,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:115,modifiability,depend,dependency,115,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:176,modifiability,variab,variable,176,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:43,performance,Batch,BatchCompute,43,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:21,safety,depend,dependency,21,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:115,safety,depend,dependency,115,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:21,testability,depend,dependency,21,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9441:115,testability,depend,dependency,115,[RF] Fix imt and VDT dependency for roofit BatchCompute library; - When imt is off one needs to have still the imt dependency for using TExecutor. - Fix correct definition for variable defining location of vdt headers. It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9441
https://github.com/root-project/root/pull/9442:23,availability,operat,operator,23,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:98,performance,perform,performing,98,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:79,safety,input,input,79,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:136,safety,test,test,136,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:163,safety,Test,TestSofieModels,163,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:136,testability,test,test,136,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:163,testability,Test,TestSofieModels,163,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:64,usability,support,support,64,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:79,usability,input,input,79,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9442:98,usability,perform,performing,98,[TMVA][SOFIE] Fix Conv operator for the 1D convolution; Fix the support for 3d input tensors when performing 1d convolution. Add also a test for 1D convolution in TestSofieModels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9442
https://github.com/root-project/root/pull/9443:30,deployability,releas,release,30,[relnotes][skip-ci] Fix v6.26 release notes for RNTuple (NFC); [relnotes][skip-ci] Fix v6.26 release notes for RNTuple (NFC). Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9443
https://github.com/root-project/root/pull/9443:93,deployability,releas,release,93,[relnotes][skip-ci] Fix v6.26 release notes for RNTuple (NFC); [relnotes][skip-ci] Fix v6.26 release notes for RNTuple (NFC). Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9443
https://github.com/root-project/root/pull/9443:129,security,auth,authored-by,129,[relnotes][skip-ci] Fix v6.26 release notes for RNTuple (NFC); [relnotes][skip-ci] Fix v6.26 release notes for RNTuple (NFC). Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9443
https://github.com/root-project/root/pull/9444:13,integrability,interfac,interface,13,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:87,integrability,interfac,interface,87,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:159,integrability,interfac,interface,159,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:280,integrability,coupl,couplings,280,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:13,interoperability,interfac,interface,13,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:87,interoperability,interfac,interface,87,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:159,interoperability,interfac,interface,159,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:13,modifiability,interfac,interface,13,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:87,modifiability,interfac,interface,87,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:159,modifiability,interfac,interface,159,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:280,modifiability,coupl,couplings,280,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:263,safety,input,inputs,263,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:280,testability,coupl,couplings,280,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/pull/9444:263,usability,input,inputs,263,"[RF] factory interface for RooLagrangianMorphFunc; # This Pull request:. . Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used . along the following lines,. ```. ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”). ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9444
https://github.com/root-project/root/issues/9445:4,availability,error,errors,4,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:192,availability,error,errors,192,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:421,availability,error,error,421,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:536,availability,error,error,536,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:544,availability,Error,Error,544,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1689,availability,ERROR,ERROR,1689," on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5911,availability,error,errors,5911,"STWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6294,availability,error,error,6294," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7162,availability,Operat,Operating,7162," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:16,deployability,build,build,16,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:123,deployability,build,build,123,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:244,deployability,build,builds,244,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:499,deployability,build,build,499,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:576,deployability,build,build,576,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:685,deployability,depend,depends,685,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:785,deployability,build,build,785,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6316,deployability,build,build,6316," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7114,deployability,build,build,7114," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:7131,deployability,Releas,Release,7131," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:998,energy efficiency,core,core,998,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1003,energy efficiency,core,core,1003,"rrors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1019,energy efficiency,core,core,1019," ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1028,energy efficiency,core,core,1028,"h msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1038,energy efficiency,core,core,1038,"AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1714,energy efficiency,alloc,allocator,1714,"OOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036da88). #6 0x6882ed6e in llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1751,energy efficiency,alloc,allocate,1751,"PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036da88). #6 0x6882ed6e in llvm::BitstreamWriter::EmitRecord<class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:427,integrability,messag,message,427,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:685,integrability,depend,depends,685,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:427,interoperability,messag,message,427,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:685,modifiability,depend,depends,685,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4,performance,error,errors,4,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:192,performance,error,errors,192,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:421,performance,error,error,421,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:471,performance,parallel,parallel,471,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:512,performance,parallel,parallel,512,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:536,performance,error,error,536,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:544,performance,Error,Error,544,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:933,performance,parallel,parallel,933,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1689,performance,ERROR,ERROR,1689," on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1734,performance,memor,memory,1734,"2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036da88). #6 0x6882ed6e in llvm::BitstreamWriter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5911,performance,error,errors,5911,"STWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5993,performance,memor,memory,5993,"san2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6294,performance,error,error,6294," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4,safety,error,errors,4,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:192,safety,error,errors,192,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:234,safety,sanit,sanitizer,234,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:256,safety,test,tested,256,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:421,safety,error,error,421,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:536,safety,error,error,536,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:544,safety,Error,Error,544,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:685,safety,depend,depends,685,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1689,safety,ERROR,ERROR,1689," on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5911,safety,error,errors,5911,"STWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6294,safety,error,error,6294," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:234,security,sanit,sanitizer,234,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:256,testability,test,tested,256,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:685,testability,depend,depends,685,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:4,usability,error,errors,4,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:192,usability,error,errors,192,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:323,usability,support,support,323,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:369,usability,help,help,369,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:390,usability,confirm,confirm,390,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:421,usability,error,error,421,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:536,usability,error,error,536,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:544,usability,Error,Error,544,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:557,usability,Custom,CustomBuild,557,"Hit errors when build ROOT with msvc on AddressSanitizer mode; ### Describe the bug. Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot! (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error). Error:. ```. CustomBuild:. ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1689,usability,ERROR,ERROR,1689," on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1734,usability,memor,memory,1734,"2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036da88). #6 0x6882ed6e in llvm::BitstreamWriter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1825,usability,Visual,Visual,1825,"86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036da88). #6 0x6882ed6e in llvm::BitstreamWriter::EmitRecord<class llvm::SmallVectorImpl<unsigned __int64>>(unsigned int, class llvm::Small",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:1858,usability,Tool,Tools,1858,"0976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel."". Generating etc/allDict.cxx.pch. . Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer. . =================================================================. ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes. #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141). #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11970308). #2 0x6c13ed37 in llvm::SmallVectorBase::grow_pod(void *, unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x146ced37). #3 0x67bb3ed6 in llvm::SmallVectorImpl<char>::append<char const *, void>(char const *, char const *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x10143ed6). #4 0x67ddd547 in llvm::BitstreamWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036d547). #5 0x67ddda88 in llvm::BitstreamWriter::EmitVBR(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1036da88). #6 0x6882ed6e in llvm::BitstreamWriter::EmitRecord<class llvm::SmallVectorImpl<unsigned __int64>>(unsigned int, class llvm::SmallVectorImpl<unsigned __int64> cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5875,usability,HINT,HINT,5875,"1121b594). #21 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5911,usability,error,errors,5911,"STWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:5993,usability,memor,memory,5993,"san2\bin\libCling.dll+0x11234c29). #22 0x68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6034,usability,Visual,Visual,6034,"68c8bbc1 in clang::ASTRecordWriter::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6067,usability,Tool,Tools,6067,"r::FlushSubStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121bbc1). #23 0x68c8b5a6 in clang::ASTRecordWriter::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6202,usability,Visual,Visual,6202,"r::EmitStmt(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6294,usability,error,error,6294," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6309,usability,Custom,Custom,6309," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6640,usability,Tool,Tools,6640," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6646,usability,Command,Command,6646," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/issues/9445:6793,usability,Visual,Visual,6793," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6). #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594). #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29). #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c). #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca). . ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1. SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) . ==6948==ABORTING. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. . ```. ### To Reproduce. 1. Open a x86 Native Tools Command Prompt for VS 2019. 2. `git clone https://github.com/root-project/root.git root_src`. 3. `mkdir root_build && cd root_build`. 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`. 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ). 6. `set ASAN_OPTIONS=detect_odr_violation=0`. 7. `cmake --build . --config Release` . ### Setup. <!--. 1. Operating system: Windows 10. 2. How you obtained ROOT: built it myself. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9445
https://github.com/root-project/root/pull/9446:99,energy efficiency,Reduc,Reduce,99,[RF] Make `roobatchcompute` header files safer; The changes in this commit achieve two things:. 1. Reduce set of indirectly included headers in other RooFit libraries. by including new `RooBatchComputeTypes.h` instead of. `RooBatchCompute.h` if only the typedefs in the RooBatchCompute. namespace are used. 2. Make sure that no dummy definitions of `__device__` or `__host__` in. case no NVidia compiler is used can leak to user code via. `roobatchcompute` header files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9446
https://github.com/root-project/root/pull/9446:41,safety,safe,safer,41,[RF] Make `roobatchcompute` header files safer; The changes in this commit achieve two things:. 1. Reduce set of indirectly included headers in other RooFit libraries. by including new `RooBatchComputeTypes.h` instead of. `RooBatchCompute.h` if only the typedefs in the RooBatchCompute. namespace are used. 2. Make sure that no dummy definitions of `__device__` or `__host__` in. case no NVidia compiler is used can leak to user code via. `roobatchcompute` header files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9446
https://github.com/root-project/root/pull/9446:424,usability,user,user,424,[RF] Make `roobatchcompute` header files safer; The changes in this commit achieve two things:. 1. Reduce set of indirectly included headers in other RooFit libraries. by including new `RooBatchComputeTypes.h` instead of. `RooBatchCompute.h` if only the typedefs in the RooBatchCompute. namespace are used. 2. Make sure that no dummy definitions of `__device__` or `__host__` in. case no NVidia compiler is used can leak to user code via. `roobatchcompute` header files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9446
https://github.com/root-project/root/pull/9447:38,availability,operat,operator,38,[RF] Implement RooPolyFunc assignment operator and enable Windows test; The `testRooPolyFunc` was broken before on Windows because the. `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:182,availability,operat,operator,182,[RF] Implement RooPolyFunc assignment operator and enable Windows test; The `testRooPolyFunc` was broken before on Windows because the. `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:66,safety,test,test,66,[RF] Implement RooPolyFunc assignment operator and enable Windows test; The `testRooPolyFunc` was broken before on Windows because the. `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:77,safety,test,testRooPolyFunc,77,[RF] Implement RooPolyFunc assignment operator and enable Windows test; The `testRooPolyFunc` was broken before on Windows because the. `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:66,testability,test,test,66,[RF] Implement RooPolyFunc assignment operator and enable Windows test; The `testRooPolyFunc` was broken before on Windows because the. `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/pull/9447:77,testability,test,testRooPolyFunc,77,[RF] Implement RooPolyFunc assignment operator and enable Windows test; The `testRooPolyFunc` was broken before on Windows because the. `RooPolyFunc` didn't implement the assignment operator correctly. This is a follow-up on https://github.com/root-project/root/pull/9184.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9447
https://github.com/root-project/root/issues/9448:286,interoperability,XML,XML,286,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:542,interoperability,xml,xml,542,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:969,interoperability,xml,xml,969,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:978,interoperability,xml,xml,978,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:447,performance,content,contents,447,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:824,reliability,pra,pragma,824,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:855,reliability,pra,pragma,855,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:886,reliability,pra,pragma,886,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:919,reliability,pra,pragma,919,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:367,safety,valid,valid,367,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9448:327,usability,behavi,behavior,327,"[rootcling] `genreflex --cxxmodule` generates a truncated .pcm file; - [X] Checked for duplicates. ### Describe the bug. `genreflex --cxxmodule ...` generates a truncated `xxx_rflx.pcm` file (0 bytes). The equivalent invocation of `rootcling --cxxmodule` using a linkdef.h instead of a XML file works as expected. ### Expected behavior. `genreflex` should generate a valid cxxmodule file. ### To Reproduce. Run genreflex/rootcling as follows. The contents of the required files are provided below. ```bash. $ genreflex --cxxmodule -s classes.xml classes.h. $ # or. $ rootcling --cxxmodule -f out.cpp -s ./libclasses.so classes.h classes_linkdef.h. ```. classes.h:. ```c++. #ifndef CLASSES_H. #define CLASSES_H. struct Foo {. Foo(int _i) : i(_i) {}. int i = 0;. };. #endif. ```. classes_linkdef.h:. ```c++. #ifdef __CINT__. #pragma link off all globals;. #pragma link off all classes;. #pragma link off all functions;. #pragma link C++ class Foo+;. #endif. ```. classes.xml:. ```xml. <lcgdict>. <class name=""Foo""/>. </lcgdict>. ```. ### Setup. ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9448
https://github.com/root-project/root/issues/9449:9,availability,error,error,9,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:82,availability,operat,operator,82,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:120,availability,operat,operator,120,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:198,availability,error,error,198,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:677,availability,operat,operator,677,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:823,availability,error,error,823,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:876,availability,operat,operator,876,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:226,deployability,version,version,226,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:226,integrability,version,version,226,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:226,modifiability,version,version,226,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:9,performance,error,error,9,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:198,performance,error,error,198,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:823,performance,error,error,823,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:9,safety,error,error,9,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:198,safety,error,error,198,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:823,safety,error,error,823,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:275,security,session,session,275,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:9,usability,error,error,9,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:198,usability,error,error,198,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/issues/9449:823,usability,error,error,823,"[cling] `error: function definition is not allowed here` when trying to overload `operator<=`; When trying to define an operator in the cling cli repl, the ""function definition is not allowed here"" error is generated. ""cling -version"" reports ""0.8"". Here's a copy/paste of a session to demonstrate the issue:. <pre>. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ #include &lt;iostream>. [cling]$ using namespace std;. [cling]$ struct A {. [cling]$ ? A(int val1, int val2) : pod1(val1), pod2(val2) {}. [cling]$ ? int pod1, pod2;. [cling]$ ? };. [cling]$ bool operator<=(const A &lhs, const A &rhs) {. [cling]$ ? return ((lhs.pod1 <= rhs.pod1) && (lhs.pod2 <= rhs.pod2));. [cling]$ ? }. input_line_6:2:46: error: function definition is not allowed here. bool operator<=(const A &lhs, const A &rhs) {. ^. </pre>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9449
https://github.com/root-project/root/pull/9450:198,availability,operat,operator,198,"[RF] New `RooBatchCompute::DataKey` to easily change data map keys; A RooBatchCompute::DataKey can be constructed with no runtime overhead. from the pointer to any class T that implements a casting operator to. DataKey. Compared to using the pointer to the object of type T directly,. this has the advantage that one can easily change the way the key is. constructed from the object, just by changing the implementation of the. casting operator. For example, it is trivial to move from using the. RooAbsArg pointer to using the unique name pointer retrieved by. RooAbsArg::namePtr(). This is to prepare more follow-up developments in which the data maps. will actually be keyed by name pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9450
https://github.com/root-project/root/pull/9450:436,availability,operat,operator,436,"[RF] New `RooBatchCompute::DataKey` to easily change data map keys; A RooBatchCompute::DataKey can be constructed with no runtime overhead. from the pointer to any class T that implements a casting operator to. DataKey. Compared to using the pointer to the object of type T directly,. this has the advantage that one can easily change the way the key is. constructed from the object, just by changing the implementation of the. casting operator. For example, it is trivial to move from using the. RooAbsArg pointer to using the unique name pointer retrieved by. RooAbsArg::namePtr(). This is to prepare more follow-up developments in which the data maps. will actually be keyed by name pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9450
https://github.com/root-project/root/pull/9450:130,performance,overhead,overhead,130,"[RF] New `RooBatchCompute::DataKey` to easily change data map keys; A RooBatchCompute::DataKey can be constructed with no runtime overhead. from the pointer to any class T that implements a casting operator to. DataKey. Compared to using the pointer to the object of type T directly,. this has the advantage that one can easily change the way the key is. constructed from the object, just by changing the implementation of the. casting operator. For example, it is trivial to move from using the. RooAbsArg pointer to using the unique name pointer retrieved by. RooAbsArg::namePtr(). This is to prepare more follow-up developments in which the data maps. will actually be keyed by name pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9450
https://github.com/root-project/root/pull/9452:154,availability,error,error,154,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:646,availability,error,error,646,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:154,performance,error,error,154,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:646,performance,error,error,646,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:154,safety,error,error,154,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:646,safety,error,error,646,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:154,usability,error,error,154,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/pull/9452:646,usability,error,error,646,"[roofit] add missing include in multiprocess/src/Config.cxx; When compiled with -Ddev=ON options, <cstdio> include is not provided. ```. Config.cxx:41:7: error: ‘printf’ was not declared in this scope. 41 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers after JobManager has been instantiated!\n"");. | ^~~~~~. /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:17:1: note: ‘printf’ is defined in header ‘<cstdio>’; did you forget to ‘#include <cstdio>’? 16 | #include <thread> // std::thread::hardware_concurrency(). +++ |+#include <cstdio>. 17 | . /home/linev/git/webgui/roofit/multiprocess/src/Config.cxx:43:7: error: ‘printf’ was not declared in this scope. 43 | printf(""Warning: Config::setDefaultNWorkers cannot set number of workers to zero.\n"");. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9452
https://github.com/root-project/root/issues/9453:9,availability,failur,failure,9,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:97,availability,error,error,97,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:529,availability,error,error,529,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:694,availability,error,error,694,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:9,deployability,fail,failure,9,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:700,integrability,messag,message,700,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:700,interoperability,messag,message,700,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:9,performance,failur,failure,9,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:97,performance,error,error,97,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:529,performance,error,error,529,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:694,performance,error,error,694,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:9,reliability,fail,failure,9,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:97,safety,error,error,97,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:529,safety,error,error,529,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:694,safety,error,error,694,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:974,safety,input,input,974,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:997,safety,input,input,997,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:97,usability,error,error,97,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:529,usability,error,error,529,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:694,usability,error,error,694,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:974,usability,input,input,974,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/issues/9453:997,usability,input,input,997,"Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`; After recent change I get compiler error with `-Ddev=On` option like:. ```. tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here. /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]. 99 | if (fDim < 0 || fDim > 2) {. | ~~~~~^~~. ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better . checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9453
https://github.com/root-project/root/pull/9454:24,energy efficiency,draw,draw,24,"Provide colz as default draw option for 2D TEfficiency; Otherwise ""ap"" option will be used by default for 2D `TEfficiency` object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9454
https://github.com/root-project/root/pull/9456:269,deployability,contain,contains,269,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:423,deployability,contain,contained,423,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:581,deployability,updat,updated,581,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:337,interoperability,prox,proxy,337,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:287,modifiability,variab,variables,287,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:343,modifiability,variab,variables,343,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:394,modifiability,variab,variables,394,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:127,safety,Test,TestStatistics,127,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:551,safety,test,tested,551,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:581,safety,updat,updated,581,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:581,security,updat,updated,581,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:127,testability,Test,TestStatistics,127,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:551,testability,test,tested,551,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9456:510,usability,help,help,510,[RF] Fixes evaluate() function in RooRealL; # This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9456
https://github.com/root-project/root/pull/9457:123,safety,test,test,123,[TMVA][SOFIE] Fix for the 3D convolution in ROperator_Conv; This Pull request provides the support for 3d convolution. . A test is added in TestSofieModel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9457
https://github.com/root-project/root/pull/9457:140,safety,Test,TestSofieModel,140,[TMVA][SOFIE] Fix for the 3D convolution in ROperator_Conv; This Pull request provides the support for 3d convolution. . A test is added in TestSofieModel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9457
https://github.com/root-project/root/pull/9457:123,testability,test,test,123,[TMVA][SOFIE] Fix for the 3D convolution in ROperator_Conv; This Pull request provides the support for 3d convolution. . A test is added in TestSofieModel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9457
https://github.com/root-project/root/pull/9457:140,testability,Test,TestSofieModel,140,[TMVA][SOFIE] Fix for the 3D convolution in ROperator_Conv; This Pull request provides the support for 3d convolution. . A test is added in TestSofieModel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9457
https://github.com/root-project/root/pull/9457:91,usability,support,support,91,[TMVA][SOFIE] Fix for the 3D convolution in ROperator_Conv; This Pull request provides the support for 3d convolution. . A test is added in TestSofieModel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9457
https://github.com/root-project/root/pull/9458:504,availability,error,error,504,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:691,availability,error,error,691,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:229,deployability,manag,manages,229,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,deployability,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,deployability,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:731,deployability,FAIL,FAILED,731,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:229,energy efficiency,manag,manages,229,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:192,integrability,batch,batch,192,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,integrability,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:448,integrability,batch,batchmode,448,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:498,integrability,event,event,498,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,integrability,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:685,integrability,event,event,685,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,interoperability,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,interoperability,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,modifiability,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,modifiability,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:192,performance,batch,batch,192,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:448,performance,batch,batchmode,448,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:504,performance,error,error,504,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:691,performance,error,error,691,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,reliability,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,reliability,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:731,reliability,FAIL,FAILED,731,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:229,safety,manag,manages,229,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:427,safety,test,tests,427,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:465,safety,Test,Test,465,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:504,safety,error,error,504,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:534,safety,Test,Test,534,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:617,safety,test,tests,617,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:666,safety,Test,Test,666,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:691,safety,error,error,691,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,security,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,security,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:365,testability,integr,integrals,365,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:427,testability,test,tests,427,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:465,testability,Test,Test,465,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:534,testability,Test,Test,534,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:575,testability,integr,integration,575,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:617,testability,test,tests,617,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:666,testability,Test,Test,666,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:504,usability,error,error,504,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9458:691,usability,error,error,691,"[RF] Enable dirty flag propagation in `RooAbsReal::computeBatch` and speed up RooFitDriver by getting output sizes of nodes only once; Dirty flag propagation appeared to be unnecessary in the batch mode. because the RooFitDriver manages the evaluation of nodes, but some nodes. have internal computation graphs that rely on the dirty flag. propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:. ```. Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK. Test 28 : P.d.f. marginalization through integration.............OK. ```. The only tests that still needs to be fixed now is:. ```. Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9458
https://github.com/root-project/root/pull/9462:90,integrability,event,event,90,"Fix drag and drop on Linux (x86_64); Add `#ifdefs` to Protect 32 bit specific code in X11 event handling. This fixes an issue with the `drag_and_drop.C` tutorial on Debian 10 & Gnome, [as reported on the Forum](https://root-forum.cern.ch/t/drag-and-drop-in-root-6-24/47789).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9462
https://github.com/root-project/root/pull/9462:69,interoperability,specif,specific,69,"Fix drag and drop on Linux (x86_64); Add `#ifdefs` to Protect 32 bit specific code in X11 event handling. This fixes an issue with the `drag_and_drop.C` tutorial on Debian 10 & Gnome, [as reported on the Forum](https://root-forum.cern.ch/t/drag-and-drop-in-root-6-24/47789).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9462
https://github.com/root-project/root/pull/9463:32,deployability,version,version,32,[jsroot] Several fixes in 6.3.2 version [skip-ci]; `TEfficiency` fix. Provide `TPadPainter.divide` method. Enables handling of pad divisions like: https://jsroot.gsi.de/dev/api.htm#go4examplesimple_draw_picture,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9463
https://github.com/root-project/root/pull/9463:173,deployability,api,api,173,[jsroot] Several fixes in 6.3.2 version [skip-ci]; `TEfficiency` fix. Provide `TPadPainter.divide` method. Enables handling of pad divisions like: https://jsroot.gsi.de/dev/api.htm#go4examplesimple_draw_picture,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9463
https://github.com/root-project/root/pull/9463:32,integrability,version,version,32,[jsroot] Several fixes in 6.3.2 version [skip-ci]; `TEfficiency` fix. Provide `TPadPainter.divide` method. Enables handling of pad divisions like: https://jsroot.gsi.de/dev/api.htm#go4examplesimple_draw_picture,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9463
https://github.com/root-project/root/pull/9463:173,integrability,api,api,173,[jsroot] Several fixes in 6.3.2 version [skip-ci]; `TEfficiency` fix. Provide `TPadPainter.divide` method. Enables handling of pad divisions like: https://jsroot.gsi.de/dev/api.htm#go4examplesimple_draw_picture,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9463
https://github.com/root-project/root/pull/9463:173,interoperability,api,api,173,[jsroot] Several fixes in 6.3.2 version [skip-ci]; `TEfficiency` fix. Provide `TPadPainter.divide` method. Enables handling of pad divisions like: https://jsroot.gsi.de/dev/api.htm#go4examplesimple_draw_picture,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9463
https://github.com/root-project/root/pull/9463:32,modifiability,version,version,32,[jsroot] Several fixes in 6.3.2 version [skip-ci]; `TEfficiency` fix. Provide `TPadPainter.divide` method. Enables handling of pad divisions like: https://jsroot.gsi.de/dev/api.htm#go4examplesimple_draw_picture,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9463
https://github.com/root-project/root/issues/9465:250,availability,error,error,250,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:813,availability,error,error,813,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:327,deployability,modul,module,327,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:689,deployability,version,versions,689,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:756,deployability,version,versions,756,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:904,deployability,version,versions,904,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:207,energy efficiency,Draw,Draw,207,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:689,integrability,version,versions,689,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:756,integrability,version,versions,756,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:819,integrability,messag,message,819,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:904,integrability,version,versions,904,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:819,interoperability,messag,message,819,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:327,modifiability,modul,module,327,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:689,modifiability,version,versions,689,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:756,modifiability,version,versions,756,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:904,modifiability,version,versions,904,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:250,performance,error,error,250,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:813,performance,error,error,813,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:250,safety,error,error,250,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:327,safety,modul,module,327,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:627,safety,test,tested,627,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:813,safety,error,error,813,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:263,testability,Trace,Traceback,263,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:627,testability,test,tested,627,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:250,usability,error,error,250,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:813,usability,error,error,813,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/issues/9465:884,usability,behavi,behavior,884,"lambda expressions in TF1 - pyroot; Hi,. I'm trying to use lambda expressions to define TF1 objects. Inside python I run the following code:. `from ROOT import TF1`. `f = TF1('f', lambda x: x[0], 0, 1)`. `f.Draw()`. but I get a blank canvas and this error:. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook. gInterpreter.EndOfLineAction(). TypeError: void TInterpreter::EndOfLineAction() =>. TypeError: callable was deleted. ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9465
https://github.com/root-project/root/pull/9466:5,deployability,Upgrad,Upgrades,5,[DF] Upgrades to RBookedDefines in preparation for systematic variations; The main change is the renaming from `RBookedDefines` to `RColumnRegister`:. we already abuse this class to also keep track of aliases. Soon we will also keep track of defined systematic variations here. With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9466
https://github.com/root-project/root/pull/9466:288,deployability,patch,patch,288,[DF] Upgrades to RBookedDefines in preparation for systematic variations; The main change is the renaming from `RBookedDefines` to `RColumnRegister`:. we already abuse this class to also keep track of aliases. Soon we will also keep track of defined systematic variations here. With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9466
https://github.com/root-project/root/pull/9466:5,modifiability,Upgrad,Upgrades,5,[DF] Upgrades to RBookedDefines in preparation for systematic variations; The main change is the renaming from `RBookedDefines` to `RColumnRegister`:. we already abuse this class to also keep track of aliases. Soon we will also keep track of defined systematic variations here. With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9466
https://github.com/root-project/root/pull/9466:288,safety,patch,patch,288,[DF] Upgrades to RBookedDefines in preparation for systematic variations; The main change is the renaming from `RBookedDefines` to `RColumnRegister`:. we already abuse this class to also keep track of aliases. Soon we will also keep track of defined systematic variations here. With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9466
https://github.com/root-project/root/pull/9466:288,security,patch,patch,288,[DF] Upgrades to RBookedDefines in preparation for systematic variations; The main change is the renaming from `RBookedDefines` to `RColumnRegister`:. we already abuse this class to also keep track of aliases. Soon we will also keep track of defined systematic variations here. With this patch we clarify the role of this class with a more appropriate name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9466
https://github.com/root-project/root/pull/9467:14,energy efficiency,optim,optimizations,14,"Disable Cling optimizations in TCanvas::SaveSource; As discussed in https://github.com/root-project/root/issues/9312, long generated functions triggers edge cases in the optimizer passes and takes very long to compile for little to no gain in runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9467
https://github.com/root-project/root/pull/9467:170,energy efficiency,optim,optimizer,170,"Disable Cling optimizations in TCanvas::SaveSource; As discussed in https://github.com/root-project/root/issues/9312, long generated functions triggers edge cases in the optimizer passes and takes very long to compile for little to no gain in runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9467
https://github.com/root-project/root/pull/9467:14,performance,optimiz,optimizations,14,"Disable Cling optimizations in TCanvas::SaveSource; As discussed in https://github.com/root-project/root/issues/9312, long generated functions triggers edge cases in the optimizer passes and takes very long to compile for little to no gain in runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9467
https://github.com/root-project/root/pull/9467:170,performance,optimiz,optimizer,170,"Disable Cling optimizations in TCanvas::SaveSource; As discussed in https://github.com/root-project/root/issues/9312, long generated functions triggers edge cases in the optimizer passes and takes very long to compile for little to no gain in runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9467
https://github.com/root-project/root/issues/9468:544,availability,error,error,544,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:846,availability,error,error,846,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1496,availability,error,error,1496,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1571,availability,failur,failure,1571,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1863,availability,error,error,1863,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:519,deployability,fail,fails,519,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:735,deployability,build,build,735,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:745,deployability,releas,release,745,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:797,deployability,build,build,797,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:807,deployability,releas,release,807,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1005,deployability,build,build,1005,"fit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1015,deployability,releas,release,1015," compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1216,deployability,build,build,1216,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1226,deployability,releas,release,1226,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1522,deployability,build,build,1522,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1532,deployability,releas,release,1532,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1571,deployability,fail,failure,1571,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1598,deployability,build,build,1598,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1608,deployability,releas,release,1608,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1679,deployability,build,build,1679,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1689,deployability,releas,release,1689,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1885,deployability,build,build,1885,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1914,deployability,build,build,1914,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1924,deployability,releas,release,1924,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:2039,deployability,build,build,2039,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:2049,deployability,releas,release,2049,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1142,energy efficiency,Current,Current,1142,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1395,energy efficiency,Current,Current,1395,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:544,performance,error,error,544,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:846,performance,error,error,846,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1496,performance,error,error,1496,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1571,performance,failur,failure,1571,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1863,performance,error,error,1863,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:12,reliability,doe,doesn,12,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:519,reliability,fail,fails,519,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1571,reliability,fail,failure,1571,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:544,safety,error,error,544,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:846,safety,error,error,846,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1496,safety,error,error,1496,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1863,safety,error,error,1863,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:437,usability,clear,clear,437,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:485,usability,behavi,behavior,485,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:544,usability,error,error,544,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:720,usability,User,Users,720,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:782,usability,User,Users,782,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:846,usability,error,error,846,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:990,usability,User,Users,990,"[RF] Roofit doesn't compile on Windows 64 bit; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1201,usability,User,Users,1201,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1482,usability,CUSTOM,CUSTOMBUILD,1482,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1496,usability,error,error,1496,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1507,usability,User,Users,1507,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1583,usability,User,Users,1583,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1664,usability,User,Users,1664,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1772,usability,Visual,Visual,1772,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1863,usability,error,error,1863,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1878,usability,Custom,Custom,1878,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:1899,usability,User,Users,1899,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/issues/9468:2024,usability,User,Users,2024,"[GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The compilation fails with the following error:. ```. Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap. In file included from input_line_9:58:. In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:. C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence. this issue. mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. static_cast<unsigned long>( ). CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9468
https://github.com/root-project/root/pull/9469:13,deployability,instal,installation,13,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:43,deployability,modul,modules,43,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:84,deployability,modul,modules,84,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:155,deployability,instal,installation,155,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:43,modifiability,modul,modules,43,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:84,modifiability,modul,modules,84,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:43,safety,modul,modules,43,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9469:84,safety,modul,modules,84,[PyROOT] Fix installation of PyROOT Python modules; Fix path on which PyROOT Python modules are looked up (`pythonization` -> `_pythonization`) during the installation procedure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9469
https://github.com/root-project/root/pull/9470:85,deployability,stack,stack,85,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:217,deployability,stack,stack,217,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:371,deployability,stack,stack,371,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:186,integrability,messag,message,186,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:223,integrability,buffer,buffer,223,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:308,integrability,buffer,buffer,308,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:340,integrability,buffer,buffer,340,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:186,interoperability,messag,message,186,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:26,performance,I/O,I/O,26,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:43,performance,time,time,43,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:238,performance,I/O,I/O,238,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:162,testability,simpl,simply,162,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:49,usability,user,users,49,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9470:162,usability,simpl,simply,162,"[IO] Fix RooFit workspace I/O.; For a long time, users had to increase their maximum stack size in order. to read RooFit workspaces. Otherwise, the process would simply end. without any message. The problem is an 8kB stack buffer for the I/O of stl sets, which is. always declared but rarely used. Here, the buffer is replaced with a. heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:. ```. tot. size call count frame size. 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b. 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**. 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer. 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config. 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj. 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at. 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer. 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj. 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl. 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,. 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at. 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at. 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at. 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at. ```. and after this fix:. ```. 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272. 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112. 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64. 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48. 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128. 7280	65	112	 65 libRIO.so`TBufferFile::Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9470
https://github.com/root-project/root/pull/9471:57,deployability,contain,container,57,"[http] do not list object members when object scanned as container; When scanning sub-elements with sniffer, it is allowed to get list. of object members. But this should not be performed for container. objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9471
https://github.com/root-project/root/pull/9471:192,deployability,contain,container,192,"[http] do not list object members when object scanned as container; When scanning sub-elements with sniffer, it is allowed to get list. of object members. But this should not be performed for container. objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9471
https://github.com/root-project/root/pull/9471:82,integrability,sub,sub-elements,82,"[http] do not list object members when object scanned as container; When scanning sub-elements with sniffer, it is allowed to get list. of object members. But this should not be performed for container. objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9471
https://github.com/root-project/root/pull/9471:273,integrability,sub,sub-directories,273,"[http] do not list object members when object scanned as container; When scanning sub-elements with sniffer, it is allowed to get list. of object members. But this should not be performed for container. objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9471
https://github.com/root-project/root/pull/9471:178,performance,perform,performed,178,"[http] do not list object members when object scanned as container; When scanning sub-elements with sniffer, it is allowed to get list. of object members. But this should not be performed for container. objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9471
https://github.com/root-project/root/pull/9471:178,usability,perform,performed,178,"[http] do not list object members when object scanned as container; When scanning sub-elements with sniffer, it is allowed to get list. of object members. But this should not be performed for container. objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9471
https://github.com/root-project/root/pull/9472:32,energy efficiency,Draw,DrawXXX,32,Return pointer to XXX object in DrawXXX methods.; This was not uniform as explain in this issue:. https://github.com/root-project/root/issues/6966.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9472
https://github.com/root-project/root/pull/9473:39,deployability,version,version,39,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:142,deployability,version,version,142,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:189,deployability,instal,installed,189,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:254,deployability,modul,module,254,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:335,deployability,configurat,configuration,335,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:405,deployability,fail,fail,405,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:414,deployability,fail,fail-on-missing,414,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:533,deployability,updat,updated,533,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:39,integrability,version,version,39,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:142,integrability,version,version,142,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:335,integrability,configur,configuration,335,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:39,modifiability,version,version,39,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:142,modifiability,version,version,142,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:254,modifiability,modul,module,254,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:335,modifiability,configur,configuration,335,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:405,reliability,fail,fail,405,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:414,reliability,fail,fail-on-missing,414,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:254,safety,modul,module,254,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:503,safety,test,tested,503,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:533,safety,updat,updated,533,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:335,security,configur,configuration,335,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:533,security,updat,updated,533,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:503,testability,test,tested,503,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/pull/9473:22,usability,minim,minimum,22,"[RF][cmake] check the minimum required version for cppzmq; # This Pull request:. ## Changes or fixes:. Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9473
https://github.com/root-project/root/issues/9474:49,deployability,version,version,49,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:137,deployability,version,version,137,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:526,deployability,version,version,526,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:754,deployability,version,version,754,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:779,deployability,observ,observing,779,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:49,integrability,version,version,49,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:137,integrability,version,version,137,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:526,integrability,version,version,526,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:754,integrability,version,version,754,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:49,modifiability,version,version,49,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:137,modifiability,version,version,137,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:526,modifiability,version,version,526,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:754,modifiability,version,version,754,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:779,testability,observ,observing,779,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:11,usability,behavi,behaviour,11,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:184,usability,minim,minimal,184,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/issues/9474:998,usability,behavi,behaviour,998,"Unexpected behaviour of SaveGraph in interpreted version; There is a difference between the result from the interpreted and the compiled version of `SaveGraph`. Consider the following minimal reproducible script. ```C++. void buggyGraph(){. ROOT::RDataFrame rd1(1);. auto branch1_1 = rd1.Define(""Branch_1_1_def"", ""1""). .Count();. auto branch1_2 = rd1.Define(""Branch_1_2_def"", ""2""). .Count();. ROOT::RDF::SaveGraph(rd1, ""buggyGraph.dot"");. gSystem->Exec(""dot -Tpng buggyGraph.dot -o buggyGraph.png"");. }. . /* for the compiled version. int main(){. buggyGraph();. return 0;. }. */. ```. It produces 2 different computation graphs when compiled (either with `g++` and `clang++`) and when interpreted (as a macro with `root`). . In particular, the compiled version is correct. . By observing the .dot files produced, one can see that the connections/edges between different nodes in SaveGraph are correct. Problem is that multiple nodes have the same counter when intrerpreted only (which is unwanted behaviour). Remark: This is the case for both jitted and unjitted code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9474
https://github.com/root-project/root/pull/9475:185,interoperability,platform,platform,185,"[RF] Use `ULong64_t` for persistent data member `RooDataHist::_curIndex`; Both `unsigned long` and `std::size_t` are not the right types for. getting a 64-bit unsigned integer on every platform. Following the. advice by @pcanal, `ULong64_t` is now used instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9475
https://github.com/root-project/root/pull/9476:879,deployability,build,build,879,"[llvm] Fix valgrind report (operlapping memcpy):; This is addressed by ecb00a77624c9/da45bd232165e in upstream llvm,. but with a much wider scope. Restrict the fix to what matters for llvm9. Addresses:. ==1932== Source and destination overlap in memcpy(0xbecac83c, 0xbecac83c, 100). ==1932== at 0x4839989: memcpy (vg_replace_strmem.c:1035). ==1932== by 0x62DD594: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:934,deployability,build,build,934,"[llvm] Fix valgrind report (operlapping memcpy):; This is addressed by ecb00a77624c9/da45bd232165e in upstream llvm,. but with a much wider scope. Restrict the fix to what matters for llvm9. Addresses:. ==1932== Source and destination overlap in memcpy(0xbecac83c, 0xbecac83c, 100). ==1932== at 0x4839989: memcpy (vg_replace_strmem.c:1035). ==1932== by 0x62DD594: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1111,deployability,build,build,1111,"m,. but with a much wider scope. Restrict the fix to what matters for llvm9. Addresses:. ==1932== Source and destination overlap in memcpy(0xbecac83c, 0xbecac83c, 100). ==1932== at 0x4839989: memcpy (vg_replace_strmem.c:1035). ==1932== by 0x62DD594: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1166,deployability,build,build,1166,"at matters for llvm9. Addresses:. ==1932== Source and destination overlap in memcpy(0xbecac83c, 0xbecac83c, 100). ==1932== at 0x4839989: memcpy (vg_replace_strmem.c:1035). ==1932== by 0x62DD594: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1332,deployability,build,build,1332,"035). ==1932== by 0x62DD594: void llvm::SmallVectorTemplateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1387,deployability,build,build,1387,"lateBase<char, true>::uninitialized_copy<char const, char>(char const*, char const*, char*, std::enable_if<std::is_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1690,deployability,build,build,1690,"har const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1745,deployability,build,build,1745," llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2033,deployability,build,build,2033,"::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2088,deployability,build,build,2088," (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2350,deployability,build,build,2350,"BEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileEx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2405,deployability,build,build,2405,"). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2536,deployability,build,build,2536,"moryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2591,deployability,build,build,2591,"*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2911,deployability,Modul,ModuleFileExtension,2911,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2971,deployability,Modul,ModuleFileExtension,2971,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3035,deployability,build,build,3035,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3090,deployability,build,build,3090,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3341,deployability,Modul,ModuleFileExtension,3341,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3401,deployability,Modul,ModuleFileExtension,3401,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3453,deployability,build,build,3453,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3508,deployability,build,build,3508,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3627,deployability,updat,updated,3627,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2286,energy efficiency,alloc,allocator,2286,"directingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2938,energy efficiency,alloc,allocator,2938,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3368,energy efficiency,alloc,allocator,3368,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2911,modifiability,Modul,ModuleFileExtension,2911,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2971,modifiability,Modul,ModuleFileExtension,2971,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3341,modifiability,Modul,ModuleFileExtension,3341,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3401,modifiability,Modul,ModuleFileExtension,3401,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1497,performance,Memor,MemoryBuffer,1497,"s_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::Compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1537,performance,Memor,MemoryBuffer,1537,"pe, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1840,performance,Memor,MemoryBuffer,1840,"ystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1880,performance,Memor,MemoryBuffer,1880,"sincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vecto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2696,performance,Memor,MemoryBuffer,2696,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2736,performance,Memor,MemoryBuffer,2736,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2911,safety,Modul,ModuleFileExtension,2911,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2971,safety,Modul,ModuleFileExtension,2971,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3341,safety,Modul,ModuleFileExtension,3341,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3401,safety,Modul,ModuleFileExtension,3401,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3597,safety,test,tested,3597,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3627,safety,updat,updated,3627,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1628,security,Intrus,IntrusiveRefCntPtr,1628,"ctorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1971,security,Intrus,IntrusiveRefCntPtr,1971," llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3627,security,updat,updated,3627,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:3597,testability,test,tested,3597,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1497,usability,Memor,MemoryBuffer,1497,"s_same<std::remove_const<char const>::type, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::Compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1537,usability,Memor,MemoryBuffer,1537,"pe, char>::value, void>::type*) (SmallVector.h:294). ==1932== by 0x62D5F67: void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*) (SmallVector.h:392). ==1932== by 0x9413D55: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1840,usability,Memor,MemoryBuffer,1840,"ystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:1880,usability,Memor,MemoryBuffer,1880,"sincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9413C4E: llvm::vfs::RedirectingFileSystemParser::parseEntry(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414BA0: llvm::vfs::RedirectingFileSystemParser::parse(llvm::yaml::Node*, llvm::vfs::RedirectingFileSystem*) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9414FDF: llvm::vfs::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vecto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2696,usability,Memor,MemoryBuffer,2696,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9476:2736,usability,Memor,MemoryBuffer,2736,"ome/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x9415176: llvm::vfs::getVFSFromYAML(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), llvm::StringRef, void*, llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D7D9D: (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.575] (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64D8CAA: (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DB45A: (anonymous namespace)::createCIImpl(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, cling::CompilerOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, bool) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). ==1932== by 0x64DD0E9: cling::CIFactory::createCI(llvm::StringRef, cling::InvocationOptions const&, char const*, std::unique_ptr<clang::ASTConsumer, std::default_delete<clang::ASTConsumer> >, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&) (in /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/build/lib/libCling.so). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9476
https://github.com/root-project/root/pull/9477:177,integrability,wrap,wrapped,177,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9477:9,performance,memor,memory,9,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9477:26,safety,test,testRooParamHistFunc,26,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9477:60,safety,test,test,60,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9477:26,testability,test,testRooParamHistFunc,26,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9477:60,testability,test,test,60,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9477:9,usability,memor,memory,9,"[RF] Fix memory leaks in `testRooParamHistFunc` and silence test output; The `RooAbsReal::createIntegral()` function returns an owning pointer,. so the return value needs to be wrapped in an `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9477
https://github.com/root-project/root/pull/9478:220,integrability,messag,messages,220,[RF] Change types of persistent `unsigned long` and `std::size_t` data members in RooFit classes to platform independent definitions; This is a follow up to https://github.com/root-project/root/pull/9475. See the commit messages for more info.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:100,interoperability,platform,platform,100,[RF] Change types of persistent `unsigned long` and `std::size_t` data members in RooFit classes to platform independent definitions; This is a follow up to https://github.com/root-project/root/pull/9475. See the commit messages for more info.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9478:220,interoperability,messag,messages,220,[RF] Change types of persistent `unsigned long` and `std::size_t` data members in RooFit classes to platform independent definitions; This is a follow up to https://github.com/root-project/root/pull/9475. See the commit messages for more info.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9478
https://github.com/root-project/root/pull/9479:166,availability,down,downloaded,166,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:255,availability,failur,failures,255,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:255,deployability,fail,failures,255,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:58,performance,cach,cache,58,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:121,performance,cach,cache,121,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:255,performance,failur,failures,255,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:421,performance,cach,cache,421,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:441,performance,concurren,concurrently,441,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:181,reliability,doe,does,181,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:205,reliability,doe,does,205,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:255,reliability,fail,failures,255,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:403,safety,test,tests,403,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9479:403,testability,test,tests,403,"[IO] Use a unique, temporary name while writing a file to cache; This way, if another process requests the file from the cache while. the file is still being written/downloaded, it does not ""find"" it. and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9479
https://github.com/root-project/root/pull/9480:133,deployability,updat,updated,133,Fix 9372; # This Pull request:. fixes various small bugs in RooJSONFactoryWSTool. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9372.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9480
https://github.com/root-project/root/pull/9480:103,safety,test,tested,103,Fix 9372; # This Pull request:. fixes various small bugs in RooJSONFactoryWSTool. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9372.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9480
https://github.com/root-project/root/pull/9480:133,safety,updat,updated,133,Fix 9372; # This Pull request:. fixes various small bugs in RooJSONFactoryWSTool. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9372.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9480
https://github.com/root-project/root/pull/9480:133,security,updat,updated,133,Fix 9372; # This Pull request:. fixes various small bugs in RooJSONFactoryWSTool. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9372.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9480
https://github.com/root-project/root/pull/9480:103,testability,test,tested,103,Fix 9372; # This Pull request:. fixes various small bugs in RooJSONFactoryWSTool. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/9372.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9480
https://github.com/root-project/root/pull/9481:215,safety,test,tested,215,Enable quiet mode on TH2::DoFitSlices; Quiet mode is not working on DoFitSlices because options in `TH2::DoFitSlices` are changed to lowercase on line 811 of TH2.cxx and comparisons are case sensitive. This was not tested locally and (AFAIK) not reported elsewhere .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9481
https://github.com/root-project/root/pull/9481:215,testability,test,tested,215,Enable quiet mode on TH2::DoFitSlices; Quiet mode is not working on DoFitSlices because options in `TH2::DoFitSlices` are changed to lowercase on line 811 of TH2.cxx and comparisons are case sensitive. This was not tested locally and (AFAIK) not reported elsewhere .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9481
https://github.com/root-project/root/pull/9482:636,deployability,updat,updated,636,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:449,integrability,pub,public,449,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:5,modifiability,Refact,Refactor,5,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:5,performance,Refactor,Refactor,5,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:562,safety,test,tests,562,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:606,safety,test,tested,606,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:636,safety,updat,updated,636,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:636,security,updat,updated,636,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:557,testability,unit,unit,557,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:562,testability,test,tests,562,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:606,testability,test,tested,606,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:58,usability,usab,usability,58,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9482:498,usability,user,users,498,"[RF] Refactor RooFitHS3 to solve various bugs and improve usability; # This Pull request. The first implementation of RooFitH3 had a number of shortcomings, which this PR addresses. In detail:. - It is now possible to read JSON files independent of the ordering. - A priority mechanism has been implemented for importers and exporters. - Duplicate and dead code has been removed. - Many small bugs have been fixed. - The JSONInterface has been made public and moved from Detail to Experimental, so users can write their own importers & exporters. - The two unit tests have been fixed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9482
https://github.com/root-project/root/pull/9483:75,interoperability,format,format,75,[ntuple] Use V1 serialization in DAOS backend; Switch from V0 to V1 binary format in the DAOS backend. This should remove the last traces of the V0 serialization code so that a follow-up PR can remove it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9483
https://github.com/root-project/root/pull/9483:131,testability,trace,traces,131,[ntuple] Use V1 serialization in DAOS backend; Switch from V0 to V1 binary format in the DAOS backend. This should remove the last traces of the V0 serialization code so that a follow-up PR can remove it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9483
https://github.com/root-project/root/pull/9486:408,deployability,manag,manage,408,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:408,energy efficiency,manag,manage,408,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2088,energy efficiency,CPU,CPU,2088,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2126,energy efficiency,clock,clock,2126,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2193,energy efficiency,CPU,CPU,2193,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2231,energy efficiency,clock,clock,2231,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2290,energy efficiency,reduc,reduction,2290,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2355,energy efficiency,CPU,CPU,2355,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2394,energy efficiency,clock,clock,2394,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2453,energy efficiency,reduc,reduction,2453,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2566,energy efficiency,CPU,CPU,2566,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2606,energy efficiency,clock,clock,2606,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:45,integrability,event,event,45,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:136,integrability,event,event,136,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:656,integrability,event,event,656,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1784,integrability,event,event,1784,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1375,interoperability,Format,Format,1375,"TreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2515,interoperability,registr,registration,2515,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:29,performance,lock,lock,29,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:109,performance,lock,lock,109,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:276,performance,time,timestamp,276,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:640,performance,lock,lock,640,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:853,performance,lock,lock,853,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:938,performance,lock,lock,938,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1646,performance,time,timestamp,1646,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2088,performance,CPU,CPU,2088,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2133,performance,time,time,2133,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2193,performance,CPU,CPU,2193,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2238,performance,time,time,2238,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2326,performance,lock,locks,2326,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2355,performance,CPU,CPU,2355,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2401,performance,time,time,2401,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2489,performance,lock,locks,2489,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2566,performance,CPU,CPU,2566,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2613,performance,time,time,2613,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:63,safety,avoid,avoids,63,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:408,safety,manag,manage,408,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:502,safety,safe,safety,502,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:591,safety,compl,completely,591,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1030,safety,test,test,1030,"k in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1062,safety,test,test,1062,"voids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1171,safety,test,testwrite,1171,". 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1779,safety,Test,Test,1779,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:29,security,lock,lock,29,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:109,security,lock,lock,109,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:198,security,hash,hashing,198,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:248,security,hash,hash,248,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:342,security,ident,identical,342,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:591,security,compl,completely,591,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:640,security,lock,lock,640,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:853,security,lock,lock,853,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:938,security,lock,lock,938,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1691,security,hash,hashes,1691,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2169,security,hash,hashing,2169,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2274,security,hash,hashing,2274,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2326,security,lock,locks,2326,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2437,security,hash,hashing,2437,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:2489,security,lock,locks,2489,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1030,testability,test,test,1030,"k in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1062,testability,test,test,1062,"voids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1171,testability,test,testwrite,1171,". 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1779,testability,Test,Test,1779,"in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:17.52.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:0,usability,Minim,Minimize,0,"Minimize use of global write lock in typical event loops; This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/pull/9486:1594,usability,Close,Close,1594,"tely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:. ```cpp. #include ""TFile.h"". #include ""TTree.h"". #include ""TString.h"". #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;. const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {. TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");. TTree *tree = new TTree(""tree"", """");. tree->Branch(""outval"", &outval);. for (unsigned int ientry = 0; ientry < nentries; ++ientry) {. tree->Fill();. }. tree->Write();. fout->Close();. // make sure that each key has a distinct timestamp to maximally. // provoke different hashes for streamer info in each file. std::this_thread::sleep_for(1100ms);. }. }. ```. Test event loop:. ```python. import ROOT. ROOT.gInterpreter.ProcessLine("".O3""). ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""). chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain). res = d.Sum(""outval""). resval = res.GetValue(). print(resval). ```. With 256 threads:. + Baseline:. Percent of CPU this job got: 391%. Elapsed (wall clock) time (h:mm:ss or m:ss): 5:17.52. + +hashing fix. Percent of CPU this job got: 453%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:15.25. + +hashing fix and reduction of remaining global write locks (this PR):. Percent of CPU this job got: 1639%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:38.98. + +hashing fix and reduction of remaining global write locks + remove TFile UUID registration (not in this PR anymore):. Percent of CPU this job got: 19861%. Elaps",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9486
https://github.com/root-project/root/issues/9487:176,availability,error,error,176,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:445,availability,error,error,445,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:938,availability,error,error,938,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1192,availability,error,error,1192," building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1442,availability,error,error,1442,"error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1461,availability,error,errorlevel,1461,"ve checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1708,availability,error,error,1708,"tps://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1947,availability,error,error,1947,"3: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1993,availability,error,errorlevel,1993,"oot\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2237,availability,error,error,2237,"roject\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2483,availability,error,error,2483,"mEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2726,availability,error,error,2726," [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2966,availability,error,error,2966,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2985,availability,error,errorlevel,2985,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3232,availability,error,error,3232,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3813,availability,Operat,Operating,3813,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:35,deployability,fail,fails,35,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:62,deployability,version,version,62,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:123,deployability,build,build,123,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:196,deployability,build,building,196,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:237,deployability,version,version,237,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:262,deployability,build,build,262,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:295,deployability,version,version,295,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:317,deployability,build,build,317,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:343,deployability,version,version,343,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:397,deployability,fail,fails,397,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:426,deployability,version,version,426,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:487,deployability,version,version,487,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:577,deployability,version,version,577,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3401,deployability,build,build,3401,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3624,deployability,instal,install,3624,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3773,deployability,build,build,3773,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3790,deployability,Releas,Release,3790,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:62,integrability,version,version,62,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:237,integrability,version,version,237,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:295,integrability,version,version,295,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:343,integrability,version,version,343,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:426,integrability,version,version,426,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:487,integrability,version,version,487,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:577,integrability,version,version,577,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:62,modifiability,version,version,62,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:237,modifiability,version,version,237,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:295,modifiability,version,version,295,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:343,modifiability,version,version,343,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:426,modifiability,version,version,426,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:487,modifiability,version,version,487,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:577,modifiability,version,version,577,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:176,performance,error,error,176,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:445,performance,error,error,445,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:938,performance,error,error,938,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1192,performance,error,error,1192," building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1442,performance,error,error,1442,"error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1461,performance,error,errorlevel,1461,"ve checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1708,performance,error,error,1708,"tps://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1947,performance,error,error,1947,"3: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1993,performance,error,errorlevel,1993,"oot\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2237,performance,error,error,2237,"roject\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2483,performance,error,error,2483,"mEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2726,performance,error,error,2726," [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2966,performance,error,error,2966,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2985,performance,error,errorlevel,2985,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3232,performance,error,error,3232,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:35,reliability,fail,fails,35,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:397,reliability,fail,fails,397,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:153,safety,test,tests,153,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:176,safety,error,error,176,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:445,safety,error,error,445,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:938,safety,error,error,938,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1025,safety,test,test,1025,"vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1192,safety,error,error,1192," building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1275,safety,test,test,1275," different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1442,safety,error,error,1442,"error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1461,safety,error,errorlevel,1461,"ve checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1541,safety,test,test,1541,"er cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1708,safety,error,error,1708,"tps://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1780,safety,test,test,1780,"0-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1947,safety,error,error,1947,"3: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1993,safety,error,errorlevel,1993,"oot\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2070,safety,test,test,2070,"ogram Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\So",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2237,safety,error,error,2237,"roject\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2316,safety,test,test,2316,":\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2483,safety,error,error,2483,"mEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2559,safety,test,test,2559,"els_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2726,safety,error,error,2726," [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2799,safety,test,test,2799,"ls_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2966,safety,error,error,2966,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2985,safety,error,errorlevel,2985,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3065,safety,test,test,3065,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3232,safety,error,error,3232,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3328,safety,test,test,3328,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:153,testability,test,tests,153,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1025,testability,test,test,1025,"vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1275,testability,test,test,1275," different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1541,testability,test,test,1541,"er cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1780,testability,test,test,1780,"0-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2070,testability,test,test,2070,"ogram Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\So",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2316,testability,test,test,2316,":\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2559,testability,test,test,2559,"els_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2799,testability,test,test,2799,"ls_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ##",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3065,testability,test,test,3065,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3328,testability,test,test,3328,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:176,usability,error,error,176,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:445,usability,error,error,445,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:552,usability,command,commands,552,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:627,usability,command,commands,627,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:654,usability,help,help,654,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:717,usability,user,user-images,717,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:846,usability,Visual,Visual,846,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:938,usability,error,error,938,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:957,usability,command,command,957,"SofieCompileModels_PyTorch.vcxproj fails to compile on pytest version 6.2.5; ### Describe the bug. Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1100,usability,Visual,Visual,1100,"ll,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1192,usability,error,error,1192," building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1350,usability,Visual,Visual,1350,"1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1442,usability,error,error,1442,"error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1461,usability,error,errorlevel,1461,"ve checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1616,usability,Visual,Visual,1616,"r cmake commands. Could you please help have a look at this issue? Thanks a lot! ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1708,usability,error,error,1708,"tps://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1855,usability,Visual,Visual,1855,"o\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1947,usability,error,error,1947,"3: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:1993,usability,error,errorlevel,1993,"oot\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2145,usability,Visual,Visual,2145,"VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2237,usability,error,error,2237,"roject\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2391,usability,Visual,Visual,2391,"oft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2483,usability,error,error,2483,"mEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2634,usability,Visual,Visual,2634,"terprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2726,usability,error,error,2726," [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2874,usability,Visual,Visual,2874,"erprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2966,usability,error,error,2966,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:2985,usability,error,errorlevel,2985,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3140,usability,Visual,Visual,3140,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3232,usability,error,error,3232,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3383,usability,behavi,behavior,3383,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3460,usability,Tool,Tools,3460,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3466,usability,Command,Command,3466,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/issues/9487:3653,usability,Visual,Visual,3653,"MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :VCEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :VCEnd"" exited with code 9009. [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]. ### Expected behavior. Project build successfully. ### To Reproduce. 1. Open a x64 Native Tools Command Prompt for VS 2019. 2. git clone --branch master https://github.com/root-project/root.git. 3. cd root. 4. mkdir build_amd64 && cd build_amd64. 5. pip install pytest. 5. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 -Droofit=off -Dtesting=ON -Droottest=ON .. 6. cmake --build . --config Release. ### Setup. 1. Operating system: Windows 10. 2. How you obtained ROOT, built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9487
https://github.com/root-project/root/pull/9488:193,deployability,updat,updated,193,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/pull/9488:26,modifiability,pac,package,26,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/pull/9488:117,modifiability,pac,package,117,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/pull/9488:163,safety,test,tested,163,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/pull/9488:193,safety,updat,updated,193,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/pull/9488:193,security,updat,updated,193,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/pull/9488:163,testability,test,tested,163,"Cosmetics, correcting the package name.; # This Pull request:. ## Changes or fixes:. Correcting the comment with the package name sql/sqlite. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9488
https://github.com/root-project/root/issues/9489:1352,availability,monitor,monitor,1352," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1998,availability,Operat,Operating,1998," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2105,availability,down,download,2105," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1352,deployability,monitor,monitor,1352," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1977,deployability,version,version,1977," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2087,deployability,instal,install,2087," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2155,deployability,manag,manager,2155," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1352,energy efficiency,monitor,monitor,1352," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2155,energy efficiency,manag,manager,2155," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:29,integrability,messag,messages,29,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1619,integrability,messag,message,1619," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1717,integrability,messag,messages,1717," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1833,integrability,messag,message,1833," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1892,integrability,messag,message,1892," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1977,integrability,version,version,1977," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:29,interoperability,messag,messages,29,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1619,interoperability,messag,message,1619," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1717,interoperability,messag,messages,1717," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1741,interoperability,share,share,1741," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1833,interoperability,messag,message,1833," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1892,interoperability,messag,message,1892," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:565,modifiability,Exten,Extended,565,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:706,modifiability,Exten,Extended,706,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1977,modifiability,version,version,1977," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2147,modifiability,pac,package,2147," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2184,modifiability,pac,pacman,2184," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1789,performance,time,time,1789," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1352,reliability,monitor,monitor,1352," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:992,safety,prevent,prevent,992,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1331,safety,compl,completely,1331," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1352,safety,monitor,monitor,1352," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2155,safety,manag,manager,2155," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:992,security,preven,prevent,992,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1331,security,compl,completely,1331," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1352,testability,monitor,monitor,1352," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2207,testability,context,context,2207," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:2236,testability,context,context,2236," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:70,usability,Progress,Progress,70,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:830,usability,user,user-images,830,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:953,usability,progress,progress,953,"[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.; ### Explain what you would like to see improved. When running:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1204,usability,user,user-images,1204,"oGaussian.h"". #include ""RooAddPdf.h"". #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1609,usability,PROGRESS,PROGRESS,1609," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9489:1865,usability,progress,progress,1865," using namespace RooFit;. void rf801_mcstudy(). {. RooRealVar x(""x"", ""x"", 0, 10);. x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);. RooRealVar sigma(""sg"", """", 0.5);. RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));. //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)). mcstudy->generateAndFit(1000, 1000);. }. ```. ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python. msg = ROOT.RooMsgService.instance(). str_z=msg.getStream(0). str_z.minLevel = ROOT.RooFit.WARNING. ```. which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved. If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one. 2. Use a progress bar for the `run` message. ### To Reproduce. You can just run the code I put above. ### Setup. 1. ROOT version: 6.24/06. 2. Operating system: Linux manjaro 5.15.7-1-MANJARO. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9489
https://github.com/root-project/root/issues/9490:3163,availability,Operat,Operating,3163," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3238,availability,down,download,3238," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:981,deployability,contain,contain,981,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:1367,deployability,build,build,1367,"sue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3151,deployability,version,version,3151," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3220,deployability,instal,install,3220," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3151,integrability,version,version,3151," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:826,interoperability,specif,specify,826,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3305,interoperability,distribut,distribution,3305," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:40,modifiability,paramet,parameters,40,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:669,modifiability,paramet,parameters,669,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:1007,modifiability,paramet,parameters,1007,"udy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3151,modifiability,version,version,3151," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:16,reliability,doe,does,16,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:1321,safety,input,input,1321,"o add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:579,security,access,access-roomcstudy-genpardataset,579,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3334,testability,context,context,3334," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:3363,testability,context,context,3363," ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is not the case if an internal constraint is used:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 6.24/06. macOS. conda-forge distribution. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:442,usability,clear,clear,442,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:490,usability,behavi,behavior,490,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
https://github.com/root-project/root/issues/9490:708,usability,document,documentation,708,"[RF] RooMCStudy does not save generated parameters; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported in the forum [here](https://root-forum.cern.ch/t/cannot-access-roomcstudy-genpardataset/46724), `keepGenData` is not sufficient to save generated parameters, despite the claims of the [documentation](https://root.cern.ch/doc/v624/classRooMCStudy.html#aa8654b8fcb5983d834c02489a35c9981). One must *also* specify an *internal* constraint. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. `genParDataSet` should contain the values of the parameters used in dataset generation if `keepGenData=True` in `RooMCStudy::generate` (or `::run` or `::generateAndFit`). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:. ```python. import ROOT as r. ws = r.RooWorkspace(""workspace""). x = ws.factory(""x[-10, 10]""). pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""). pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""). pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)). mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(). print(""yes"" if gen_ds else ""no""). ```. This is still the case if an external constraint is used:. ```python. import ROOT as r. ws = r.RooWor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9490
